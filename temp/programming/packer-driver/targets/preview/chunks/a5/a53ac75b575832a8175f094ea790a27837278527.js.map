{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/InterfaceDefines.ts"],"names":["inf_ViewParams","inf_LayerType","bundle","params","valid","node","isAutoRecover","isClickSpanceClose"],"mappings":";;;kEAkHaA,c;;;;;;;;;;;;;;;;;;;;iBAvGDC,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;AAAAA,QAAAA,a;SAAAA,a,6BAAAA,a;;AAsGZ;gCACaD,c,GAAN,MAAMA,cAAN,CAAqB;AAAA;AAAA,eAIjBE,MAJiB,GAIA,WAJA;AAAA,eAQjBC,MARiB;AAAA,eAcjBC,KAdiB,GAcA,IAdA;AAAA,eAgBjBC,IAhBiB,GAgBG,IAhBH;AAAA,eAkBjBC,aAlBiB,GAkBQ,KAlBR;AAAA,eAoBjBC,kBApBiB,GAoBa,KApBb;AAAA;;AAAA,O;AAsB5B","sourcesContent":["/**\n * Name = InterfaceDefines\n * URL = db://assets/framework/InterfaceDefines.ts\n * Time = Thu Apr 14 2022 12:03:00 GMT+0800 (中国标准时间)\n * Author = xueya\n * Gui模块常用接口类型定义\n */\n\nimport { Node, Vec3 } from \"cc\";\n\n/** UI出现的类型 */\nexport enum inf_LayerType {\n    Game = \"LayerGame\",     //游戏界面\n    UI = \"LayerUI\",         //ui界面(相同路径的预制体可同时存在)\n    PopUp = \"LayerPopUp\",   //弹窗(底部有黑色蒙版 屏蔽往下传递点击 多个节点可同时存在 不区分路径)\n    Dialog = \"LayerDialog\", //弹窗(继承LayerPopUp) 该层的节点将一次只显示一个\n    DialogTip = \"LayerDialogTip\", //弹窗(继承LayerPopUp) 该层的节点将一次只显示一个 dialog的子级\n    Alert = \"LayerAlert\",   //系统弹窗(继承LayerPopUp) 该层的节点将一次只显示一个\n    Animal = \"LayerDialogAnimal\",   //动画弹窗(继承LayerPopUp) 该层的节点将一次只显示一个\n    NetWindow = \"LayerNet\",//网络弹窗(继承LayerPopUp)该层的弹窗一次只能显示一个 且删除时会删除队列\n    Notify = \"LayerNotify\", //通知(吐司)同一个路径 会存入队列中 依次弹出\n    Guide = \"LayerGuide\"    //引导层 普通node\n}\n/** 资源配置结构体 */\nexport interface inf_GameResData {\n    /** 包名 */\n    bundle?: string,\n    /** 资源路径 */\n    path: string,\n    /** plist文件key */\n    plistKey?: string,\n}\n\n/** UI配置结构体 */\nexport interface inf_UIConfig {\n    /** 预制体路径(必填) */\n    prefab: string;\n    /** 包名(非必填 默认resource) */\n    bundle?: string;\n    /** ui类型 */\n    layer?: inf_LayerType;\n    animation?: number;\n    isSpine?: boolean;\n}\n\n/** UI配置的数据结构体 */\nexport interface inf_UIDataConfig {\n    /** uiid */\n    uiID: any,\n    /** 菜单id */\n    menuID?: any,\n    /** 红点ID */\n    reddotID?: any,\n    /** 弹窗ID */\n    popID?: any,\n}\n\n/*** 回调参数对象定义 */\nexport interface inf_UICallbacks {\n    /** 节点将要添加到层级的回调(预留 暂时未实现) */\n    onWillAdd?: (node: Node, params: any) => void,\n\n    /** 节点添加到层级以后的回调 */\n    onAdded?: (node: Node, params: any) => void,\n\n    /**\n     * destroy之后回调\n     */\n    onRemoved?: (node: Node | null, viewParams: inf_ViewParams) => void,\n    /** \n     * 注意：调用`delete`或`$delete`才会触发此回调，如果`this.node.destroy()`，该回调将直接忽略。\n     * \n     * 如果指定onBeforeRemoved，则next必须调用，否则节点不会被正常删除。\n     * \n     * 比如希望节点做一个FadeOut然后删除，则可以在`onBeforeRemoved`当中播放action动画，动画结束后调用next\n     * \n     * */\n    onBeforeRemove?: (node: Node, next: Function) => void\n}\n\n/** gui.popup.add 弹框层回调对象定义 */\nexport interface inf_PopViewParams extends inf_UICallbacks {\n    /** 是否显示暗色背景 */\n    modal?: boolean,\n\n    /** 是否触摸背景关闭弹窗 */\n    touchClose?: boolean,\n\n    /** 控制暗色背景的透明度 默认为190*/\n    opacity?: number;\n}\n/** 通用对话框的按钮配置 */\nexport interface inf_PopWindowButton {\n    label: string,   //按钮文字\n    click: Function, //按钮的点击事件\n}\n\n/** PopWindow 通用窗口数据传递配置*/\nexport interface inf_PopWindowParams {\n    title: string,          //窗口标题名\n    txt_title?: string,      //正文大标题\n    txt_desc?: string,       //正文内容\n    txt_fontSize?: number,   //标题文字大小\n    dec_fontSize?: number,   //正文内容文字大小\n    alignLeftTop?: boolean,   //正文是否从左上开始\n    notshowClose?: boolean,   //不显示关闭按钮\n    notAutoClickClose?: boolean,   //点击后不自动关闭\n    buttonsMap?: Array<inf_PopWindowButton>,   //按钮配置队列\n    web_url?: string,          //webview地址\n    itemData?: Array<any>, //购买商品数据\n    isGoodsContent?: boolean,//是否显示商品内容\n}\n\n/** 本类型仅供gui模块内部使用，请勿在功能逻辑中使用 */\nexport class inf_ViewParams {\n    /** 界面唯一标识 */\n    public uuid!: string;\n    /** 分包包名 */\n    public bundle: string = \"resources\";\n    /** 预制路径 */\n    public prefabPath!: string;\n    /** 传递给打开界面的参数 */\n    public params: any | null;\n    /** 窗口事件 */\n    public callbacks!: inf_UICallbacks | null;\n    /** LayerUI事件 */\n    public noticeToRoot!: inf_UICallbacks | null;\n    /** 是否在使用状态 */\n    public valid: boolean = true;\n    /** 界面根节点 */\n    public node: Node | null = null;\n    /** 资源自动回收 */\n    public isAutoRecover: boolean = false;\n    /** 是否点击自动关闭 */\n    public isClickSpanceClose: boolean = false;\n}\n/** 进入房间的缓存数据参数接口 */\nexport interface inf_GameIntoParams {\n    /** 游戏ID */\n    GameID: number;\n    Level: number;\n    TableID: number;\n    /** 是否重连进桌 */\n    isReconn?: boolean,\n}\n/** 界面登录时传递的参数 */\nexport interface inf_LoginViewInfo {\n    /** access_token */\n    access_token: any,\n    /** 用户Uid */\n    openId: any,\n    /** 用户信息 */\n    userinfo: any,\n}\n/** 订单记录 */\nexport interface inf_OrderRecord {\n    id: any,\n    order: any,\n    reportData: any\n}\n/** 网络地址配置 */\nexport interface inf_AppUrlConf {\n    /** 自定义命名 */\n    Name: string,\n    /** socket地址 */\n    Socket: any,\n    /** wb地址 */\n    Web: any,\n    /** 下载地址 */\n    DownLoad?: string,\n    /** H5地址 */\n    H5?: string,\n}\n/** pb文件对应的序列 */\nexport interface inf_PBConf {\n    /** pb文件路径 */\n    FilePath: string,\n    /** pb文件包名 */\n    PackageName: string,\n    /** pb文件解析/包装类 */\n    Class?: any\n}\n\n/** Spine动画的添加创建 */\nexport interface inf_SpineAniCreate {\n    /** 动画资源路径 */\n    resConf: { bundle: string, path: string },\n    /** 动画名 */\n    aniName: string,\n    /** 父节点 Node */\n    parentNode?: Node,\n    /** 帧位置 number */\n    trackIndex?: number,\n    /** 是否循环播放 */\n    isLoop?: boolean,\n    /** 是否预乘 */\n    isPremult?: boolean,\n    /** 要添加的位置 */\n    toPos?: Vec3,\n    /** skin:皮肤 */\n    skin?: any,\n    /** 动画开始的监听 */\n    callStartFunc?: Function,\n    /** 动画结束的监听 */\n    callEndFunc?: Function,\n    /** 一次循环结束的监听 */\n    oneLoopEndcallFunc?: Function,\n    /** 执行过程中的动作监听 */\n    processCallFunc?: Function,\n    /** 帧刷数量 值越大 刷新越快 不能超过当前最大帧率 */\n    frameNum?: number,\n}\n/** 资源的加载 */\nexport interface inf_ResLoader {\n    /** 包名 remote资源地址可为空 */\n    bundle?: string,\n    /** 资源路径或http路径 */\n    path: string,\n    /** 资源类型 例如 Prefab 或'.jpg' */\n    resType: any,\n    /** 回调函数 */\n    callFunc?: Function,\n    /** 是否重新加载 默认false 非必填 */\n    isReload?: boolean,\n}\n/** 音乐/音效文件的播放 */\nexport interface inf_AudioPlay {\n    /** 包名 remote资源地址可为空 */\n    bundle?: string,\n    /** 资源路径或http路径 */\n    path: string,\n    /** 是否循环播放 */\n    isLoop?: boolean,\n    /** 播放完成的监听(仅当 isLoop = false时有效) */\n    callEndFunc?: Function,\n}\n\n/** 要添加的加载任务 */\nexport interface inf_PkgLoaderTaskAdd {\n    /** 任务ID */\n    taskID: any,\n    /** 任务队列 */\n    taskList: inf_PkgLoaderTaskList,\n    /** 开始的回调 */\n    startCallFunc?: Function,\n    /** 更新的回调 */\n    updateCallFunc?: Function,\n    /** 完成的回调*/\n    endCallFunc?: Function\n}\n/** 每一个任务队列 */\nexport interface inf_PkgLoaderTaskList {\n    /** 是否加载pb */\n    protobuf?: boolean,\n    /** 加载的包 */\n    package?: Array<string>,\n    /** 预制体队列 */\n    prefab?: Array<inf_GameResData>,\n    /** 音效队列 */\n    audio?: Array<inf_GameResData>,\n    /** spine动画队列 */\n    spine?: Array<inf_GameResData>,\n}\n\n/** 订单创建时的itemData参数 */\nexport interface inf_CreaterOrderMallItem {\n    /** 商品分类， 热销、金豆、钻石、道具、装饰、角色等 */\n    pageID?: number,\n    /** 子标签页ID */\n    childID?: number,\n    /** 商品ID */\n    goodsID: number,\n    /** 支付方式ID */\n    payID: number,\n}\n\n/** 支付参数 */\nexport interface inf_PayParams {\n    /** 付费场景 */\n    scene: any,\n    /** 物品信息 */\n    goodsInfo: any,\n    /** 创建订单时的信息 */\n    itemData: inf_CreaterOrderMallItem,\n    /** 消费目的类型 0-给自己 1给好友 */\n    costType?: number,\n    /** 给谁 */\n    toUid?: number,\n    /** 其它附属 */\n    ext?: object\n}\n\n/** 界面跳转参数 */\nexport interface inf_JumpViewParams {\n    /** 要跳转的地址 */\n    url: string,\n    /** 失败跳转的回调 */\n    errCallback?: Function,\n    /** 即将成功跳转的回调 */\n    sucCallback?: Function,\n}\n/** 点击上报的数据参数 */\nexport interface inf_ClickReport {\n    /** 事件ID */\n    eventID: any,\n    /** 事件参数 */\n    body?: any,\n    /** 是否强行上报 */\n    isForce?: boolean,\n}\n/** 获得物品 */\nexport interface inf_GetPropItem {\n    /** 物品icon */\n    icon?: string,\n    /**物品名称 */\n    name: string,\n    /** 物品数量 */\n    num: number,\n    /** 加赠 */\n    newAdd?: boolean\n}\n"]}