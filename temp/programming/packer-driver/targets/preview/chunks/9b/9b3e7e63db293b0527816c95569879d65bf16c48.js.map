{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/gui/button/ButtonTouchLong.ts"],"names":["Component","error","EventHandler","Node","Rect","UITransform","Vec3","_decorator","ccclass","property","menu","ButtonTouchLongStatus","START","RUN","END","ButtonTouchLong","tooltip","min","visible","touchlongtime","type","_touchHandler","_touchParam","_isTouchLong","_currowPassTime","_currowEvent","_currowBoxRect","_isCanCallback","_isOnload","_isRegEvent","Interactable","bool","interactable","updateRegEventState","CanCallback","onLoad","regTouchEvent","unRegTouchEvent","node","on","EventType","TOUCH_START","onTouchtStart","TOUCH_MOVE","onTouchtMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","isValid","off","setCustomEventHandler","findNode","component","handler","customEventData","clickLongFunc","target","setCustomEventData","addTouchEventListener","callback","param","event","uiTransform","getComponent","width","Math","abs","scale","x","height","y","worldPos","getWorldPosition","nodeLeftBottomPos","anchorX","anchorY","checkRect","propagationStopped","oldEvent","isTouchLong","onClickCallback","onceLongCallback","onLongClickCallback","removeTouchLong","update","dt","status","touchWorldPos","touch","getUILocation","contains","emit","clickFunc","onDestroy"],"mappings":"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","sourcesContent":["/**\n * Name = ButtonTouchLong\n * URL = db://assets/framework/gui/button/ButtonTouchLong.ts\n * Time = Thu Apr 07 2022 13:02:05 GMT+0800 (中国标准时间)\n * Author = xueya\n * 长按按钮点击(触摸事件)\n */\nimport { Component, error, EventHandler, EventTouch, Node, Rect, UITransform, Vec3, _decorator } from \"cc\";\n\nlet { ccclass, property, menu } = _decorator;\n\n/** ButtonTouchLong 回调时的状态 */\nexport const ButtonTouchLongStatus = {\n    /** 开始点击(只有长按才有) */\n    START: \"START\",\n    /** 运行时(只有长按才有) */\n    RUN: \"RUNNING\",\n    /** 点击结束 */\n    END: \"END\",\n}\n\n@ccclass(\"ButtonTouchLong\")\n//方便编辑器识别的菜单项目\n@menu('gui/button/ButtonTouchLong')\nexport class ButtonTouchLong extends Component {\n    @property({\n        tooltip: \"按钮是否可交互,这一项未选中时，按钮处于事件禁用状态\"\n    })\n    private interactable: boolean = true;\n\n    @property({\n        tooltip: \"长按时间（秒）等于0则为点击\",\n        min: 0,\n    })\n    private touchlongtime: number = 1;\n\n    @property({\n        tooltip: \"长按时是否只回调一次\",\n        visible: function () { return this.touchlongtime > 0 }\n    })\n    private onceLongCallback: boolean = false;\n\n    @property({\n        tooltip: \"长按的回调监听函数\",\n        type: EventHandler,\n        visible: function () { return this.touchlongtime > 0 }\n    })\n    private clickLongFunc = new EventHandler();\n\n    @property({\n        tooltip: \"点击的回调监听函数\",\n        type: EventHandler\n    })\n    private clickFunc = new EventHandler();\n\n    /** 自定义点击回调 */\n    private _touchHandler: Function = null;\n    /** 自定义点击传递数据 */\n    private _touchParam = null;\n\n    /** 是否处于长按状态 */\n    private _isTouchLong = false;\n    /** 当前长按的时间 */\n    private _currowPassTime = 0;\n    /** 当前按下的事件 */\n    private _currowEvent: EventTouch = null;\n\n    /** 当前节点包围盒 */\n    private _currowBoxRect: Rect = null;\n    /** 是否支持回调 */\n    private _isCanCallback: boolean = false;\n    /** 是否加载完毕 */\n    private _isOnload: boolean = false;\n    /** 是否注册了事件 */\n    private _isRegEvent: boolean = false;\n\n    /**\n     * 按钮是否可交互\n     * @param bool \n     */\n    set Interactable(bool: boolean) {\n        if (typeof (bool) != \"boolean\") {\n            error(`setInteractable 参数类型传递错误 期待:boolean 结果:${typeof (bool)}`)\n            return;\n        }\n        this.interactable = bool == null ? true : bool;\n        this.updateRegEventState();\n    }\n    /**\n     * 按钮是否可交互\n     */\n    get Interactable(): boolean {\n        return this.interactable;\n    }\n    /** 设置是否可以回调(只在按下过程中起作用) */\n    set CanCallback(bool: boolean) {\n        this._isCanCallback = (bool == false ? false : true);\n    }\n\n    onLoad() {\n        this._isOnload = true;\n        this.regTouchEvent();\n    }\n    /** 更新注册事件的状态 */\n    updateRegEventState() {\n        if (!this._isOnload) {\n            return;\n        }\n        if (this.interactable == true) {\n            if (this._isRegEvent == false) {\n                this.regTouchEvent();\n            }\n        } else {\n            if (this._isRegEvent == true) {\n                this.unRegTouchEvent();\n            }\n        }\n    }\n    /** 注册定义事件 */\n    protected regTouchEvent() {\n        if (!this.node) {\n            return;\n        }\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchtStart, this);\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchtMove, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n        this._isRegEvent = true;\n    }\n    /** 卸载注册事件 */\n    protected unRegTouchEvent() {\n        if (!this.node || !this.node.isValid) {\n            return;\n        }\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchtStart, this);\n        this.node.off(Node.EventType.TOUCH_MOVE, this.onTouchtMove, this);\n        this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n        this._isRegEvent = false;\n    }\n    /**\n     * 公开:设置自定义点击函数\n     * @param findNode 要绑定的函数所在的组件类绑定的节点\n     * @param component 要绑定的函数所在的组件\n     * @param handler 要绑定的函数\n     * @param customEventData 自定义传递数据\n     */\n    public setCustomEventHandler(findNode: Node = null, component: string = null, handler: string = null, customEventData: string = null) {\n        this.clickLongFunc.target = findNode;\n        this.clickLongFunc.component = component;\n        this.clickLongFunc.handler = handler;\n        this.setCustomEventData(customEventData);\n    };\n    /**\n     * 公开:设置自定义点击传递数据\n     * @param customEventData 自定义传递数据\n     */\n    public setCustomEventData(customEventData = null) {\n        this.clickLongFunc.customEventData = customEventData;\n        this._touchParam = customEventData;\n    };\n\n    /**\n     * 公开:设置监听函数\n     * @param callback 要绑定的函数\n     * @param param 要传递的参数\n     */\n    public addTouchEventListener(callback: Function = null, param = null) {\n        this._touchHandler = callback;\n        this.setCustomEventData(param);\n    }\n\n    /** 触摸开始 */\n    onTouchtStart(event: EventTouch) {\n        this._currowEvent = event;\n        this._currowPassTime = 0;\n        this._currowBoxRect = null;\n        this._isCanCallback = true;\n        this._isTouchLong = false;\n\n        let uiTransform = this.node.getComponent(UITransform);\n        if (uiTransform) {\n            //计算滑动的矩形区域\n            let width = Math.abs(uiTransform.width) * Math.abs(this.node.scale.x);\n            let height = Math.abs(uiTransform.height) * Math.abs(this.node.scale.y);\n            let worldPos = new Vec3();\n\n            this.node.getWorldPosition(worldPos);\n            // 矩形左下点的坐标。\n            let nodeLeftBottomPos = {\n                x: worldPos.x,\n                y: worldPos.y\n            }\n            // console.log(\"世界坐标:\", worldPos)\n            if (uiTransform.anchorX < 0 || uiTransform.anchorX > 1 || uiTransform.anchorY < 0 || uiTransform.anchorY > 1) {\n                return;\n            }\n            nodeLeftBottomPos.x = nodeLeftBottomPos.x - width * uiTransform.anchorX;\n            nodeLeftBottomPos.y = nodeLeftBottomPos.y - height * uiTransform.anchorY;\n            //矩形盒子大小\n            this._currowBoxRect = new Rect(nodeLeftBottomPos.x, nodeLeftBottomPos.y, width, height);\n        }\n\n    }\n\n    /** 触摸移动 */\n    onTouchtMove(event: EventTouch) {\n        this._currowEvent = event;\n        this.checkRect();\n    }\n    /** 触摸结束 */\n    onTouchEnd(event: EventTouch) {\n        if (this._currowPassTime > this.touchlongtime) {\n            event.propagationStopped = true;\n        }\n        //说明可以触发点击\n        let oldEvent = this._currowEvent;\n        let isTouchLong = this._isTouchLong;\n\n        this._currowEvent = event;\n        this.checkRect();\n\n        this._currowEvent = null;\n        this._isTouchLong = false;\n        this._currowPassTime = 0;\n        if (isTouchLong == false && oldEvent != null && this._isCanCallback == true) {//非长按\n            this.onClickCallback(event, ButtonTouchLongStatus.END);\n        }\n        if (isTouchLong == true && oldEvent != null && this.onceLongCallback == false) {//最后一次长按\n            this.onLongClickCallback(event, ButtonTouchLongStatus.END);\n        }\n        this._isCanCallback = false;\n    }\n    /** 移除长按 */\n    removeTouchLong() {\n        this._currowEvent = null;\n        this._isTouchLong = false;\n        this._isCanCallback = false;\n    }\n\n    /** 引擎更新事件 */\n    update(dt: number) {\n        if (this._currowEvent && this.interactable == true && this._isCanCallback == true) {\n            this._currowPassTime = this._currowPassTime + dt;\n            if (this.touchlongtime <= 0) {\n                this._isTouchLong = false;\n                this.onClickCallback(this._currowEvent, ButtonTouchLongStatus.END);\n                this.removeTouchLong();\n                return;\n            }\n            //以下长按\n            if (this._currowPassTime >= this.touchlongtime) {\n                let status = ButtonTouchLongStatus.RUN;\n                if (this._isTouchLong == false) {\n                    status = ButtonTouchLongStatus.START;\n                }\n                if (this.onceLongCallback == true) {\n                    status = ButtonTouchLongStatus.END;\n                }\n\n                this._isTouchLong = true;\n                this.onLongClickCallback(this._currowEvent, status);\n                if (this.onceLongCallback == true) {\n                    this.removeTouchLong();\n                }\n            }\n        }\n    }\n    /** 检查矩形区域 */\n    checkRect() {\n        if (this._currowEvent) {\n            let touchWorldPos = this._currowEvent.touch.getUILocation();\n            if (this._currowBoxRect) {\n                if (this._currowBoxRect.contains(touchWorldPos) == false) {\n                    this._isCanCallback = false;\n                }\n            }\n\n        }\n    }\n    /** 长按的回调 */\n    onLongClickCallback(event: EventTouch, status = null) {\n        // console.log(\"长按状态:\", status);\n        if (this._isCanCallback == false || this.interactable == false) {\n            return;\n        }\n        this.clickLongFunc?.emit([event, status, this.clickLongFunc?.customEventData])\n        if (this._touchHandler) {\n            this._touchHandler(event, status, this._touchParam);\n        }\n    }\n    /** 点击的回调 */\n    onClickCallback(event: EventTouch, status = null) {\n        // console.log(\"点击状态:\", status);\n        if (this._isCanCallback == false || this.interactable == false) {\n            return;\n        }\n        this.clickFunc?.emit([event, status, this.clickFunc?.customEventData])\n        if (this._touchHandler) {\n            this._touchHandler(event, status, this._touchParam);\n        }\n    }\n\n    onDestroy() {\n        this._currowEvent = null;\n        this.unRegTouchEvent();\n    }\n\n}\n"]}