{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeMeldCardCtr.ts"],"names":["_decorator","instantiate","Node","Vec3","EventManager","Utils","BaseComponent","RoomMgr","OPCode","FXJEvent","GameViewConfig","CardUtil","NodeCardCtr","ccclass","property","NodeMeldCardCtr","tooltip","type","_hostDir","_seatList","_dataList","_edgeList","_distanceList","onInitModuleEvent","onLoad","initData","initView","start","Array","dir","nodeSeat","setRotationFromEuler","node","addChild","resetView","getInstance","mySeatId","getDir","CardConfig","EdgeToMeld","CenterToMeld","forEach","value","index","array","removeAllChildren","dirLocal","onGameStart","OnChangedSeat","hostDir","onPengGang","data","seatId","dirOut","cardSeatId","opCode","OPE_RIGHT_CHI","OPE_MIDDLE_CHI","OPE_LEFT_CHI","OPE_PENG","OPE_QIANG_PENG","makeMeldPeng","opCard","opCards","OPE_AN_GANG","makeMeldAnGang","OPE_GANG","makeMeldMingGang","OPE_BU_GANG","makeMeldBuGang","showAnim","who","calculatePlayerPosition","width","Width","height","Height","groundToCard","GroundToCard","rightToLeft","distance","buPos","middleCard","i","card","nodeCard","setPosition","SpaceMeldCard","active","getComponent","setCardByte","push","isNotNull","aniType","AnimType","Peng","pos","getWorldPosition","dispatch","VIEW_UI_3D_GET_CAMERA","VIEW_OUT_CARD_ANI_PLAY","dataList","length","map","contain","getWho","a","b","x","onGameOver","onReconnect","playerList","opGroups","dataItem","cards","onDestroy"],"mappings":"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","sourcesContent":["\nimport { _decorator, instantiate, Node, Vec3 } from 'cc';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { Utils } from '../../../framework/Utils';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { OPCode } from '../common/FXJConfig';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { CardUtil } from '../util/CardUtil';\nimport { NodeCardCtr } from './NodeCardCtr';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeMeldCardCtr\n * URL = db://assets/package/game/scripts/NodeMeldCardCtr.ts\n * Time = Mon Aug 14 2023 12:07:38 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('NodeMeldCardCtr')\nexport class NodeMeldCardCtr extends BaseComponent {\n    /** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n    /** 麻将位置列表 */\n    private _seatList: Node[] = null;\n\n    /** 麻将节点列表 */\n    private _dataList: GameViewConfig.MeldSeatConfig[][] = null;\n\n    /** 麻将与麻将桌边缘距离列表 */\n    private _edgeList: number[] = null;\n\n    /** 麻将与麻将桌中心距离列表 */\n    private _distanceList: number[] = null;\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    }\n\n    initData() {\n        this._seatList = new Array(4);\n        this._dataList = [[], [], [], []];\n        this._edgeList = [0, 0, 0, 0];\n        this._distanceList = [0, 0, 0, 0];\n\n    }\n\n    initView() {\n        for (let dir = 0; dir < 4; dir++) {\n            let nodeSeat = new Node();\n            nodeSeat.setRotationFromEuler(0, 90 * dir, 0);\n            this.node.addChild(nodeSeat);\n            this._seatList[dir] = nodeSeat;\n        }\n    }\n\n    resetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n\n        this._edgeList[this.getDir(0)] = GameViewConfig.CardConfig.EdgeToMeld[0]; // 本家配置\n        this._edgeList[this.getDir(1)] = GameViewConfig.CardConfig.EdgeToMeld[1]; // 下家配置\n        this._edgeList[this.getDir(2)] = GameViewConfig.CardConfig.EdgeToMeld[2]; // 对家配置\n        this._edgeList[this.getDir(3)] = GameViewConfig.CardConfig.EdgeToMeld[3]; // 上家配置\n\n        this._distanceList[this.getDir(0)] = GameViewConfig.CardConfig.CenterToMeld[0]; // 本家配置\n        this._distanceList[this.getDir(1)] = GameViewConfig.CardConfig.CenterToMeld[1]; // 下家配置\n        this._distanceList[this.getDir(2)] = GameViewConfig.CardConfig.CenterToMeld[2]; // 对家配置\n        this._distanceList[this.getDir(3)] = GameViewConfig.CardConfig.CenterToMeld[3]; // 上家配置\n\n        this._dataList = [[], [], [], []];\n        this._seatList.forEach((value, index, array) => {\n            value.removeAllChildren();\n        });\n    }\n\n    private getDir(dirLocal: number): number {\n        let dir = this._hostDir + dirLocal;\n        return dir % 4;\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir;\n        this.resetView(); // 换位需要重置碰杠牌显示配置\n    }\n\n    /** 碰杠 */\n    onPengGang(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n        let dirOut = data.cardSeatId - 1;\n\n        switch (data.opCode) {\n            case OPCode.OPE_RIGHT_CHI: // 右吃\n            case OPCode.OPE_MIDDLE_CHI: // 中吃\n            case OPCode.OPE_LEFT_CHI: // 左吃\n            case OPCode.OPE_PENG: // 碰\n            case OPCode.OPE_QIANG_PENG: // 抢碰\n                this.makeMeldPeng(dir, dirOut, data.opCode, data.opCard, data.opCards, true);\n                break;\n            case OPCode.OPE_AN_GANG: // 暗杠\n                this.makeMeldAnGang(dir, dirOut, data.opCode, data.opCard, data.opCards, false);\n                break;\n            case OPCode.OPE_GANG: // 杠\n                this.makeMeldMingGang(dir, dirOut, data.opCode, data.opCard, data.opCards, false);\n                break;\n            case OPCode.OPE_BU_GANG: // 补杠\n                this.makeMeldBuGang(dir, dirOut, data.opCode, data.opCard, data.opCards, false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** 碰 */\n    private makeMeldPeng(dir: number, dirOut: number, opCode: number, opCard: number, opCards: number[], showAnim: boolean) {\n        let who = CardUtil.calculatePlayerPosition(dir + 1, dirOut + 1);\n        let width = GameViewConfig.CardConfig.Width;\n        let height = GameViewConfig.CardConfig.Height;\n        let groundToCard = GameViewConfig.CardConfig.GroundToCard;\n        let rightToLeft = this._edgeList[dir];\n        let distance = this._distanceList[dir];\n        let buPos: Vec3 = null;\n        let middleCard: Node = null;\n        for (let i = 0; i < 3; i++) {\n            let card = instantiate(this.nodeCard);\n            if ((i == 0 && who == \"下家\") ||  // 下家的第一张牌\n                (i == 1 && who == \"对家\") ||  // 对家的第二张牌\n                (i == 2 && who == \"上家\")) {  // 上家的第三张牌\n\n                buPos = new Vec3(rightToLeft - (height * 0.5), groundToCard, distance - width * 1.5);\n                card.setPosition(rightToLeft - height * 0.5, groundToCard, distance - width * 0.5);\n                card.setRotationFromEuler(0, 90, 0);\n                rightToLeft -= (height + GameViewConfig.CardConfig.SpaceMeldCard);\n            } else {\n                card.setPosition(rightToLeft - width * 0.5, groundToCard, distance - height * 0.5);\n                card.setRotationFromEuler(0, 0, 0);\n                rightToLeft -= (width + GameViewConfig.CardConfig.SpaceMeldCard);\n            }\n\n            card.active = true;\n            this._seatList[dir].addChild(card);\n            card.getComponent(NodeCardCtr).setCardByte(opCards[i]) // mark\n\n            if (i == 1) {\n                middleCard = card;\n            }\n        }\n\n        this._edgeList[dir] = rightToLeft - (width * 0.5); // 追加两堆牌之间的间距\n        this._dataList[dir].push({ opCard: opCard, opCards: opCards, opCode: opCode, buPos: buPos });\n\n\n        // 碰牌烟雾动画 mark\n        if (Utils.isNotNull(middleCard)) {\n            if (showAnim) {\n                let data: GameViewConfig.AnimConfig = {\n                    seatId : dir + 1,\n                    aniType : GameViewConfig.AnimType.Peng,\n                    pos : middleCard.getWorldPosition(),\n                }\n                EventManager.dispatch(FXJEvent.VIEW_UI_3D_GET_CAMERA, FXJEvent.VIEW_OUT_CARD_ANI_PLAY, data);\n            }\n        }\n    }\n\n    /** 补杠 */\n    private makeMeldBuGang(dir: number, dirOut: number, opCode: number, opCard: number, opCards: number[], showAnim: boolean) {\n        \n        let dataList = this._dataList[dir];\n        for (let i = 0; i < dataList.length; i++) {\n            let data = dataList[i];\n            if ((data.opCode == OPCode.OPE_PENG || data.opCard == OPCode.OPE_QIANG_PENG) && Utils.isNotNull(data.buPos)) {\n                let map = {};\n                opCards.forEach((value, index, array) => {\n                    map[value] = true;\n                });\n\n                let contain = true;\n                data.opCards.forEach((value, index, array) => {\n                    if(!map[value]) {\n                        contain = false;\n                    }\n                });\n\n                if (contain) {\n                    let card = instantiate(this.nodeCard);\n                    card.setPosition(data.buPos);\n                    card.setRotationFromEuler(0, 90, 0);\n                    card.active = true;\n                    this._seatList[dir].addChild(card);\n                    card.getComponent(NodeCardCtr).setCardByte(opCard) // mark\n                    data.opCode = OPCode.OPE_BU_GANG; // 补杠\n                    return;   \n                }\n            }\n        }\n    }\n\n    /** 明杠 */\n    private makeMeldMingGang(dir: number, dirOut: number, opCode: number, opCard: number, opCards: number[], showAnim: boolean) {\n        let who = CardUtil.calculatePlayerPosition(dir + 1, dirOut + 1);\n        let width = GameViewConfig.CardConfig.Width;\n        let height = GameViewConfig.CardConfig.Height;\n        let groundToCard = GameViewConfig.CardConfig.GroundToCard;\n        let rightToLeft = this._edgeList[dir];\n        let distance = this._distanceList[dir];\n        for (let i = 0; i < 4; i++) { // 四张牌\n            let card = instantiate(this.nodeCard);\n            if ((i == 0 && who == \"下家\") ||  // 下家的第一张牌\n                (i == 2 && who == \"对家\") ||  // 对家的第三张牌\n                (i == 3 && who == \"上家\")) {  // 上家的第四张牌\n\n                card.setPosition(rightToLeft - height * 0.5, groundToCard, distance - width * 0.5);\n                card.setRotationFromEuler(0, 90, 0);\n                rightToLeft -= (height + GameViewConfig.CardConfig.SpaceMeldCard);\n            } else {\n                card.setPosition(rightToLeft - width * 0.5, groundToCard, distance - height * 0.5);\n                card.setRotationFromEuler(0, 0, 0);\n                rightToLeft -= (width + GameViewConfig.CardConfig.SpaceMeldCard);\n            }\n            card.active = true;\n            this._seatList[dir].addChild(card);\n            card.getComponent(NodeCardCtr).setCardByte(opCards[i]) // mark\n        }\n\n        this._edgeList[dir] = rightToLeft - (width * 0.5); // 追加两堆牌之间的间距\n        this._dataList[dir].push({ opCard: opCard, opCards: opCards, opCode: opCode });\n    }\n\n    /** 暗杠 */\n    private makeMeldAnGang(dir: number, dirOut: number, opCode: number, opCard: number, opCards: number[], showAnim: boolean) {\n        let width = GameViewConfig.CardConfig.Width;\n        let height = GameViewConfig.CardConfig.Height;\n        let groundToCard = GameViewConfig.CardConfig.GroundToCard;\n        let rightToLeft = this._edgeList[dir];\n        let distance = this._distanceList[dir];\n        for (let i = 0; i < 4; i++) {\n            let card = instantiate(this.nodeCard);\n            card.setPosition(rightToLeft - width * 0.5, groundToCard, distance - height * 0.5);\n            if (i == 0 || i == 4) {\n                card.setRotationFromEuler(0, 0, 180);\n            } else {\n                card.setRotationFromEuler(0, 0, 0);\n            }\n            card.active = true;\n            this._seatList[dir].addChild(card);\n            card.getComponent(NodeCardCtr).setCardByte(opCards[i]) // mark\n            rightToLeft -= (width + GameViewConfig.CardConfig.SpaceMeldCard);\n        }\n\n        this._edgeList[dir] = rightToLeft - (width + GameViewConfig.CardConfig.SpaceMeldCard);\n        this._dataList[dir].push({ opCard: opCard, opCards: opCards, opCode: opCode });\n\n    }\n\n    private getWho(dir: number, dirOut: number) {\n        let a = dir; // 自己位置\n        let b = dirOut; // 待查位置\n        let x = ((b + 4) - a) % 4\n        return x;\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n    }\n\n    /** 重连 */\n    onReconnect(data: GameViewConfig.ReconnectConfig) {\n        this.resetView();\n\n        data.playerList.forEach((value, index, array) => {\n            for (let i = 0; i < value.opGroups.length; i++) { \n                let dataItem = value.opGroups[i];\n                let dir = value.seatId - 1;\n                let dirOut = value.seatId - 1;\n                let cards = dataItem.opCards;\n\n                switch (dataItem.opCode) {\n                    case OPCode.OPE_RIGHT_CHI: // 右吃\n                    case OPCode.OPE_MIDDLE_CHI: // 中吃\n                    case OPCode.OPE_LEFT_CHI: // 左吃\n                    case OPCode.OPE_PENG: // 碰\n                    case OPCode.OPE_QIANG_PENG: // 抢碰\n                        this.makeMeldPeng(dir, dirOut, dataItem.opCode, cards[0], cards, false);\n                        break;\n                    case OPCode.OPE_AN_GANG: // 暗杠\n                        this.makeMeldAnGang(dir, dirOut, dataItem.opCode, cards[0], cards, false);\n                        break;\n                    case OPCode.OPE_GANG: // 杠\n                        this.makeMeldMingGang(dir, dirOut, dataItem.opCode, cards[0], cards, false);\n                        break;\n                    case OPCode.OPE_BU_GANG: // 补杠\n                        this.makeMeldBuGang(dir, dirOut, dataItem.opCode, cards[0], cards, false);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n    }\n\n    //销毁\n    onDestroy() {\n    };\n}\n\n\n"]}