{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/TaskInfo.ts"],"names":["TaskInfo","GConstants","StoreKey","Encrypt","CountTime","LocalStorage","Utils","BaseCache","Platform","constructor","superClass","__User","atyList","noticeList","_allowShareTime","atyData","clone","NoticeData","updateActivityCenterData","body","table_isEmpty","activity","sort","a","b","Number","notice","forEach","data","index","RedDot","update_Activity_NormalRed","update_Activity_NoticeRed","length","checkUserReceiveInToByDesk","activity_id","item","_jumpData","JsonDecode","_jumpCmd","mallScene","key","string_format","USER_REWARD_BY_DESK","getUserMid","JumpViewConf","POS_ACT_DESK_SIGN_POS_ACT_SPECIALGIFT","POS_ACT_DESK_TAG","isWXPlatform","referrerInfo","AppEnterOptions","AppLunchScene","console","log","allowShareTime","startTime","time","remove","Stop","_uid","get","StartTime","Start","set","Error","key_uid","err"],"mappings":"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","sourcesContent":["/**\n * Name = TaskInfo\n * URL = db://assets/cache/TaskInfo.ts\n * Time = (中国标准时间)\n * Author = dongchuangW\n * 任务缓存\n */\n\nimport { GConstants, StoreKey } from \"../config/GameConstant\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { CountTime } from \"../framework/extend/CountTime\";\nimport { LocalStorage } from \"../framework/LocalStorage\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { Platform } from \"../platform/Platform\";\nimport { User } from \"./User\";\nexport class TaskInfo extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n    /** 活动 */\n    private atyList: Array<any> = [];\n    /** 公告 */\n    private noticeList: Array<any> = [];\n    /** 允许分享的时间 */\n    private _allowShareTime = 0;\n    //实例化\n    constructor(superClass) {\n        super(\"TaskInfo\");\n        this.__User = superClass;\n    };\n    /** 活动数据 */\n    get atyData() {\n        let atyList = Utils.clone(this.atyList);\n        return atyList;\n    }\n    /** 公告数据 */\n    get NoticeData() {\n        let noticeList = Utils.clone(this.noticeList);\n        return noticeList;\n    }\n    /** 更新活动中心配置数据 */\n    updateActivityCenterData(body) {\n        if (Utils.table_isEmpty(body)) {\n            return;\n        }\n        this.atyList = body.activity.sort((a, b) => { return Number(b.sort) - Number(a.sort) }) || [];\n        this.noticeList = body.notice.sort((a, b) => { return Number(b.sort) - Number(a.sort) }) || [];\n        this.atyList.forEach((data, index) => {\n            this.__User.RedDot.update_Activity_NormalRed(data, true);\n        })\n        this.noticeList.forEach((data, index) => {\n            this.__User.RedDot.update_Activity_NoticeRed(data, true);\n        })\n        if (this.atyList.length == 0) {\n            this.__User.RedDot.update_Activity_NormalRed(null);\n        }\n        if (this.noticeList.length == 0) {\n            this.__User.RedDot.update_Activity_NoticeRed(null);\n        }\n    }\n    /**检测用户是否可领取桌面进入大厅的奖励 */\n    checkUserReceiveInToByDesk() {\n        let activity_id = \"\"\n        if (Utils.table_isEmpty(this.atyData)) {\n            return\n        }\n        try {\n            this.atyData.forEach(item => {\n                if (item['is_jump']) {\n                    // 获取跳转场景\n                    let _jumpData = Encrypt.JsonDecode(item['jump_code']) || {}\n                    let _jumpCmd = Number(_jumpData['cmd']) || 0\n                    let mallScene = _jumpData['tag'] || 0\n                    // 存 删 查 key\n                    let key = Utils.string_format(StoreKey.USER_REWARD_BY_DESK, this.__User.getUserMid());\n                    // 添加到桌面\n                    if (_jumpCmd == GConstants.JumpViewConf.POS_ACT_DESK_SIGN_POS_ACT_SPECIALGIFT && mallScene == GConstants.JumpViewConf.POS_ACT_DESK_TAG) {\n                        if (Platform.isWXPlatform()) {\n                            let referrerInfo = Platform.AppEnterOptions;\n\n                            if (Number(referrerInfo['scene']) == GConstants.AppLunchScene[\"1023\"]) {\n                                console.log('从添加桌面进入了:', referrerInfo['scene'], this.__User.getUserMid())\n                                // 判断时间是否允许领 允许从本地删除\n                                let allowShareTime = Number(item['limit_time']) * 24 * 60 * 60\n                                let startTime = new CountTime();\n                                if (this._allowShareTime - Utils.time() > allowShareTime) {\n                                    LocalStorage.remove(key)\n                                    // 关闭计时\n                                    startTime.Stop();\n                                }\n                                let _uid = LocalStorage.get(key, 0)\n                                // 不存在就去发奖\n                                if (!_uid) {\n                                    activity_id = item['activity_id']\n                                    // 发奖之后开始计时\n                                    startTime.StartTime = 0;\n                                    startTime.Start();\n                                    this._allowShareTime = startTime.StartTime\n                                    LocalStorage.set(key, this.__User.getUserMid());\n                                }\n                            }\n                            throw new Error(`获取到了当前的场景${referrerInfo['scene']}`);\n                        } else {\n                            let key = Utils.string_format(StoreKey.USER_REWARD_BY_DESK, this.__User.getUserMid());\n                            let _uid = LocalStorage.get(key, 0)\n                            console.log('_uid', 2503647, _uid, !_uid, this.__User.getUserMid())\n                            // 不存在就去发奖\n                            if (!_uid) {\n                                activity_id = item['activity_id']\n                                // 缓存第一次领奖成功的uid\n                                console.log('调用了添加桌面成功去发奖')\n                                let key_uid = Utils.string_format(StoreKey.USER_REWARD_BY_DESK, this.__User.getUserMid())\n                                LocalStorage.set(key_uid, this.__User.getUserMid());\n                            }\n                        }\n                        //如果是第一次就领取奖励\n                        throw new Error(`获取到了发奖id${item['activity_id']}`);\n                    }\n                }\n            })\n\n        } catch (err) {\n            console.log('error:', err)\n        }\n        return activity_id\n    }\n}"]}