{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/net/FXJWriteAndRead.ts"],"names":["FXJWriteAndRead","error","Utils","Encrypt","EventManager","WebSocketBuffer","FXJEvent","FXJCmdBinding","FXJPBAdaptive","checkRead","packetID","dataView","Read","readPacket","checkWrite","reqProtocol","data","GetPackPacket","headCmd","action","buffer","resp","getInstance","_instance","init","constructor","name","req_CmdMapping","resp_CmdMapping","console","log","initPB","startReloadPBList","writerArray","readArray","REQ","Object","prototype","hasOwnProperty","call","_headCmd","Number","value","arr","cmd","binding","WritePB","push","RESP","ReadPB","dispatch","SYS_UPDATE_PROTOBUF","initCMDMapping","allCMDList","SYS_UPDATE_CMDMAPPING","isCompress","pbPackageID","pbFuncName","dataArrayBuffer","encodePacket","str","arrayBufferToString","Write","writeStringNoZeroEnd","number_formatToHex","packetInfo","readStringNoZeroEnd","bytes","stringToByte","length","byteBuffer","bytesToByteBuffer","decodePacket","onReqCommonUserChat","writeString","writeShort","onReqCommonUserFace","writeInt"],"mappings":"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","sourcesContent":["/**\n * Name = FXJWriteAndRead\n * URL = db://assets/package/game/socket/FXJWriteAndRead.ts\n * Time = Fri May 27 2022 15:58:43 GMT+0800 (中国标准时间)\n * Author = xueya\n * 游戏模块读写解析\n */\n\nimport { error } from \"cc\";\nimport { Utils } from \"../../../framework/Utils\";\nimport { Encrypt } from \"../../../framework/crypto/Encrypto\";\nimport { EventManager } from \"../../../framework/manager/EventManager\";\nimport { IRequestProtocol } from \"../../../framework/network/NetInterface\";\nimport { WebSocketBuffer } from \"../../../framework/network/WebSocketBuffer\";\nimport { FXJEvent } from \"../common/FXJEvent\";\nimport { FXJCmdBinding } from \"./FXJCmd\";\nimport { FXJPBAdaptive } from \"./FXJPBAdaptive\";\n\n/** 校验读 */\nconst checkRead = function (packetID: string): DataView | null {\n\tif (!packetID) {\n\t\treturn null\n\t}\n\tlet dataView = WebSocketBuffer.Read.readPacket(packetID, true, false, false)\n\tif (!dataView) {\n\t\treturn null\n\t}\n\treturn dataView\n}\n/** 校验写 */\nconst checkWrite = function (packetID, reqProtocol): boolean {\n\tif (!packetID) {\n\t\treturn false\n\t}\n\tif (!reqProtocol || !reqProtocol.data) {\n\t\treturn false\n\t}\n\treturn true\n}\n\n/**命令序列 */\nexport interface ICmdWriteReadArray {\n\tcmd: any,   //命令\n\tbinding: Function,   //绑定函数\n}\n/** 包装包体 */\nconst GetPackPacket = function (headCmd: number = null, action: string = null, data: any = null, buffer = null) {\n\tlet resp = {\n\t\t/**头部命令 */\n\t\theadCmd: headCmd,\n\t\t/** 动作名 */\n\t\taction: action,\n\t\t/** 消息内容 */\n\t\tdata: data,\n\t\t/** 加密成的buffer data 服务端下发*/\n\t\tbuffer: buffer,\n\t}\n\treturn resp\n}\n\nexport class FXJWriteAndRead {\n\tprivate static _instance = null;\n\tpublic static getInstance(): FXJWriteAndRead {\n\t\tif (!this._instance || this._instance == null) {\n\t\t\tthis._instance = new FXJWriteAndRead(\"FXJWriteAndRead\");\n\t\t}\n\t\treturn this._instance;\n\t}\n\tpublic static init(): FXJWriteAndRead {\n\t\tif (this._instance) {\n\t\t\tthis._instance = null\n\t\t}\n\t\tFXJWriteAndRead.getInstance()\n\t\treturn\n\t}\n\n\t//请求时 cmd与pb的映射\n\tprivate req_CmdMapping = {};\n\t//返回时 cmd与pb的映射\n\tprivate resp_CmdMapping = {};\n\t//实例化\n\tconstructor(name) {\n\t\tconsole.log(`${name} 实例化`)\n\t\t//实例化PB解析和包装类\n\n\n\t};\n\t/** 初始化Pb */\n\tinitPB() {\n\t\tFXJPBAdaptive.getInstance().startReloadPBList();\n\t\t//绑定读写\n\t\t//读写 0读 1写\n\t\tlet writerArray = [];\n\t\tlet readArray = [];\n\n\t\tfor (let headCmd in FXJCmdBinding.REQ) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(FXJCmdBinding.REQ, headCmd)) {\n\t\t\t\tlet _headCmd = Number(headCmd);\n\t\t\t\tlet value = FXJCmdBinding.REQ[_headCmd];\n\t\t\t\tlet arr: ICmdWriteReadArray = {\n\t\t\t\t\tcmd: _headCmd,\n\t\t\t\t\tbinding: FXJWriteAndRead.WritePB\n\t\t\t\t}\n\t\t\t\twriterArray.push(arr)\n\t\t\t}\n\t\t}\n\t\tfor (let headCmd in FXJCmdBinding.RESP) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(FXJCmdBinding.RESP, headCmd)) {\n\t\t\t\tlet _headCmd = Number(headCmd);\n\t\t\t\tlet value = FXJCmdBinding.RESP[_headCmd];\n\t\t\t\tlet arr: ICmdWriteReadArray = {\n\t\t\t\t\tcmd: _headCmd,\n\t\t\t\t\tbinding: FXJWriteAndRead.ReadPB\n\t\t\t\t}\n\t\t\t\treadArray.push(arr)\n\t\t\t}\n\t\t}\n\t\tEventManager.dispatch(FXJEvent.SYS_UPDATE_PROTOBUF, 0, readArray);\n\t\tEventManager.dispatch(FXJEvent.SYS_UPDATE_PROTOBUF, 1, writerArray);\n\t}\n\t/** 初始化命令绑定映射 */\n\tinitCMDMapping() {\n\t\tlet allCMDList = {};\n\t\t//0读 1写\n\t\tfor (let headCmd in FXJCmdBinding.REQ) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(FXJCmdBinding.REQ, headCmd)) {\n\t\t\t\tlet _headCmd = Number(headCmd);\n\t\t\t\tlet value = FXJCmdBinding.REQ[_headCmd];\n\t\t\t\tallCMDList[_headCmd] = value;\n\t\t\t}\n\t\t}\n\t\tfor (let headCmd in FXJCmdBinding.RESP) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(FXJCmdBinding.RESP, headCmd)) {\n\t\t\t\tlet _headCmd = Number(headCmd);\n\t\t\t\tlet value = FXJCmdBinding.RESP[_headCmd];\n\t\t\t\tallCMDList[_headCmd] = value;\n\t\t\t}\n\t\t}\n\t\tEventManager.dispatch(FXJEvent.SYS_UPDATE_CMDMAPPING, allCMDList)\n\t}\n\n\t/** PB写 */\n\tpublic static WritePB(headCmd, packetID: string, reqProtocol: IRequestProtocol) {\n\t\treqProtocol.isCompress = false;\n\t\t//pb包装\n\t\tif (FXJCmdBinding.REQ[headCmd]) {\n\t\t\tlet pbPackageID = FXJCmdBinding.REQ[headCmd][\"packageID\"];\n\t\t\tlet pbFuncName = FXJCmdBinding.REQ[headCmd][\"funcName\"];\n\t\t\tif (pbPackageID && pbFuncName) {\n\t\t\t\tlet dataArrayBuffer: ArrayBuffer = FXJPBAdaptive.getInstance().encodePacket(reqProtocol.data, pbPackageID, pbFuncName);\n\t\t\t\tlet str = Encrypt.arrayBufferToString(dataArrayBuffer, false, false);\n\t\t\t\tif (str) {\n\t\t\t\t\tWebSocketBuffer.Write.writeStringNoZeroEnd(packetID, str);\n\t\t\t\t} else {\n\t\t\t\t\terror(`[FXJWriteAndRead]:WritePB 包装数据结构出错HeadCmd[10进制] = ${headCmd} HeadCmd[16进制] = ${Utils.number_formatToHex(headCmd)},包装函数为 = ${pbFuncName}`);\n\t\t\t\t}\n\t\t\t} else if (pbPackageID == null && pbFuncName != null) {\n\t\t\t\tif (FXJWriteAndRead.getInstance()[pbFuncName] != null) {\n\t\t\t\t\tFXJWriteAndRead.getInstance()[pbFuncName](headCmd, packetID, reqProtocol);\n\t\t\t\t} else {\n\t\t\t\t\terror(`[FXJWriteAndRead]:WritePB 包装数据结构出错HeadCmd[10进制] = ${headCmd} HeadCmd[16进制] = ${Utils.number_formatToHex(headCmd)},包装函数为 = ${pbFuncName}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treqProtocol.data = \"\";\n\t\treturn reqProtocol;\n\t}\n\t/** PB读 */\n\tpublic static ReadPB(headCmd, packetID: string) {\n\t\tconsole.log(\"FXJWriteAndRead:ReadPB pb读===>\", `,HeadCmd[10进制] = ${headCmd} HeadCmd[16进制] = ${Utils.number_formatToHex(headCmd)}`);\n\t\tlet dataView = checkRead(packetID)\n\t\tif (!dataView) {\n\t\t\treturn null;\n\t\t}\n\t\t//pb解析\n\t\tlet packetInfo = null;\n\t\tif (FXJCmdBinding.RESP[headCmd]) {\n\t\t\tlet pbPackageID = FXJCmdBinding.RESP[headCmd][\"packageID\"];\n\t\t\tlet pbFuncName = FXJCmdBinding.RESP[headCmd][\"funcName\"];\n\n\t\t\tif (pbPackageID && pbFuncName) {\n\t\t\t\tlet str = WebSocketBuffer.Read.readStringNoZeroEnd(packetID);\n\t\t\t\tlet bytes = Encrypt.stringToByte(str, false);\n\t\t\t\tif (bytes && bytes.length > 0) {\n\t\t\t\t\tlet byteBuffer = FXJPBAdaptive.getInstance().bytesToByteBuffer(bytes, false)\n\t\t\t\t\tpacketInfo = FXJPBAdaptive.getInstance().decodePacket(byteBuffer, pbPackageID, pbFuncName); //namePfunc[\"pbFuncName\"].decode(Encrypt.bytesToUint8Array(bytes));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!packetInfo) {\n\t\t\t\terror(`[FXJWriteAndRead]:ReadPB 解析包装的数据结构体为空 ,HeadCmd[10进制] = ${headCmd} HeadCmd[16进制] = ${Utils.number_formatToHex(headCmd)},解析函数为 = ${pbFuncName}`);\n\t\t\t\tpacketInfo = null;\n\t\t\t}\n\t\t}\n\t\treturn GetPackPacket(headCmd, null, packetInfo, dataView)\n\n\t}\n\n\t//ROOM_USER_CHAT 0x1004:发送聊天\n\tonReqCommonUserChat(headCmd, packetID: string, reqProtocol: IRequestProtocol) {\n\n\t\tWebSocketBuffer.Write.writeString(packetID, reqProtocol.data[\"msg\"] || \"\");\n\t\tWebSocketBuffer.Write.writeShort(packetID, reqProtocol.data[\"index\"] || -1);\n\n\t\treqProtocol.data = \"\";\n\t\treqProtocol.isCompress = false\n\t\treturn reqProtocol;\n\t}\n\n\t//ROOM_USER_FACE 0x1004:发送表情\n\tonReqCommonUserFace(headCmd, packetID: string, reqProtocol: IRequestProtocol) {\n\n\t\tWebSocketBuffer.Write.writeInt(packetID, reqProtocol.data[\"faceValue\"] || 0);\n\t\tWebSocketBuffer.Write.writeInt(packetID, reqProtocol.data[\"vipType\"] || 0);\n\n\t\treqProtocol.data = \"\";\n\t\treqProtocol.isCompress = false\n\t\treturn reqProtocol;\n\t}\n\n\t// onReqOperation(headCmd, packetID: string, reqProtocol: IRequestProtocol) {\n\t\t\n\t// }\n\t\n\n}\n\n"]}