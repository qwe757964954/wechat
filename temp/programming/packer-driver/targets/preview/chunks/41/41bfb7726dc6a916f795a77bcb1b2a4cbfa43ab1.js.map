{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/Players/PlayerOutCards.ts"],"names":["Vec3","_decorator","BaseComponent","MjSize","ccclass","property","PlayerOutCards","_mjList","onInitModuleEvent","onLoad","start","getOutCardPosInfo","index","height","Math","floor","column","row","posInfo","getOutCardPos","length","width","pushCard","tByte","pushCardToList","node","push","resetView","removeAllChildren"],"mappings":";;;;;;;;;;;;;;;;;;;;AACeA,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AACZC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;gCAUaK,c,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,cADb;AAAA;AAAA,0CACkD;AAAA;AAAA;AAAA,eAC9CC,OAD8C,GAC5B,EAD4B;AAAA;;AAE9C;AACUC,QAAAA,iBAAiB,GAAG,CAE7B;;AAEDC,QAAAA,MAAM,GAAG,CAER;;AAGDC,QAAAA,KAAK,GAAG,CAEP;;AACD;AACAC,QAAAA,iBAAiB,CAACC,KAAD,EAAyB;AACtC,cAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,EAAnB,CAAb;AACAA,UAAAA,KAAK,GAAGA,KAAK,GAAGC,MAAM,GAAG,EAAzB;AACA,cAAIG,MAAM,GAAGJ,KAAK,GAAG,CAArB;AACA,cAAIK,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,CAAnB,CAAV;AAEA,cAAIM,OAAgB,GAAG;AACnBD,YAAAA,GAAG,EAAEA,GADc;AAEnBD,YAAAA,MAAM,EAAEA,MAFW;AAGnBH,YAAAA,MAAM,EAAEA;AAHW,WAAvB;AAKA,iBAAOK,OAAP;AACH,SA5B6C,CA6B9C;;;AACAC,QAAAA,aAAa,GAAS;AAClB,cAAID,OAAO,GAAG,KAAKP,iBAAL,CAAuB,KAAKJ,OAAL,CAAaa,MAApC,CAAd,CADkB,CAElB;;AACA,iBAAO,IAAIpB,IAAJ,CAAS;AAAA;AAAA,gCAAOqB,KAAP,GAAe,CAAf,GAAmBH,OAAO,CAACF,MAAR,GAAiB;AAAA;AAAA,gCAAOK,KAApD,EAA2D;AAAA;AAAA,gCAAOD,MAAP,GAAgB,CAAhB,GAAoBF,OAAO,CAACL,MAAR,GAAiB;AAAA;AAAA,gCAAOO,MAAvG,EAA+G,CAA/G,CAAP;AACH,SAlC6C,CAoC9C;;;AACAE,QAAAA,QAAQ,CAACC,KAAD,EAAgB,CACpB;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACH;;AAEDC,QAAAA,cAAc,CAACC,IAAD,EAAa;AACvB,eAAKlB,OAAL,CAAamB,IAAb,CAAkBD,IAAlB;AACH,SApD6C,CAsD9C;;;AACAE,QAAAA,SAAS,GAAG;AACR,eAAKF,IAAL,CAAUG,iBAAV;AACA,eAAKrB,OAAL,GAAe,EAAf,CAFQ,CAGR;AACH;;AA3D6C,O","sourcesContent":["\nimport { Node, Vec3, _decorator } from 'cc';\nimport { BaseComponent } from '../../../../framework/vc/BaseComponent';\nimport { MjSize } from './CardConfigs';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = OutCards\n * URL = db://assets/package/game/scripts/OutCards.ts\n * Time = Fri Aug 11 2023 11:08:55 GMT+0800 (中国标准时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\ninterface PosInfo {\n    row: number,\n    column: number,\n    height: number,\n}\n\n\n@ccclass('PlayerOutCards')\nexport class PlayerOutCards extends BaseComponent {\n    _mjList: Node[] = [];\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n\n    };\n\n    onLoad() {\n\n    };\n\n\n    start() {\n\n    };\n    //根据索引获取指定位置的牌的行列高信息\n    getOutCardPosInfo(index: number): PosInfo {\n        let height = Math.floor(index / 12);\n        index = index - height * 12;\n        let column = index % 6;\n        let row = Math.floor(index / 6);\n\n        let posInfo: PosInfo = {\n            row: row,\n            column: column,\n            height: height,\n        }\n        return posInfo\n    }\n    //当前出牌区添加牌的位置\n    getOutCardPos(): Vec3 {\n        let posInfo = this.getOutCardPosInfo(this._mjList.length)\n        // return new Vec3(MjSize.width/2 +posInfo.column * MjSize.width, MjSize.length/2 + posInfo.height * MjSize.length, MjSize.height/2 + MjSize.height * posInfo.row);\n        return new Vec3(MjSize.width / 2 + posInfo.column * MjSize.width, MjSize.length / 2 + posInfo.height * MjSize.length, 0);\n    }\n\n    //往出牌区添加一张指定种类的牌\n    pushCard(tByte: number) {\n        // let mjNode = instantiate(this._mjPrefab)\n        // mjNode.setPosition(this.getOutCardPos())\n\n        // mjNode.getChildByName(\"Cube\").getComponent(MeshRenderer).shadowCastingMode = 1;\n\n        // //根据value决定花色\n        // setSymbol(mjNode, tByte)\n\n        // this.node.addChild(mjNode)\n        // this._mjList.push(mjNode)\n    }\n\n    pushCardToList(node: Node) {\n        this._mjList.push(node);\n    }\n\n    //游戏开始或结束，清空出牌区，保持初始状态\n    resetView() {\n        this.node.removeAllChildren()\n        this._mjList = []\n        // this.initNodePos()\n    }\n}\n\n"]}