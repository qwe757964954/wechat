{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/manager/RandomManager.ts"],"names":["seedrandom","getRandom","RandomManager","quick","Math","random","setSeed","seed","getRandomInt","min","max","type","ceil","floor","getRandomByMinMaxList","n","result","i","push","getRandomByObjectList","objects","temp","slice","index","splice","getRandomBySumList","sum","residue","value"],"mappings":"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","sourcesContent":["/** 引擎 utils.ts 中有一些基础数学方法 */\n\n/** 随机管理 */\nexport namespace RandomManager {\n\n    // constructor() {\n    //     RandomManager.setSeed(1);\n\n    //     for (let index = 0; index < 10; index++) {\n    //         console.log(RandomManager.getRandomInt(0, 100));\n    //     }\n\n    //     let a = RandomManager.getRandomByMinMaxList(50, 100, 5)\n    //     console.log(\"随机的数字\", a);\n\n    //     let b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    //     let r = RandomManager.getRandomByObjectList(b, 5);\n    //     console.log(\"原始的对象\", b);\n    //     console.log(\"随机的对象\", r);\n\n    //     let c = RandomManager.getRandomBySumList(5, -100,);\n    //     console.log(\"定和随机分配\", c);\n    // }\n\n    export const seedrandom: any = null;\n\n    export function getRandom(): number {\n        if (RandomManager.seedrandom) {\n            return RandomManager.seedrandom.quick();\n        }\n        return Math.random();\n    }\n\n    /** 设置随机种子 */\n    export function setSeed(seed: number) {\n        // @ts-ignore\n        RandomManager.seedrandom = new Math.seedrandom(seed);\n    }\n\n    /**\n     * 生成指定范围的随机整数\n     * @param min   最小值\n     * @param max   最大值\n     * @param type  类型\n     */\n    export function getRandomInt(min: number, max: number, type: number = 2): number {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        switch (type) {\n            case 1: // [min,max) 得到一个两数之间的随机整数,这个值不小于min（如果min不是整数的话，得到一个向上取整的 min），并且小于（但不等于）max  \n                return Math.floor(RandomManager.getRandom() * (max - min)) + min;\n            case 2: // [min,max] 得到一个两数之间的随机整数，包括两个数在内,这个值比min大（如果min不是整数，那就不小于比min大的整数），但小于（但不等于）max\n                return Math.floor(RandomManager.getRandom() * (max - min + 1)) + min;\n            case 3: // (min,max) 得到一个两数之间的随机整数\n                return Math.floor(RandomManager.getRandom() * (max - min - 1)) + min + 1;\n        }\n        return 0;\n    }\n\n    /**\n     * 根据最大值，最小值范围 生成随机数数组\n     * @param min   最小值\n     * @param max   最大值\n     * @param n     随机个数\n     * @param type  类型\n     * @returns \n     */\n    export function getRandomByMinMaxList(min: number, max: number, n: number, type: number = 2): Array<number> {\n        let result: Array<number> = [];\n        for (let i = 0; i < n; i++) {\n            result.push(RandomManager.getRandomInt(min, max))\n        }\n        return result;\n    }\n\n    /**\n     * 获取数组中随机对象\n     * @param objects 对象数组\n     * @param n 随机个数\n     * @returns \n     */\n    export function getRandomByObjectList<T>(objects: Array<T>, n: number): Array<T> {\n        let temp: Array<T> = objects.slice();\n        let result: Array<T> = [];\n        for (let i = 0; i < n; i++) {\n            let index = RandomManager.getRandomInt(0, n, 1);\n            result.push(temp.splice(index, 1)[0]);\n        }\n        return result;\n    }\n\n    /**\n     * 定和随机分配\n     * @param n     随机数量\n     * @param sum   随机元素合\n     * @returns \n     */\n    export function getRandomBySumList(n: number, sum: number) {\n        let residue = sum;\n        let value = 0;\n        let result: Array<number> = [];\n        for (let i = 0; i < n; i++) {\n            value = RandomManager.getRandomInt(0, residue, 3);\n            if (i == n - 1) {\n                value = residue;\n            }\n            else {\n                residue -= value;\n            }\n            result.push(value);\n        }\n        return result;\n    }\n}\n"]}