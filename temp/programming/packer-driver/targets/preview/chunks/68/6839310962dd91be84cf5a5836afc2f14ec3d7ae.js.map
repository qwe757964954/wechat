{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeWallCtr.ts"],"names":["Node","Vec3","_decorator","instantiate","tween","BaseComponent","RoomMgr","GameRuleConfig","GameViewConfig","ccclass","property","NodeWallCtr","tooltip","type","_nodeWall","_wallStatus","WallStatus","Top","_headIndex","_tailIndex","_remian","_gangCount","_wallList","_numList","_nodeDeskLiftList","_hostDir","onInitModuleEvent","onLoad","initData","initView","start","cardTotalNum","CardTotalNum","Array","total","a","Math","floor","i","console","log","node","addChild","nodeDeskLift1","nodeDeskLift2","nodeDeskLift3","nodeDeskLift4","width","CardConfig","Width","height","Height","thickness","Thickness","groundHeight","GroundToCard","distance","CenterToWall","indexWall","dir","size","cardList","index","j","card","nodeCard","setRotationFromEuler","setPosition","length","updateView","resetView","getInstance","mySeatId","updateViewDir","active","pos","getPosition","x","z","riseUpInit","riseupHeight","y","Bottom","riseUp","to","position","call","Moving","onGameStart","OnChangedSeat","hostDir","forEach","value","array","onRollDices","data","changeHeadAndTail","diceInfo","seatId","dices","bankerSeatId","diceList","num","min","startSeatId","onDealCard","count","cardsCount","takeOneCard","onTakeCard","remian","gangCount","takeOneCardFromTail","hasHead","isEmpty","onGameOver","onReconnect","onDestroy"],"mappings":"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","sourcesContent":["\nimport { Node, Vec3, _decorator, instantiate, tween } from 'cc';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { GameRuleConfig } from '../common/GameRuleConfig';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeWallCtr\n * URL = db://assets/package/game/scripts/NodeWallCtr.ts\n * Time = Mon Aug 14 2023 12:08:03 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('NodeWallCtr')\nexport class NodeWallCtr extends BaseComponent {\n    /** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 升降台节点1 */\n    @property({ tooltip: \"升降台节点1\", type: Node })\n    private nodeDeskLift1: Node = null;\n\n    /** 升降台节点2 */\n    @property({ tooltip: \"升降台节点2\", type: Node })\n    private nodeDeskLift2: Node = null;\n\n    /** 升降台节点3 */\n    @property({ tooltip: \"升降台节点3\", type: Node })\n    private nodeDeskLift3: Node = null;\n\n    /** 升降台节点4 */\n    @property({ tooltip: \"升降台节点4\", type: Node })\n    private nodeDeskLift4: Node = null;\n\n    /** 牌墙节点 */\n    private _nodeWall: Node = null;\n\n    /** 牌墙状态 */\n    private _wallStatus: GameViewConfig.WallStatus = GameViewConfig.WallStatus.Top;\n\n    /** 正向拿牌，当前下标 */\n    private _headIndex: number = -1;\n\n    /** 反向拿牌下标 */\n    private _tailIndex: number = -1;\n\n    /** 剩余牌数 */\n    private _remian: number = 0;\n\n    /** 杠牌数 */\n    private _gangCount: number = 0;\n\n    /** 牌墙列表：东南西北*/\n    private _wallList: Node[] = null;\n\n    /** 牌数列表：东南西北 */\n    private _numList: number[] = null;\n\n    /** 升降台节点列表 */\n    private _nodeDeskLiftList: Node[] = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    };\n\n    /** 初始化数据 */\n    initData() {\n        let cardTotalNum = GameRuleConfig.CardTotalNum;\n\n        this._wallList = new Array(cardTotalNum)\n        this._numList = new Array(4)\n\n        let total = cardTotalNum / 2;\n        let a = Math.floor(total / 4);\n\n        for (let i = 0; i < 4; i++) {\n            this._numList[i] = a * 2;\n        }\n        console.log(\"NodeWallCtr.initData\", this._numList)\n\n    };\n\n    /** 初始化界面 */\n    initView() {\n        this._nodeWall = new Node();\n        this.node.addChild(this._nodeWall);\n\n        this._nodeDeskLiftList = [this.nodeDeskLift1, this.nodeDeskLift2, this.nodeDeskLift3, this.nodeDeskLift4]\n\n        let width = GameViewConfig.CardConfig.Width;\n        let height = GameViewConfig.CardConfig.Height;\n        let thickness = GameViewConfig.CardConfig.Thickness;\n        let groundHeight = GameViewConfig.CardConfig.GroundToCard;\n        let distance = GameViewConfig.CardConfig.CenterToWall;\n        // mark：待优化\n        let indexWall = 0;\n        for (let dir = 4 - 1; dir >= 0; dir--) {\n            let size = this._numList[dir] / 2;\n            let cardList: Node[] = new Array(size);\n            let start = -((width * size) * 0.5) + width * 0.5;\n            let index = 0;\n            for (let i = this._numList[dir] / 2 - 1; i >= 0; i--) {\n                for (let j = 0; j < 2; j++) {\n                    let card = instantiate(this.nodeCard);\n                    this._nodeWall.addChild(card);\n\n                    // 东南西北\n                    if (dir == 0) {\n                        card.setRotationFromEuler(0, 0, 180)\n                        card.setPosition(start + i * width, groundHeight + thickness * j, distance)\n                    } else if (dir == 1) {\n                        card.setRotationFromEuler(0, 90, 180)\n                        card.setPosition(distance, groundHeight + thickness * j, start + i * width)\n                    } else if (dir == 2) {\n                        card.setRotationFromEuler(0, 0, 180)\n                        card.setPosition(start + i * width, groundHeight + thickness * j, -distance)\n                    } else if (dir == 3) {\n                        card.setRotationFromEuler(0, 90, 180)\n                        card.setPosition(-distance, groundHeight + thickness * j, start + i * width)\n                    }\n                    cardList[index++] = card;\n                }\n            }\n\n            console.log(\"NodeWallCtr.initView\", \"cardList.length\", cardList.length);\n\n            if (dir == 0 || dir == 3) {\n                for (let i = 0; i < cardList.length; i += 2) {\n                    this._wallList[indexWall++] = cardList[i + 1];\n                    this._wallList[indexWall++] = cardList[i];\n                }\n            } else if (dir == 1 || dir == 2) {\n                for (let i = cardList.length - 1; i > 0; i -= 2) {\n                    this._wallList[indexWall++] = cardList[i];\n                    this._wallList[indexWall++] = cardList[i - 1];\n                }\n            }\n        }\n        console.log(\"NodeWallCtr.initView\", \"this._wallList.length\", this._wallList.length);\n    };\n\n    /** 更新界面 */\n    updateView() {\n\n    };\n\n    /** 重置界面 */\n    resetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n        this.updateViewDir();\n\n        this._wallStatus = GameViewConfig.WallStatus.Top;\n        this._headIndex = -1;\n        this._tailIndex = -1;\n        this._remian = this._wallList.length;\n        this._gangCount = 0;\n        for (let i = 0; i < this._wallList.length; i++) {\n            let node = this._wallList[i];\n            node.active = true;\n        }\n\n        let pos = this._nodeWall.getPosition();\n        this._nodeWall.setPosition(pos.x, 0, pos.z)\n        this._nodeWall.active = false;\n\n        for (let i = 0; i < this._nodeDeskLiftList.length; i++) {\n            let node = this._nodeDeskLiftList[i]\n            let pos = node.getPosition();\n            node.setPosition(pos.x, 0, pos.z)\n        }\n    };\n\n    /** 上升初始化 */\n    private riseUpInit() {\n        // mark\n        if (this._wallStatus != GameViewConfig.WallStatus.Top) {\n            console.log(\"prepareRiseUp\", \"error\", this._wallStatus);\n            return;\n        }\n\n        let riseupHeight = 8;\n\n        let pos = this._nodeWall.getPosition();\n        this._nodeWall.setPosition(pos.x, pos.y - riseupHeight, pos.z)\n        this._nodeWall.active = true;\n\n        for (let i = 0; i < this._nodeDeskLiftList.length; i++) {\n            let node = this._nodeDeskLiftList[i]\n            let pos = node.getPosition();\n            node.setPosition(pos.x, pos.y - riseupHeight / 100, pos.z)\n        }\n\n        this._wallStatus = GameViewConfig.WallStatus.Bottom;\n    }\n\n    /** 上升 */\n    private riseUp() {\n        if (this._wallStatus != GameViewConfig.WallStatus.Bottom) {\n            console.log(\"prepareRiseUp\", \"error\", this._wallStatus);\n            return;\n        }\n\n        let riseupHeight = 8;\n        let pos = this._nodeWall.getPosition();\n        tween(this._nodeWall)\n            .to(1.6, { position: new Vec3(pos.x, pos.y + riseupHeight, pos.z) })\n            .call(() => {\n                if (this._wallStatus != GameViewConfig.WallStatus.Top) {\n                    this._wallStatus = GameViewConfig.WallStatus.Top;\n                }\n            })\n            .start();\n\n        for (let i = 0; i < this._nodeDeskLiftList.length; i++) {\n            let node = this._nodeDeskLiftList[i]\n            let pos = node.getPosition();\n            tween(node)\n                .to(1.6, { position: new Vec3(pos.x, pos.y + riseupHeight / 100, pos.z) })\n                .start();\n        }\n\n        this._wallStatus = GameViewConfig.WallStatus.Moving;\n    }\n\n    /** 开始游戏 */\n    onGameStart() {\n        this.resetView();\n\n        this.riseUpInit();\n        this.riseUp()\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir;\n        this.updateViewDir(); // 换位需要旋转牌桌升降台\n    }\n\n    private updateViewDir() {\n        this._nodeDeskLiftList.forEach((value, index, array) => {\n            value.setRotationFromEuler(0, 90 * this._hostDir, 0); // 为了保留桌子水印，反向旋转桌子\n        });\n    }\n\n    /** 摇色子 */\n    onRollDices(data: Game.IRollDice) {\n        this.changeHeadAndTail(data.diceInfo[0].seatId, data.diceInfo[0].dices);\n    }\n\n\n    /**\n     * 根据色子点数确定牌墙的起止点\n     * 以庄家为起点1，逆时针方向数。5、9在自己这方；2、6、10在下家方；3、7、11在对家方；4、8、12在上家方。\n     * 看小的点数的骰子确定保留几列，如果是3点，就顺时针数，从第4列开始起牌。\n     */\n    private changeHeadAndTail(bankerSeatId: number, diceList: number[]) {\n        console.log(\"NodeWallCtr.changeHeadAndTail\", \"bankerSeatId\", bankerSeatId, \"diceList\", diceList);\n\n        // mark\n        let num = diceList[0] + diceList[1];\n        let min = Math.min(diceList[0] + diceList[1])\n        if (num < 2 || num > 12) {\n            console.log(\"NodeWallCtr.changeHeadAndTail\", \"骰子数值非法\", diceList);\n            return;\n        }\n\n        console.log(\"NodeWallCtr.changeHeadAndTail\", \"num\", num, \"min\", min);\n\n        let startSeatId = 0;\n        if (num == 5 || num == 9) { // 庄家\n            startSeatId = bankerSeatId;\n        } else if (num == 2 || num == 6 || num == 10) { // 庄家下家\n            startSeatId = bankerSeatId + 1;\n        } else if (num == 3 || num == 7 || num == 11) { // 庄家对家\n            startSeatId = bankerSeatId + 2;\n        } else if (num == 4 || num == 8 || num == 12) { // 庄家上家\n            startSeatId = bankerSeatId + 3;\n        }\n        if (startSeatId > 4) {\n            startSeatId = startSeatId - 4;\n        }\n\n        console.log(\"NodeWallCtr.changeHeadAndTail\", \"startSeatId\", startSeatId)\n\n        if (startSeatId == 4) { // 北\n            this._tailIndex = min * 2 - 1;\n        } else if (startSeatId == 3) { // 西\n            this._tailIndex = this._numList[2] + min * 2 - 1;\n        } else if (startSeatId == 2) { // 南\n            this._tailIndex = this._numList[2] + this._numList[1] + min * 2 - 1;\n        } else if (startSeatId == 1) { // 东\n            this._tailIndex = this._numList[2] + this._numList[1] + this._numList[0] + min * 2 - 1;\n        }\n\n        this._headIndex = this._tailIndex + 1;\n        console.log(\"NodeWallCtr.changeHeadAndTail\", this._headIndex, this._tailIndex)\n    }\n\n    /** 发牌 */\n    onDealCard(data: Game.IDealCard) {\n        let count = 0;\n\n        for (let i = 0; i < data.cardsCount.length; i++) {\n            count += data.cardsCount[i];\n        }\n\n        for (let i = 0; i < count; i++) {\n            this.takeOneCard();\n        }\n\n    }\n\n    /** 抓牌 */\n    onTakeCard(data: any) {\n        if (this._remian <= data.remian) {\n            console.log(\"NodeWallCtr.onTakeCard\", \"牌桌剩余牌数太少\");\n            return;\n        }\n\n        if (data.gangCount > this._gangCount) {\n            for (let i = 0; i < data.gangCount - this._gangCount; i++) {\n                this.takeOneCardFromTail();\n            }\n        }\n\n        if (this._remian > data.remian) {\n            for (let i = 0; i < this._remian - data.remian; i++) {\n                this.takeOneCard();\n            }\n        }\n    }\n\n    /** 抓牌 */\n    private takeOneCard() {\n        if (!this.hasHead()) {\n            console.log(\"NodeWallCtr.takeOneCard\", \"牌墙没有起点\");\n            return;\n        }\n\n        if (this.isEmpty()) {\n            console.log(\"NodeWallCtr.takeOneCard\", \"牌墙已空\");\n            return;\n        }\n\n        if (this._wallList[this._headIndex]) {\n            this._wallList[this._headIndex].active = false;\n            this._headIndex++;\n            if (this._headIndex > this._wallList.length - 1) {\n                this._headIndex = 0;\n            }\n            this._remian = this._remian - 1\n        }\n    }\n\n    // /** 抓牌墩 */\n    // private takeFourCard() {\n    //     if (!this.hasHead()) {\n    //         console.log(\"NodeWallCtr.takeOneCard\", \"牌墙没有起点\");\n    //         return;\n    //     }\n\n    //     if (this.isEmpty()) {\n    //         console.log(\"NodeWallCtr.takeOneCard\", \"牌墙已空\");\n    //         return;\n    //     }\n\n    //     for (let i = 0; i < 4; i++) {\n    //         if (this._wallList[this._headIndex]) {\n    //             this._wallList[this._headIndex].active = false;\n    //             this._headIndex++;\n    //             if (this._headIndex > this._wallList.length - 1) {\n    //                 this._headIndex = 0;\n    //             }\n    //             this._remian = this._remian - 1\n    //         }\n    //     }\n    // }\n\n    /** 杠后从牌墙尾拿牌 */\n    private takeOneCardFromTail() {\n        if (!this.hasHead()) {\n            console.log(\"NodeWallCtr.takeOneCard\", \"牌墙没有起点\");\n            return;\n        }\n\n        if (this.isEmpty()) {\n            console.log(\"NodeWallCtr.takeOneCard\", \"牌墙已空\");\n            return;\n        }\n\n        let index = this._tailIndex;\n        if ((index + 1) % 2 == 0) {\n            index--;\n            if (this._wallList[index]) {\n                this._wallList[index].active = false;\n            }\n        } else {\n            index++;\n            if (this._wallList[index]) {\n                this._wallList[index].active = false;\n            }\n        }\n\n        this._tailIndex--;\n        if (this._tailIndex < 0) {\n            this._tailIndex = this._wallList.length - 1;\n        }\n        this._gangCount++;\n        this._remian--;\n    }\n\n    private hasHead() {\n        return this._headIndex >= 0 && this._tailIndex >= 0;\n    }\n\n    private isEmpty() {\n        return this._remian <= 0;\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n    }\n\n    /** 重连 */\n    onReconnect() {\n\n    }\n\n\n    //销毁\n    onDestroy() {\n\n    };\n\n}\n\n\n"]}