{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/ReportController.ts"],"names":["ReportController","GCache","AppEvent","Logger","EventManager","Utils","BaseControll","GlobalCMD","getInstance","_instance","init","clear","onInitModuleEvent","addModelListener","NET_REQ_REPORT_PAY_ORDER","reqReportPayOrder","NET_FORWARD_REPORT_PAY_ORDER","respReportPayOrder","event","reportOrderData","logPay","sceneType","CurrowPaySceneType","body","order_id","gameid","nullToDefault","level","gameparty_anto","gameparty_pname","gameparty_subname","gameparty_gsubname","bankrupt","BankrupData","checkIsBankrupt","User","getUserMoneyByID","pay_scene","pay_scene_type","pm_name","currency_type","number_valueOf","currency_num","item_category","item_id","item_num","platform_order_id","fee","is_pay_done","award_type","match_type","sendMsg","cmd","PHP_ROOM_PAY_SEND_ORDER","dispatch","NET_SEND_MSG","isSuccess","respData","reqData"],"mappings":"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","sourcesContent":["/**\n * Name = ReportController\n * URL = db://assets/proj/ReportController.ts\n * Time = Wed Aug 24 2022 11:45:42 GMT+0800 (中国标准时间)\n * Author = xueya\n * Client数据上报控制器\n */\n\nimport { GCache } from \"../cache/GCache\";\nimport { AppEvent } from \"../config/AppEvent\";\nimport { Logger } from \"../framework/log/Logger\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseControll } from \"../framework/vc/BaseController\";\nimport { GlobalCMD } from \"./gnet/GlobalCMD\";\n\nexport class ReportController extends BaseControll {\n\tprivate static _instance = null;\n\tpublic static getInstance(): ReportController {\n\t\tif (!this._instance || this._instance == null) {\n\t\t\tthis._instance = new ReportController(\"ReportController\");\n\t\t}\n\t\treturn this._instance;\n\t}\n\tpublic static init(): ReportController {\n\t\tif (this._instance) {\n\t\t\tthis._instance.clear()\n\t\t}\n\t\tthis._instance = null\n\t\tReportController.getInstance()\n\t\treturn\n\t}\n\t/**初始化添加事件绑定 */\n\tprotected onInitModuleEvent(): void {\n\t\t//上报支付订单\n\t\tthis.addModelListener(AppEvent.NET_REQ_REPORT_PAY_ORDER, this.reqReportPayOrder);\n\t\t//支付订单上报回调\n\t\tthis.addModelListener(AppEvent.NET_FORWARD_REPORT_PAY_ORDER, this.respReportPayOrder);\n\t}\n\t/** 支付订单上报 */\n\treqReportPayOrder(event, reportOrderData) {\n\t\tLogger.logPay(\"支付订单上报==>\", reportOrderData)\n\t\tlet sceneType = GCache.CurrowPaySceneType;\n\n\t\tlet body = {\n\t\t\torder_id: reportOrderData[\"orderID\"],       //支付中心订单ID\n\t\t\tgameid: Utils.nullToDefault(reportOrderData[\"gameID\"], 0),    //下单时所在的游戏ID\n\t\t\tlevel: Utils.nullToDefault(reportOrderData[\"levelID\"], 0),     //下单时所在的房间等级\n\t\t\tgameparty_anto: \"\",                 //下单时底注场\n\t\t\tgameparty_pname: \"\",                 //场景，大厅、游戏场、比赛场\n\t\t\tgameparty_subname: \"\",               //下单时牌局场二级分类，比如游戏场的新手场，初级场，高级场，淘汰场，即：level对应的名称\n\t\t\tgameparty_gsubname: Utils.nullToDefault(reportOrderData[\"matchName\"], \"\"), //比赛名称  \n\t\t\tbankrupt: GCache.BankrupData.checkIsBankrupt(GCache.User.getUserMoneyByID(0)) == true ? 1 : 0,  //下单时用户是否处于破产状态（ 0:否, 1：是 ）\n\t\t\tpay_scene: sceneType,                 //付费场景，在哪个游戏入口下单（如游戏界面、结算界面、降级充值、破产充值、商城）\n\t\t\tpay_scene_type: sceneType,\n\t\t\tpm_name: Utils.nullToDefault(reportOrderData[\"pmode\"], 0),           //下单时所用的支付方式名称（支付宝，银联啥的）\n\t\t\tcurrency_type: Utils.number_valueOf(reportOrderData[\"currency\"], 1),  //币种类型，比如F币，人民币\n\t\t\tcurrency_num: Utils.number_valueOf(reportOrderData[\"pamount\"], 0),    //币种数量\n\t\t\titem_category: Utils.number_valueOf(reportOrderData[\"scene\"], 1),     //商品场景：1 银币 2 vip 3 道具 12 金条 999 代理年卡\n\t\t\titem_id: Utils.number_valueOf(reportOrderData[\"id\"]),              //购买物品gid, \n\t\t\titem_num: Utils.number_valueOf(reportOrderData[\"pchips\"]),\n\t\t\tplatform_order_id: \"\",                //平台订单流水号\n\t\t\tfee: 0,                               //手续费用\n\t\t\tis_pay_done: 0,                       //是否支付完成 0为创建订单 1为支付完成\n\n\t\t\taward_type: [],\n\t\t\tmatch_type: 0,\n\t\t}\n\t\tLogger.logPay(\"上报数据：\", body)\n\t\t// local sceneType, reprotData = RechargeDataInterface.getInstance():getSceneType();\n\t\t// --body\n\t\t// local param = {};\n\t\t// param.order_id = orderData.orderinfo.ORDER;--支付中心订单ID\n\t\t// param.gameid = reprotData.gameId or 0;--下单时所在的游戏ID\n\t\t// param.level = reprotData.levelId or 0;--下单时所在的房间等级\n\t\t// param.gameparty_anto = \"\";--下单时底注场\n\t\t// local gsubname = reprotData.matchName;\n\t\t// param.gameparty_pname = \"\"; -- 场景，大厅、游戏场、比赛场\n\t\t// param.gameparty_subname = \"\"; -- 下单时牌局场二级分类，比如游戏场的新手场，初级场，高级场，淘汰场，即：level对应的名称\n\t\t// param.gameparty_gsubname = gsubname; --  比赛名称   \n\n\t\t// param.bankrupt = kBankruptDataInterface:checkIsBankrupt(kUserInfoData:getMoney()) == true and 1 or 0 ; --下单时用户是否处于破产状态（ 0:否, 1：是 ）\n\t\t// param.pay_scene = sceneType;--付费场景，在哪个游戏入口下单（如游戏界面、结算界面、降级充值、破产充值、商城）\n\t\t// param.pm_name = orderData.orderinfo.PMODE; --下单时所用的支付方式名称（支付宝，银联啥的） \n\t\t// param.currency_type = curPaymentInfo.goodInfo.currency; --币种类型，比如F币，人民币\n\t\t// param.currency_num = orderData.orderinfo.PAMOUNT;-- 币种数量\n\t\t// param.item_category = curPaymentInfo.goodInfo.scene;-- 场景：1 银币 2 vip 3 道具 12 金条 999 代理年卡\n\t\t// param.item_id = curPaymentInfo.goodInfo.id;  --购买物品id, 当购买虚拟道具时，填写相关道具id \n\t\t// param.item_num =  orderData.orderinfo.PCHIPS;  --购买物品数量\n\t\t// param.platform_order_id = \"\"; --平台订单流水号\n\t\t// param.fee = 0;     --手续费用\n\t\t// param.is_pay_done = 0;--是否支付完成 0为创建订单 1为支付完成\n\t\t// param.pay_scene_type = sceneType;--付费场景，在哪个游戏入口下单（如游戏界面、结算界面、降级充值、破产充值、商城）\n\t\t// param.award_type = reprotData.matchAwardsList or {}; -- 比赛奖励\n\t\t// param.match_type = reprotData.matchType or 0; -- 比赛类型\n\t\t// param.gameparty_gsubname = reprotData.matchName or self:getCurMatchName(); -- 比赛名称\n\n\t\t// OnlineSocketManager.getInstance():sendMsg(PHP_ROOM_PAY_SEND_ORDER,param);\n\n\t\tlet sendMsg = {\n\t\t\tcmd: GlobalCMD.PHP_ROOM_PAY_SEND_ORDER,\n\t\t\tbody: body,\n\t\t}\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\n\t}\n\n\t/** 支付订单上报回调 */\n\trespReportPayOrder(event, isSuccess, respData, reqData) {\n\t\tLogger.logPay(`支付订单上报回调结果:${isSuccess},返回数据:`, respData);\n\n\t}\n\n\n}\n\n"]}