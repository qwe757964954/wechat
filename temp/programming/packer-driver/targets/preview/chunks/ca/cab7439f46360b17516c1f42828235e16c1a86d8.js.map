{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/net/FXJPBAdaptive.ts"],"names":["FXJPBAdaptive","error","pbkiller","FXJPBPackageID","FXJPB","getInstance","_instance","constructor","name","_pbPackageConf","Common","FilePath","Class","PackageName","Game","_pbPackageClassMapping","Map","console","log","__reloadPBConf","info","pbClass","reloadPB","set","startReloadPBList","pbName","Object","prototype","hasOwnProperty","call","conf","findPBClass","pbPackageID","res","get","encodePacket","body","funcName","result","encodeBody","decodePacket","pbPackage","decodeFuncName","decodeBody","arrayBufferToByteBuffer","buffer","isSymbol","byteLength","bytes","byteArray","byteBuffer","Int8Array","index","bytesToByteBuffer","Uint8Array","byteBufferToArrayBuffer","ByteBuffer","isByteBuffer","clear","arrayBuffer","toBuffer","length","i","writeInt8","writeUint8","byteBufferToBytes"],"mappings":"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","sourcesContent":["import { error } from \"cc\";\nimport { pbkiller } from \"../../../framework/crypto/pbkiller\";\nimport { inf_PBConf } from \"../../../framework/InterfaceDefines\";\nimport { BaseProtobuf } from \"../../../proj/gprotobuf/BaseProtobuf\";\nimport { FXJPBPackageID } from \"./FXJCmd\";\nimport { FXJPB } from \"./FXJPB\";\n\nexport class FXJPBAdaptive {\n    /** 基础包配置 */\n    private _pbPackageConf: { [key: number]: inf_PBConf } = {\n        /** 飞小鸡解析包配置 */\n        [FXJPBPackageID.Common]: { FilePath: \"fxj/Common.proto\", Class: FXJPB, PackageName: FXJPBPackageID.Common },\n        [FXJPBPackageID.Game]: { FilePath: \"fxj/Game.proto\", Class: FXJPB, PackageName: FXJPBPackageID.Game },\n    };\n\n    private static _instance = null;\n    public static getInstance(): FXJPBAdaptive {\n        if (!this._instance || this._instance == null) {\n            this._instance = new FXJPBAdaptive(\"FXJPBAdaptive\");\n        }\n        return this._instance;\n    }\n    //当前包与解析类的映射\n    private _pbPackageClassMapping: Map<string, BaseProtobuf> = new Map();\n    //实例化\n    constructor(name: string) {\n        console.log(name + \"实例化...\")\n    };\n\n    /**\n     * 加载PB配置文件 注意:在此之前必须保证文件都加载完毕了\n     * @param info inf_PBConf\n     * @returns \n     */\n    private __reloadPBConf(info: inf_PBConf) {\n        if (!info || !info.Class) {\n            return false;\n        }\n        let pbClass: BaseProtobuf = new info.Class(info.PackageName);\n        pbClass.reloadPB(info);\n        this._pbPackageClassMapping.set(info.PackageName, pbClass);\n        return true;\n    }\n    /** 开始加载配置的PB队列 */\n    public startReloadPBList() {\n        for (let pbName in this._pbPackageConf) {\n            if (Object.prototype.hasOwnProperty.call(this._pbPackageConf, pbName)) {\n                let conf: inf_PBConf = this._pbPackageConf[pbName];\n                this.__reloadPBConf(conf);\n            }\n        }\n    }\n\n    /**\n     * 查找PB类\n     * @param pbPackageID 用来解析的类\n     */\n    public findPBClass(pbPackageID: any): BaseProtobuf | null {\n        let res = this._pbPackageClassMapping.get(pbPackageID);\n        if (!res) {\n            error(`${pbPackageID} 包名未配置 或找不到文件`)\n            return null;\n        }\n        return res;\n    }\n\n    /**\n     * 封装包\n     * @param pbPackage 要加密的包数据\n     * @param pbPackageID 用来解析的类\n     * @param funcName 用来解析的类方法\n     * @returns 返回ArrayBuffer对象 ArrayBuffer | null\n     */\n    public encodePacket(body: any, pbPackageID: any, funcName: string = null): ArrayBuffer | null {\n        if (pbPackageID == null) {\n            return null;\n        }\n\n        let pbClass: BaseProtobuf = this.findPBClass(pbPackageID);\n\n        let result: ArrayBuffer = null;\n        if (pbClass) {\n            result = pbClass.encodeBody(body, funcName);\n        } else {\n            error(`encodePacket: PB类找不到:${pbPackageID} funcName = ${funcName}`);\n        }\n        return result;\n    }\n\n    /**\n     * 解析包\n     * @param pbPackage 要解析的包数据\n     * @param pbPackageID 用来解析的类\n     * @param funcName 用来解析的类方法\n     * @returns 返回Message对象 object | null\n     */\n    public decodePacket(pbPackage: any, pbPackageID: any, funcName: string = null, decodeFuncName = null): object | null {\n        if (!pbPackage || pbPackageID == null) {\n            return null;\n        }\n        let pbClass: BaseProtobuf = this.findPBClass(pbPackageID);\n        let result: object = null;\n        if (pbClass) {\n            result = pbClass.decodeBody(pbPackage, funcName, decodeFuncName);\n        } else {\n            error(`decodePacket: PB类找不到:${pbPackageID}`);\n        }\n        return result;\n    }\n\n    /**\n     * ArrayBuffer To ByteBuffer\n     * @param buffer ArrayBuffer待转换的ArrayBuffer\n     * @param isSymbol 是否带符号  默认false 不带\n     * @returns 返回ByteBuffer\n     */\n    public arrayBufferToByteBuffer(buffer: ArrayBuffer, isSymbol: boolean = false): any | null {\n        if (!buffer || buffer?.byteLength == null) {\n            return null;\n        }\n        let bytes = [];\n        let byteArray;\n        let byteBuffer = null;\n        if (isSymbol) {\n            byteArray = new Int8Array(buffer);\n            for (let index = 0; index < byteArray.byteLength; index++) {\n                bytes[index] = byteArray[index]\n            }\n            byteBuffer = this.bytesToByteBuffer(bytes, isSymbol);\n        } else {\n            byteArray = new Uint8Array(buffer);\n            for (let index = 0; index < byteArray.byteLength; index++) {\n                bytes[index] = byteArray[index]\n            }\n            byteBuffer = this.bytesToByteBuffer(bytes, isSymbol);\n        }\n        return byteBuffer;\n    }\n    /**\n     * ByteBuffer转ArrayBuffer\n     * @param byteBuffer 由pbkiller.ByteBuffer创建的\n     * @returns ArrayBuffer\n     */\n    public byteBufferToArrayBuffer(byteBuffer): ArrayBuffer | null {\n        if (!byteBuffer || pbkiller.ByteBuffer.isByteBuffer(byteBuffer) == false) {\n            return null;\n        }\n        //重置索引\n        byteBuffer.clear();\n        let arrayBuffer: ArrayBuffer = byteBuffer.toBuffer();\n        return arrayBuffer;\n    }\n    /**\n     * 字节数组转ByteBuffer\n     * @param bytes \n     * @param isSymbol 是否带符号  默认false 不带\n     * @returns \n     */\n    public bytesToByteBuffer(bytes: number[], isSymbol: boolean = false): any | null {\n        if (!bytes || bytes?.length == null) {\n            return null;\n        }\n        let byteBuffer = new pbkiller.ByteBuffer(bytes.length);\n\n        if (isSymbol) {\n            for (let i = 0; i < bytes.length; i++) {\n                byteBuffer.writeInt8(bytes[i], i)\n            }\n        } else {\n            for (let i = 0; i < bytes.length; i++) {\n                byteBuffer.writeUint8(bytes[i], i)\n            }\n        }\n        //重置索引\n        byteBuffer.clear();\n\n        return byteBuffer\n    }\n    /**\n     * ByteBuffer转字节数组\n     * @param byteBuffer ByteBuffer\n     * @param isSymbol 是否带符号  默认false 不带\n     * @returns \n     */\n    public byteBufferToBytes(byteBuffer, isSymbol: boolean = false): number[] | null {\n        if (!byteBuffer || pbkiller.ByteBuffer.isByteBuffer(byteBuffer) == false) {\n            return null;\n        }\n        let bytes = [];\n        let byteArray;\n        let arrayBuffer = this.byteBufferToArrayBuffer(byteBuffer);\n        if (arrayBuffer) {\n            if (isSymbol) {\n                byteArray = new Int8Array(arrayBuffer);\n                for (let index = 0; index < byteArray.byteLength; index++) {\n                    bytes[index] = byteArray[index];\n                }\n            } else {\n                byteArray = new Uint8Array(arrayBuffer);\n                for (let index = 0; index < byteArray.byteLength; index++) {\n                    bytes[index] = byteArray[index];\n                }\n            }\n        }\n        return bytes;\n    }\n\n}"]}