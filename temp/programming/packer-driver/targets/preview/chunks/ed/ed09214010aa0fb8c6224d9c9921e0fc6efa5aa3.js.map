{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/RedDot.ts"],"names":["RedDot","AppEvent","GConstants","StoreKey","Encrypt","LocalStorage","EventManager","Utils","BaseCache","Platform","constructor","superClass","__User","_redConfData","_redConfLocalData","_hasRedDotMapping","initMapping","RedDotConf","Sign","handler","has_reddot_signin","Email","has_reddot_mail","Shop","has_reddot_shop","Friend","has_reddot_friend","ActivityNormal","has_reddot_activityNormal","ActivityNotice","has_reddot_activityNotice","UserHead","has_reddot_userHead","NewUserActivity","has_reddot_newuserActivity","FirstPay","has_reddot_firstPay","Holiday","has_reddot_holiday","reloadLocalData","key","string_format","USER_RED_RECORD","getUserMid","data","get","table_verify","JsonDecode","updateLocalData","JsonEncode","set","hasRedDot","param","print","update_signin","dispatch","NOTIFY_UPDATE_RED_DOT","isNull","res","Object","prototype","hasOwnProperty","call","update_mail_red","console","log","MailInfo","MailData","flag","v","MsgStatus","MSG_STATUS_FRESH","need_show_email","update_shop_red","ShopInfo","isExitFreeGoods","update_friend_red","item_id","update_reddot_newuserActivity","ACTIVITY_LAST_OPEN_TIME","time","need_show_newuserActivity","ret","isRegisterToday","lastOpenTime","isFirstLoginCurrow","update_dress_red","status","update_Activity_NormalRed","activityData","config_id","red_dot_type","number_valueOf","begin_time","end_time","oldStatus","isForward","currowTime","check_reddot_by_name","update_reddot_by_name","type","count","update_Activity_NoticeRed","name","realKey","String","getTodayLocalRecord","setTodayLocalRecord","update_gift_firstpay","need_show_gift_firstpay","table_isEmpty","update_reddot_gift_firstpay","update_gift_holiday","need_show_holiday","isCanPay","update_reddot_gift_holiday"],"mappings":"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","sourcesContent":["import { AppEvent } from \"../config/AppEvent\";\nimport { GConstants, StoreKey } from \"../config/GameConstant\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { LocalStorage } from \"../framework/LocalStorage\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { Platform } from \"../platform/Platform\";\nimport { User } from \"./User\";\n/**\n * Name = RedDot\n * URL = db://assets/cache/RedDot.ts\n * Time = Mon May 09 2022 14:43:04 GMT+0800 (中国标准时间)\n * Author = xueya\n * 红点\n */\n\nexport class RedDot extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n\n    /** 数据(非本地存储) */\n    private _redConfData = {};\n    /** 数据(支持本地存储) */\n    private _redConfLocalData = {};\n\n    /** 红点判断映射 */\n    private _hasRedDotMapping = {};\n\n    //实例化\n    constructor(superClass) {\n        super(\"RedDot\")\n        this.__User = superClass;\n        this.initMapping();\n    };\n    /** 初始化检测映射 */\n    private initMapping() {\n        this._hasRedDotMapping = {\n            /** 七日签到 */\n            [GConstants.RedDotConf.Sign]: Utils.handler(this, this.has_reddot_signin),\n            /** 邮件 */\n            [GConstants.RedDotConf.Email]: Utils.handler(this, this.has_reddot_mail),\n            /** 商城 */\n            [GConstants.RedDotConf.Shop]: Utils.handler(this, this.has_reddot_shop),\n            /** 好友 */\n            [GConstants.RedDotConf.Friend]: Utils.handler(this, this.has_reddot_friend),\n            /** 活动中心-活动 */\n            [GConstants.RedDotConf.ActivityNormal]: Utils.handler(this, this.has_reddot_activityNormal),\n            /** 活动中心-公告 */\n            [GConstants.RedDotConf.ActivityNotice]: Utils.handler(this, this.has_reddot_activityNotice),\n            /** 装扮-头像 */\n            [GConstants.RedDotConf.UserHead]: Utils.handler(this, this.has_reddot_userHead),\n            /** 新手活动 */\n            [GConstants.RedDotConf.NewUserActivity]: Utils.handler(this, this.has_reddot_newuserActivity),\n            /** 首充礼包 */\n            [GConstants.RedDotConf.FirstPay]: Utils.handler(this, this.has_reddot_firstPay),\n            /** 付费礼包 */\n            [GConstants.RedDotConf.Holiday]: Utils.handler(this, this.has_reddot_holiday),\n\n\n        }\n    }\n    /** 加载本地数据 */\n    reloadLocalData() {\n        let key = Utils.string_format(StoreKey.USER_RED_RECORD, this.__User.getUserMid());\n        let data = LocalStorage.get(key, null);\n        if (data != null) {\n            this._redConfLocalData = Utils.table_verify(Encrypt.JsonDecode(data));\n        }\n    }\n    /** 保存本地数据 */\n    updateLocalData() {\n        let data = Encrypt.JsonEncode(this._redConfLocalData);\n        let key = Utils.string_format(StoreKey.USER_RED_RECORD, this.__User.getUserMid());\n        LocalStorage.set(key, data);\n    }\n    /** 判断红点 */\n    public hasRedDot(key, param = null) {\n        if (key == null || this._hasRedDotMapping[key] == null) {\n            return false;\n        }\n        this.print(\"单条数据是否有红点\", this._hasRedDotMapping[key](param), 'key', key, 'param', param)\n        return this._hasRedDotMapping[key](param) || false;\n    }\n\n    /** 8.签到 */\n    update_signin(data) {\n        this._redConfData[GConstants.RedDotConf.Sign] = data;\n        //通知:红点更新\n        EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, GConstants.RedDotConf.Sign, this.hasRedDot(GConstants.RedDotConf.Sign));\n    }\n    /** 判断签到红点 */\n    has_reddot_signin() {\n        if (!this._redConfData[GConstants.RedDotConf.Sign]) {\n            return false;\n        }\n\n        this.print(\"RedDot\", this._redConfData[GConstants.RedDotConf.Sign])\n        if (Utils.isNull(this._redConfData[GConstants.RedDotConf.Sign][\"todayStatus\"])) {\n            return false;\n        } else if (this._redConfData[GConstants.RedDotConf.Sign][\"todayStatus\"] == 0) {\n            return true;\n        }\n\n        if (Utils.isNull(this._redConfData[GConstants.RedDotConf.Sign][\"continueAward\"])) {\n            return false;\n        }\n\n        let res = false;\n\n        let data = this._redConfData[GConstants.RedDotConf.Sign][\"signin_info\"];\n        for (let key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && res == false) {\n                if (data[key][\"status\"] == 1) {\n                    res = true;\n                }\n            }\n        }\n        return res;\n    }\n    /** 邮件 */\n    update_mail_red() {\n        console.log(\"通知更新\")\n        //通知:红点更新\n        EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, GConstants.RedDotConf.Email, this.hasRedDot(GConstants.RedDotConf.Email));\n    }\n    /** 判断邮件红点 */\n    has_reddot_mail() {\n        let data = this.__User.MailInfo.MailData;\n        let flag = false;\n        for (let key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && flag == false) {\n                let v = data[key];\n                if (data[key][\"status\"] == GConstants.MsgStatus.MSG_STATUS_FRESH) {\n                    flag = true;\n                }\n            }\n        }\n        return flag\n    }\n    /** 邮件入口是否可见 */\n    need_show_email() {\n        return true;\n    }\n    /** 10.商城红点增加判断逻辑：只要商城内有可免费购买的商品，则一直显示红点*/\n    update_shop_red() {\n        //通知:红点更新\n        EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, GConstants.RedDotConf.Shop, this.hasRedDot(GConstants.RedDotConf.Shop));\n    }\n    /** 判断商城红点 */\n    has_reddot_shop() {\n        // 商城是否有免费商品 有的话展示红点\n        return this.__User.ShopInfo.isExitFreeGoods();\n    }\n    /** 11.好友红点*/\n    update_friend_red() {\n        //通知:红点更新\n        EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, GConstants.RedDotConf.Friend, this.hasRedDot(GConstants.RedDotConf.Friend));\n    }\n    /** 判断好友红点 */\n    has_reddot_friend() {//后续修改\n        return false // app.model.friendInfo:isShowRedDot();\n    }\n\n    /**\n     * 15.判断玩家-头像红点\n     * @param item_id 物品ID 为空时判断整个聊天框\n     * @returns \n     */\n    has_reddot_userHead(item_id = null) {\n    }\n\n    /** 新手活动:更新 */\n    update_reddot_newuserActivity() {\n        let key = `${StoreKey.ACTIVITY_LAST_OPEN_TIME}_${this.__User.getUserMid()}`\n        LocalStorage.set(key, Utils.time())\n    }\n    /**\n     * 新手活动是否显示\n     * 以下情况可见：\n     *   1、今日注册的 还未打开过新手\n     *   2、以前注册的 在本设备上还未打开过新手,即将打开\n     */\n    need_show_newuserActivity() {\n        let ret = false;\n        //今日注册的\n        let isRegisterToday = this.__User.isRegisterToday()\n        //上次打开的时间\n        let key = `${StoreKey.ACTIVITY_LAST_OPEN_TIME}_${this.__User.getUserMid()}`\n        let lastOpenTime = LocalStorage.get(key, null)\n        if (isRegisterToday) {\n            if (!lastOpenTime) {//今日注册的 还未打开过新手,即将打开\n                ret = true;\n            }\n        } else {\n            let isFirstLoginCurrow = this.__User.isFirstLoginCurrow()\n            if (isFirstLoginCurrow == true && lastOpenTime == null) {//以前注册的 在本设备上还未打开过新手,即将打开\n                ret = true;\n            }\n        }\n        return ret;\n    }\n    /** 新手活动是否需要显示红点 */\n    has_reddot_newuserActivity() {\n        return false;\n    }\n    /** 更新个人信息中装扮红点*/\n    update_dress_red(item_id, status = false) {\n    }\n    /** 更新活动中心-活动红点*/\n    update_Activity_NormalRed(activityData, status = false) {\n        let key = GConstants.RedDotConf.ActivityNormal;\n        if (activityData != null) {\n            let config_id = activityData[\"config_id\"];\n            //红点类型 0 无 1.每天一次 2.每次登陆 3.活动期间\n            let red_dot_type = Utils.number_valueOf(activityData[\"red_dot_type\"], 0);\n            //开始时间\n            let begin_time = Utils.number_valueOf(activityData[\"begin_time\"], null);\n            //结束时间\n            let end_time = Utils.number_valueOf(activityData[\"end_time\"], null);\n            this._redConfLocalData[key] = Utils.table_verify(this._redConfLocalData[key]);\n            let oldStatus = this._redConfLocalData[key][config_id];\n            //是否转发消息\n            let isForward = false;\n            //今天的时间戳\n            let currowTime = Utils.time();\n            if (status == true) {\n                if (oldStatus != null) {\n                    if (red_dot_type == 3) {//3.活动期间\n                        if (begin_time != null && end_time != null) {\n                            if (currowTime >= begin_time && currowTime <= end_time) {\n                                this._redConfLocalData[key][config_id] = true;\n                                isForward = true;\n                            } else {\n                                this._redConfLocalData[key][config_id] = false;\n                            }\n                        } else {\n                            this._redConfLocalData[key][config_id] = false;\n                        }\n                    } else if (red_dot_type == 2) {//2.每次登陆\n                        if (oldStatus == false) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        }\n                    } else if (red_dot_type == 1) {//1.每天一次\n                        if (oldStatus == false && this.check_reddot_by_name(config_id, key) == false) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        }\n                    }\n                    else if (red_dot_type == 0) {//0无\n                        this._redConfLocalData[key][config_id] = false;\n                        isForward = true;\n                    } else {\n                        if (oldStatus == false) {//默认状态下 打开了就没有了\n                            this._redConfLocalData[key][config_id] = false;\n                            isForward = true;\n                        }\n                    }\n                } else {\n                    if (red_dot_type == 3) {\n                        if (begin_time != null && end_time != null) {\n                            if (currowTime >= begin_time && currowTime <= end_time) {\n                                this._redConfLocalData[key][config_id] = true;\n                                isForward = true;\n                            } else {\n                                this._redConfLocalData[key][config_id] = false;\n                            }\n                        } else {\n                            this._redConfLocalData[key][config_id] = false;\n                        }\n                    } else if (red_dot_type == 2) {//2.每次登陆\n                        this._redConfLocalData[key][config_id] = true;\n                        isForward = true;\n                    } else if (red_dot_type == 1) {//1.每天一次\n                        if (this.check_reddot_by_name(config_id, key) == false) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        }\n                    } else if (red_dot_type == 0) {// 0 无\n                        if (this.check_reddot_by_name(config_id, key) == false) {\n                            this._redConfLocalData[key][config_id] = false;\n                            isForward = true;\n                        }\n                    } else {\n                        this._redConfLocalData[key][config_id] = true;\n                    }\n                }\n            } else if (status == false) {\n                if (oldStatus != null && oldStatus != status) {\n                    isForward = true;\n                }\n                if (red_dot_type == 3) {//3.活动期间\n                    if (begin_time != null && end_time != null) {\n                        if (currowTime >= begin_time && currowTime <= end_time) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        } else {\n                            this._redConfLocalData[key][config_id] = false;\n                        }\n                    } else {\n                        this._redConfLocalData[key][config_id] = false;\n                    }\n                } else if (red_dot_type == 1) {//1.每天一次\n                    this.update_reddot_by_name(config_id, key);\n                    this._redConfLocalData[key][config_id] = false;\n                } else {\n                    this._redConfLocalData[key][config_id] = false;\n                }\n\n            }\n            this.updateLocalData();\n            if (isForward == true) {\n                //通知:红点更新\n                EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, key, this.hasRedDot(key, config_id));\n            }\n        } else {\n            this._redConfLocalData[key] = {};\n            this.updateLocalData();\n            //通知:红点更新\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, key, this.hasRedDot(key, null));\n        }\n    }\n    /** 判断活动中心活动红点 */\n    has_reddot_activityNormal(config_id = null) {\n        let type = GConstants.RedDotConf.ActivityNormal;\n        if (!this._redConfLocalData[type]) {\n            return false;\n        }\n\n        if (config_id != null) {\n            return this._redConfLocalData[type][config_id] == true;\n        }\n        let count = 0;\n        for (let key in this._redConfLocalData[type]) {\n            if (Object.prototype.hasOwnProperty.call(this._redConfLocalData[type], key)) {\n                let status = this._redConfLocalData[type][key];\n                if (status == true) {\n                    count = count + 1;\n                }\n            }\n        }\n        return count > 0;\n    }\n    /** 更新活动中心-公告红点*/\n    update_Activity_NoticeRed(activityData, status = false) {\n\n        let key = GConstants.RedDotConf.ActivityNotice;\n        if (activityData != null) {\n            let config_id = activityData[\"config_id\"];\n            //红点类型  0,无 1.每天一次 2.每次登陆 3.活动期间\n            let red_dot_type = Utils.number_valueOf(activityData[\"red_dot_type\"], 0);\n            //开始时间\n            let begin_time = Utils.number_valueOf(activityData[\"begin_time\"], null);\n            //结束时间\n            let end_time = Utils.number_valueOf(activityData[\"end_time\"], null);\n            this._redConfLocalData[key] = Utils.table_verify(this._redConfLocalData[key]);\n            let oldStatus = this._redConfLocalData[key][config_id];\n            //是否转发消息\n            let isForward = false;\n            //今天的时间戳\n            let currowTime = Utils.time();\n            if (status == true) {\n                if (oldStatus != null) {\n                    if (red_dot_type == 3) {//3.活动期间\n                        if (begin_time != null && end_time != null) {\n                            if (currowTime >= begin_time && currowTime <= end_time) {\n                                this._redConfLocalData[key][config_id] = true;\n                                isForward = true;\n                            } else {\n                                this._redConfLocalData[key][config_id] = false;\n                            }\n                        } else {\n                            this._redConfLocalData[key][config_id] = false;\n                        }\n                    } else if (red_dot_type == 2) {//2.每次登陆\n                        if (oldStatus == false) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        }\n                    } else if (red_dot_type == 1) {//1.每天一次\n                        if (oldStatus == false && this.check_reddot_by_name(config_id, key) == false) {\n                            this._redConfLocalData[key][config_id] = true;\n\n                            isForward = true;\n                        }\n                    } else if (red_dot_type == 0) {//0无\n                        this._redConfLocalData[key][config_id] = false;\n                        isForward = true;\n                    } else {\n                        if (oldStatus == false) {//默认状态下 打开了就没有了\n                            this._redConfLocalData[key][config_id] = false;\n                            isForward = true;\n                        }\n                    }\n\n                } else {\n                    if (red_dot_type == 3) {\n                        if (begin_time != null && end_time != null) {\n                            if (currowTime >= begin_time && currowTime <= end_time) {\n                                this._redConfLocalData[key][config_id] = true;\n                                isForward = true;\n                            } else {\n                                this._redConfLocalData[key][config_id] = false;\n                            }\n                        } else {\n                            this._redConfLocalData[key][config_id] = false;\n                        }\n                    } else if (red_dot_type == 2) {//2.每次登陆\n                        this._redConfLocalData[key][config_id] = true;\n                        isForward = true;\n                    } else if (red_dot_type == 1) {//1.每天一次\n                        if (this.check_reddot_by_name(config_id, key) == false) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        }\n                    } else if (red_dot_type == 0) {//0无\n                        this._redConfLocalData[key][config_id] = false;\n                        isForward = true;\n                    } else {\n                        this._redConfLocalData[key][config_id] = true;\n                    }\n                }\n            } else if (status == false) {\n                if (oldStatus != null && oldStatus != status) {\n                    isForward = true;\n                }\n                if (red_dot_type == 3) {//3.活动期间\n                    if (begin_time != null && end_time != null) {\n                        if (currowTime >= begin_time && currowTime <= end_time) {\n                            this._redConfLocalData[key][config_id] = true;\n                            isForward = true;\n                        } else {\n                            this._redConfLocalData[key][config_id] = false;\n                        }\n                    } else {\n                        this._redConfLocalData[key][config_id] = false;\n                    }\n                } else if (red_dot_type == 1) {//1.每天一次\n                    this.update_reddot_by_name(config_id, key);\n                    this._redConfLocalData[key][config_id] = false;\n                } else {\n                    this._redConfLocalData[key][config_id] = false;\n                }\n            }\n            this.updateLocalData();\n            if (isForward == true) {\n                //通知:红点更新\n                EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, key, this.hasRedDot(key, config_id));\n            }\n        } else {\n            this._redConfLocalData[key] = {};\n            this.updateLocalData();\n            //通知:红点更新\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, key, this.hasRedDot(key, null));\n        }\n    }\n    /** 判断活动中心公告红点 */\n    has_reddot_activityNotice(config_id = null) {\n        let type = GConstants.RedDotConf.ActivityNotice;\n        if (!this._redConfLocalData[type]) {\n            return false;\n        }\n        if (config_id != null) {\n            return this._redConfLocalData[type][config_id] == true;\n        }\n        let count = 0;\n        for (let key in this._redConfLocalData[type]) {\n            if (Object.prototype.hasOwnProperty.call(this._redConfLocalData[type], key)) {\n                let status = this._redConfLocalData[type][key];\n                if (status == true) {\n                    count = count + 1;\n                }\n            }\n        }\n        return count > 0;\n    }\n    /** 判断今天是否打开过某某活动或礼包，true：已经打开过；false：未打开过 */\n    private check_reddot_by_name(name, key): boolean {\n        let realKey = String(key) + String(name);\n        return this.__User.getTodayLocalRecord(realKey, false)\n    }\n    /** 更新已经打开的界面红点 */\n    private update_reddot_by_name(name, key) {\n        if (key == null) {\n            return;\n        }\n        let realKey = String(key) + String(name);\n        let res = this.__User.setTodayLocalRecord(realKey, true);\n        if (res) {\n            let param = this.hasRedDot(key, name);\n            //通知:红点更新\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, key, param);\n        }\n        return\n    }\n\n\n\n    /** 1.礼包之首充 更新数据*/\n    update_gift_firstpay(data) {\n        if (data) {\n            this._redConfData[GConstants.RedDotConf.FirstPay] = data;\n            //通知:红点更新\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, GConstants.RedDotConf.FirstPay, this.hasRedDot(GConstants.RedDotConf.FirstPay));\n        }\n    }\n    /**\n     * 首充礼包入口是否显示\n     * @returns \n     */\n    need_show_gift_firstpay() {\n        if (Utils.table_isEmpty(this._redConfData[GConstants.RedDotConf.FirstPay])) {\n            return false;\n        }\n        return true;\n    }\n    /** 判断首充礼包是否显示红点 */\n    has_reddot_firstPay() {\n        let flag = this.check_reddot_by_name('gift_firstpay_red_dot', GConstants.RedDotConf.FirstPay);\n        return flag != true;\n    }\n    /** 首充通知更新红点 */\n    update_reddot_gift_firstpay() {\n        this.update_reddot_by_name(\"gift_firstpay_red_dot\", GConstants.RedDotConf.FirstPay);\n    }\n\n\n\n    /** 付费礼包更新数据*/\n    update_gift_holiday(data) {\n        if (data) {\n            this._redConfData[GConstants.RedDotConf.Holiday] = data;\n            //通知:红点更新\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_RED_DOT, GConstants.RedDotConf.Holiday, this.hasRedDot(GConstants.RedDotConf.Holiday));\n        }\n    }\n\n    /**\n      * 付费礼包入口是否可见 \n      * @returns \n      */\n    need_show_holiday() {\n        if (Platform.isCanPay() == false) {\n            return false;\n        }\n        let data = this._redConfData[GConstants.RedDotConf.Holiday];\n        if (data) {\n            if (data[\"sdate\"] && data[\"edate\"]) {\n                let currowTime = Utils.time();\n                if (currowTime >= data[\"sdate\"] && currowTime < data[\"edate\"]) {\n                    return true\n                }\n            }\n        }\n        return false;\n    }\n\n    /** 判断特价礼包是否显示红点 */\n    has_reddot_holiday() {\n        let flag = this.check_reddot_by_name('gift_holiday_red_dot', GConstants.RedDotConf.Holiday);\n        return flag != true;\n    }\n\n    /** 特价礼包通知更新红点 */\n    update_reddot_gift_holiday() {\n        this.update_reddot_by_name(\"gift_holiday_red_dot\", GConstants.RedDotConf.Holiday);\n    }\n\n\n\n\n}\n"]}