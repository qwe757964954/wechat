{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/Desk.ts"],"names":["Desk","GConstants","Utils","BaseCache","constructor","name","ROOM_TYPE","NORMAL_ROOM_RECONNECT","ROOM_NORMAL","PRIVATE_ROOM","PRIVATE_ROOM_RECONNECT","PRIVATE_ROOM_STATUS_CHECK","NORMAL_ROOM_FRIEND_INVITE","NORMAL_IMMEDIATE_MATCH","FIXED_TIME_MATCH","JJ_MATCH","BET_MATCH","MATCH_RECONNECT","MATCH_RECONNECT_INGAME","MATCH_NONE","roomInfo","_tableID","_roomStates","_roomStatesList","_kickUserStatus","basechiptype","_isCanExitGame","_isCheckBankrupt","_moneyTypeID","_readyTime","canExitGame","MoneyTypeID","state","KickUserStatus","switchCheckBankrupt","readyTime","num","onSaveLoginSuccess","param","updateRoomInfo","body","getRoomInfo","insertPlayer","getPlayerByMID","mid","updatePlayerOnReady","readyNum","getPlayerReadyStateByMid","getPlayerByLocalSeatID","seatid","getNextPlayerBySeatID","getPlayerSortSeat","dumpPlayers","dumpPlayersReadyState","resetGameData","setRoomStates","length","push","getRoomStates","getLastRoomStates","getLastLastRoomStates","setGameStates","getGameStates","setCurLevelID","levelID","levelId","getCurLevelID","setCurTableID","tableID","getCurTableID","setCurGameID","gameID","getCurGameID","gameId","undefined","getMoneyNameByID","moneyID","isInMatchRoom","roomLevelId","checkIsMatchRoomLevel","isInPrivateRoom","checkIsPrivateRoomLevel","isInJiFenRoom","GameRoomLevelConf","privateRoomLevel","roomLevel","number_valueOf","i","matchRoomLevel"],"mappings":"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","sourcesContent":["/**\n * Name = Desk\n * URL = db://assets/cache/Desk.ts\n * Time = Sat May 28 2022 12:10:40 GMT+0800 (中国标准时间)\n * Author = xueya\n * 游戏桌子 子类需扩展实现\n */\n\nimport { GConstants } from \"../config/GameConstant\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\n\nexport interface RoomInfo {\n    basechiptype: number\n    gameId: number\n    gameversion?: number\n\tlevel?: number\n\tplaymode?: number\n\ttid?: number\n\tupMoney?: number\n\tlevelId?: number\n}\n\nexport class Desk extends BaseCache {\n\tROOM_TYPE = {\n\t\tNORMAL_ROOM_RECONNECT: 100 + 10,//普通房间重连\n\t\tROOM_NORMAL: 100 + 0,//普通房间\n\t\tPRIVATE_ROOM: 100 + 1,//私人房\n\t\tPRIVATE_ROOM_RECONNECT: 100 + 2,//私人房重连\n\t\tPRIVATE_ROOM_STATUS_CHECK: 100 + 3,\n\t\tNORMAL_ROOM_FRIEND_INVITE: 100 + 4,//普通房间好友邀请进房间\n\n\t}\n\t// 比赛类型\n\tNORMAL_IMMEDIATE_MATCH = 0; // 一般快速赛\n\tFIXED_TIME_MATCH = 3; // 定时赛\n\tJJ_MATCH = 7; // JJ模式\n\tBET_MATCH = 8; // 投注赛\n\n\tMATCH_RECONNECT = 1000 + 1;     // 比赛重连\n\tMATCH_RECONNECT_INGAME = 1000 + 2;     // 比赛游戏中重连\n\tMATCH_NONE = 1000 + 3;\n\troomInfo: RoomInfo; //房间信息\n\t//当前房间id\n\t// protected _levelID: number = 0;\n\t// //桌子ID\n\tprotected _tableID: number = 0;\n\t// //当前游戏ID\n\t// protected _gameID: number = 0;\n\t//当前房间状态\n\tprotected _roomStates: number = -1;\n\t//房间状态记录(非重复)\n\tprotected _roomStatesList = [];\n\t//踢人状态\n\tprotected _kickUserStatus: number = 0;\n\tprotected basechiptype:number = 0;\n\t//是否可以退出游戏\n\tprotected _isCanExitGame: boolean = true;\n\t//是否检查破产\n\tprotected _isCheckBankrupt: boolean = true;\n\t//钱币类型\n\tprotected _moneyTypeID: number = 0;\n\t//玩家列表\n\t// protected _playerList: Array<Player> = new Array<Player>()\n\t// //我自己\n\t// protected _mySelfPlayer: Player = null;\n\t//准备的时间\n\tprotected _readyTime: number = 10;\n\n\t//实例化\n\tconstructor(name = \"\") {\n\t\tsuper(name)\n\t\tthis.canExitGame = true;\n\t};\n\n\t//钱币类型\n\tset MoneyTypeID(state: number) {\n\t\tthis._moneyTypeID = state;\n\t}\n\t//获取钱币类型\n\tget MoneyTypeID() {\n\t\treturn this._moneyTypeID;\n\t}\n\n\t//设置踢人状态 （true 被踢出 9001 server升级踢出）\n\tset KickUserStatus(state: number) {\n\t\tthis._kickUserStatus = state;\n\t}\n\t//获取踢人状态\n\tget KickUserStatus() {\n\t\treturn this._kickUserStatus;\n\t}\n\n\t//设置检查破产开关\n\tset switchCheckBankrupt(state: boolean) {\n\t\tthis._isCheckBankrupt = state;\n\t}\n\t//获取是否检查破产\n\tget switchCheckBankrupt() {\n\t\treturn this._isCheckBankrupt;\n\t}\n\n\t/** set 我自己 */\n\t// set mySelfPlayer(obj: Player) {\n\t// \tthis._mySelfPlayer = obj;\n\t// \tthis._mySelfPlayer.isMySelf = true;\n\t// }\n\t// /** get 我自己 */\n\t// get mySelfPlayer(): Player {\n\t// \treturn this._mySelfPlayer\n\t// }\n\t/** set 准备的时间配置 */\n\tset readyTime(num: number) {\n\t\tthis._readyTime = num;\n\t}\n\t/** get 准备的时间配置 */\n\tget readyTime(): number {\n\t\treturn this._readyTime || 10;\n\t}\n\n\n\t/**\n\t * 登录成功\n\t * @param param \n\t */\n\tonSaveLoginSuccess(param = null) {\n\n\t}\n\t/** 更新房间信息 */\n\tupdateRoomInfo(body) {\n\t\tthis.roomInfo = { ...body };\n\t}\n\t/** 获取房间信息 */\n\tgetRoomInfo() {\n\t\treturn this.roomInfo;\n\t}\n\n\t/** 重置玩家列表玩家 */\n\t// resertPlayer() {\n\t// \tthis._playerList.splice(0, this._playerList.length);\n\t// \tthis._mySelfPlayer = null;\n\t// }\n\n\t// /** 新增一位玩家 */\n\tinsertPlayer(body) {\n\n\t}\n\t// /** 根据Mid获取玩家类 */\n\tgetPlayerByMID(mid: number): Object | null {\n\t\treturn null\n\t}\n\t/**\n\t * 更新玩家的准备状态\n\t * @param mid 玩家Mid\n\t * @param readyNum 0未准备 1已准备\n\t * @returns \n\t */\n\tupdatePlayerOnReady(mid: number, readyNum: number = null) {\n\n\t}\n\t/**\n\t * 根据Mid获取玩家准备状态\n\t * @param mid \n\t * @returns \n\t */\n\tgetPlayerReadyStateByMid(mid: number): boolean {\n\t\treturn false\n\t}\n\t// /** 根据座位号获取玩家类 */\n\tgetPlayerByLocalSeatID(seatid: number): any | null {\n\t\treturn null\n\t}\n\t// /** 根据座位号获取下一位玩家 */\n\tgetNextPlayerBySeatID(seatid: number): any | null {\n\t\treturn null\n\t}\n\t// /** 获取玩家排序后的数组 从小到大获取玩家类 */\n\tgetPlayerSortSeat(): any[] {\n\t\treturn null\n\t}\n\t// /** 输出所有玩家信息 */\n\tdumpPlayers() {\n\n\t}\n\t// /** 输出所有玩家准备信息 */\n\tdumpPlayersReadyState() {\n\n\t}\n\t/** 重置游戏数据 */\n\tresetGameData() {\n\n\t}\n\t/**更新房间状态 */\n\tsetRoomStates(state) {\n\t\tthis._roomStates = state;\n\n\t\tif (this._roomStatesList.length == 0) {\n\t\t\tthis._roomStatesList.push(this._roomStates);\n\t\t} else {\n\t\t\tif (this._roomStatesList[this._roomStatesList.length - 1] != this._roomStates) {\n\t\t\t\tthis._roomStatesList.push(this._roomStates);\n\t\t\t};\n\t\t};\n\n\t}\n\t/** 获取房间状态 */\n\tgetRoomStates(): any | null {\n\t\treturn this._roomStates;\n\t}\n\t/** 获取上一个房间状态 */\n\tgetLastRoomStates(): any | null {\n\t\tif (this._roomStatesList.length == 0) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn this._roomStatesList[this._roomStatesList.length - 1];\n\t}\n\t/** 获取上上一个房间状态 */\n\tgetLastLastRoomStates(): any | null {\n\t\tif (this._roomStatesList.length < 2) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn this._roomStatesList[this._roomStatesList.length - 2];\n\t}\n\n\n\t/**更新游戏状态 */\n\tsetGameStates(state) {\n\n\t}\n\t/** 获取游戏状态 */\n\tgetGameStates(): any | null {\n\t\treturn null\n\t}\n\t/** 设置当前房间ID */\n\tsetCurLevelID(levelID) {\n\t\tthis.roomInfo.levelId = levelID;\n\t}\n\t/** 获取当前房间ID */\n\tgetCurLevelID() {\n\t\treturn this.roomInfo.levelId;\n\t}\n\n\t/** 设置当前桌子ID */\n\tsetCurTableID(tableID) {\n\t\tthis._tableID = tableID\n\t}\n\t// /** 获取当前桌子ID */\n\tgetCurTableID() {\n\t\treturn this._tableID\n\t}\n\n\t/** 设置当前游戏ID */\n\tsetCurGameID(gameID) {\n\t\t// this.roomInfo.gameId = gameID;\n\t}\n\t/** 获取当前游戏ID */\n\tgetCurGameID() {\n\t\treturn this.roomInfo.gameId;\n\t}\n\t/** 是否可以退出房间 */\n\tset canExitGame(state: boolean) {\n\t\tif (state == null || state == undefined) {\n\t\t\tstate = true;\n\t\t}\n\t\tthis._isCanExitGame = state;\n\t}\n\t/** 是否可以退出房间 */\n\tget canExitGame() {\n\t\treturn this._isCanExitGame;\n\t}\n\n\t/** 获取货币名称  0:银币，1：金条 2：兑换券 */\n\tgetMoneyNameByID(moneyID) {\n\t\tswitch (moneyID) {\n\t\t\tcase 0:\n\t\t\t\treturn \"银币\";\n\t\t\tcase 1:\n\t\t\t\treturn \"金条\";\n\t\t\tcase 2:\n\t\t\t\treturn \"兑换券\";\n\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n\t/** 判断是否是在定局/定时 比赛房间中 */\n\tisInMatchRoom(): boolean {\n\t\tlet roomLevelId = this.getCurLevelID();\n\t\tif (roomLevelId == this.NORMAL_IMMEDIATE_MATCH\n\t\t\t|| roomLevelId == this.FIXED_TIME_MATCH\n\t\t\t|| roomLevelId == this.JJ_MATCH\n\t\t\t|| roomLevelId == this.BET_MATCH\n\t\t\t|| roomLevelId == this.MATCH_RECONNECT\n\t\t\t|| roomLevelId == this.MATCH_RECONNECT_INGAME) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.checkIsMatchRoomLevel(roomLevelId);\n\t\t}\n\n\t}\n\t/** 判断是否是在私人房间中 */\n\tisInPrivateRoom(): boolean {\n\t\tlet roomLevelId = this.getCurLevelID();\n\t\treturn this.checkIsPrivateRoomLevel(roomLevelId);\n\t}\n\t/** 判断是不是在私人房积分场 */\n\tisInJiFenRoom(): boolean {\n\t\tlet roomLevelId = this.getCurLevelID();\n\t\treturn roomLevelId == GConstants.GameRoomLevelConf.privateRoomLevel[2];\n\t}\n\n\n\n\t/** 是否是比赛房间 */\n\tcheckIsMatchRoomLevel(roomLevel): boolean {\n\t\troomLevel = Utils.number_valueOf(roomLevel);\n\t\tfor (let i = 0; i < GConstants.GameRoomLevelConf.matchRoomLevel.length; i++) {\n\t\t\tif (GConstants.GameRoomLevelConf.matchRoomLevel[i] == roomLevel) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t/** 是否是私人房间 */\n\tcheckIsPrivateRoomLevel(roomLevel): boolean {\n\t\troomLevel = Utils.number_valueOf(roomLevel);\n\n\t\tfor (let i = 0; i < GConstants.GameRoomLevelConf.privateRoomLevel.length; i++) {\n\t\t\tif (GConstants.GameRoomLevelConf.privateRoomLevel[i] == roomLevel) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\n\t}\n\n}\n\n"]}