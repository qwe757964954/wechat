{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/MenuInfo.ts"],"names":["MenuInfo","UIDataMapping","Utils","BaseCache","constructor","superClass","__User","menuDataConfig","mapUIID","mapMenuID","mapRedDotID","mapPopID","initMapping","MenuData","table_verify","i","length","conf","newConf","clone","uiID","menuID","Number","reddotID","popID","getMenuDataByMenuID","isNull","isNaN","getUIDataByRedDot","String","getUIDataByMenuID","getSwitchStateByUIID","uiid","menuData","getSwitchStateByMenuID","getSwitchStateByRedDotID","getSwitchStateByPopID","sortCustomMenus","menuArray","notCheckSwitch","table_isEmpty","Array","allMenuData","push","sort","a","b","number_valueOf"],"mappings":";;;+DAcaA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAdJC,MAAAA,a,iBAAAA,a;;AAEAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;0BAEaH,Q,GAAN,MAAMA,QAAN;AAAA;AAAA,kCAAiC;AACpC;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AAEA;AACAI,QAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,gBAAM,UAAN;AADoB,eAbhBC,MAagB,GAbD,IAaC;AAAA,eAVhBC,cAUgB,GAVC,EAUD;AAAA,eARhBC,OAQgB,GAR+B,EAQ/B;AAAA,eANhBC,SAMgB,GANiC,EAMjC;AAAA,eAJhBC,WAIgB,GAJmC,EAInC;AAAA,eAFhBC,QAEgB,GAFgC,EAEhC;AAEpB,eAAKL,MAAL,GAAcD,UAAd;AACA,eAAKO,WAAL;AACH;;AAED;AACY,YAARC,QAAQ,GAAG;AACX,iBAAO;AAAA;AAAA,8BAAMC,YAAN,CAAmB,KAAKP,cAAxB,EAAwC,IAAxC,CAAP;AACH;AACD;;;AACAK,QAAAA,WAAW,GAAG;AACV,eAAKJ,OAAL,GAAe,EAAf;AACA,eAAKC,SAAL,GAAiB,EAAjB;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAKC,QAAL,GAAgB,EAAhB;;AACA,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG;AAAA;AAAA,8CAAcC,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,gBAAIE,IAAI,GAAG;AAAA;AAAA,gDAAcF,CAAd,CAAX;AACA,gBAAIG,OAAO,GAAG;AAAA;AAAA,gCAAMC,KAAN,CAAYF,IAAZ,CAAd;;AACA,gBAAIC,OAAO,CAACE,IAAR,IAAgB,IAApB,EAA0B;AACtB,mBAAKZ,OAAL,CAAaU,OAAO,CAACE,IAArB,IAA6BF,OAA7B;AACH;;AACD,gBAAIA,OAAO,CAACG,MAAR,IAAkB,IAAtB,EAA4B;AACxB,mBAAKZ,SAAL,CAAea,MAAM,CAACJ,OAAO,CAACG,MAAT,CAArB,IAAyCH,OAAzC;AACH;;AACD,gBAAIA,OAAO,CAACK,QAAR,IAAoB,IAAxB,EAA8B;AAC1B,mBAAKb,WAAL,CAAiBQ,OAAO,CAACK,QAAzB,IAAqCL,OAArC;AACH;;AACD,gBAAIA,OAAO,CAACM,KAAR,IAAiB,IAArB,EAA2B;AACvB,mBAAKb,QAAL,CAAcO,OAAO,CAACM,KAAtB,IAA+BN,OAA/B;AACH;AACJ;AACJ;AAED;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII;;;AACAO,QAAAA,mBAAmB,CAACJ,MAAD,EAAS;AACxB,cAAI;AAAA;AAAA,8BAAMK,MAAN,CAAaL,MAAb,KAAwBM,KAAK,CAACL,MAAM,CAACD,MAAD,CAAP,CAAjC,EAAmD;AAC/C,mBAAO,IAAP;AACH;;AACDA,UAAAA,MAAM,GAAGC,MAAM,CAACD,MAAD,CAAf;;AACA,eAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKR,cAAL,CAAoBS,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,gBAAI,KAAKR,cAAL,CAAoBQ,CAApB,EAAuB,IAAvB,KAAgCM,MAApC,EAA4C;AACxC,qBAAO;AAAA;AAAA,kCAAMF,KAAN,CAAY,KAA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","sourcesContent":["import { UIDataMapping } from \"../config/UIConfig\";\nimport { inf_UIDataConfig } from \"../framework/InterfaceDefines\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { User } from \"./User\";\n\n/**\n * Name = MenuInfo\n * URL = db://assets/cache/MenuInfo.ts\n * Time = Mon May 09 2022 14:43:04 GMT+0800 (中国标准时间)\n * Author = xueya\n * 菜单配置缓存\n */\n\nexport class MenuInfo extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n\n    /** 菜单配置数据 */\n    private menuDataConfig = [];\n    /** 映射 UIID-->{menuID,reddotID,popID} */\n    private mapUIID: { [key: string]: inf_UIDataConfig } = {};\n    /** 映射 menuID-->{uiID,reddotID,popID} */\n    private mapMenuID: { [key: number]: inf_UIDataConfig } = {};\n    /** 映射 reddotID-->{uiID,menuID,popID} */\n    private mapRedDotID: { [key: string]: inf_UIDataConfig } = {};\n    /** 映射 popID-->{uiID,menuID,reddotID} */\n    private mapPopID: { [key: string]: inf_UIDataConfig } = {};\n    //实例化\n    constructor(superClass) {\n        super(\"MenuInfo\")\n        this.__User = superClass;\n        this.initMapping();\n    };\n\n    /** 菜单配置数据 */\n    get MenuData() {\n        return Utils.table_verify(this.menuDataConfig, true);\n    }\n    /** 初始化映射队列 */\n    initMapping() {\n        this.mapUIID = {};\n        this.mapMenuID = {};\n        this.mapRedDotID = {};\n        this.mapPopID = {};\n        for (let i = 0; i < UIDataMapping.length; i++) {\n            let conf = UIDataMapping[i];\n            let newConf = Utils.clone(conf);\n            if (newConf.uiID != null) {\n                this.mapUIID[newConf.uiID] = newConf;\n            }\n            if (newConf.menuID != null) {\n                this.mapMenuID[Number(newConf.menuID)] = newConf;\n            }\n            if (newConf.reddotID != null) {\n                this.mapRedDotID[newConf.reddotID] = newConf;\n            }\n            if (newConf.popID != null) {\n                this.mapPopID[newConf.popID] = newConf;\n            }\n        }\n    }\n    \n    /** 更新大厅菜单信息 */\n    /**\n    updateMenusConfig(content) {\n        if (!content) {\n            return;\n        }\n        let ver = 0;\n        let menusData = null;\n        this.menuDataConfig = [];\n        for (let k1 = 0; k1 < content.length; k1++) {\n            let v1 = content[k1];\n            // 系统消息\n            let data = Utils.table_verify(v1[\"msg_list\"], true);\n            for (let k2 = 0; k2 < data.length; k2++) {\n                if (data[k2][\"type\"] == GConstants.WatchMessageType.MESSAGE_HALL_MENU) {\n                    //大厅菜单信息\n                    if (ver < data[k2][\"id\"]) {\n                        ver = data[k2][\"id\"];\n                        menusData = data[k2][\"content\"];\n                    }\n                }\n            }\n        }\n        if (!menusData) {\n            //通知刷新菜单\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_MENUS);\n            return;\n        }\n        // 对数据进行处理过滤\n        let allMenuData = [];  //所有配置数据，包括无效的 被关闭的\n        // allMenuData = [{\n        //     \"parent\": true,\n        //     \"indexS\": 1,\n        //     \"id\": 3,\n        //     \"showBol\": true,  开关\n        //     \"showIcon\": false, 大厅显示开关\n        //     \"order\": 12,\n        //     \"maxVersion\": \"337\",\n        //     \"minVersion\": \"0\",\n        //     \"res\": {\n        //         \"type\": 1,\n        //         \"url\": \"\",\n        //         \"md5\": \"\"\n        //     },\n        //     \"children\": []\n        // },...]\n\n        let decodeData = Encrypt.JsonDecode(menusData);\n        //检查有效性\n        let isSupport = false,\n            menuID = null,\n            minVer = null,\n            maxVer = null;\n\n        let checkValid = function (val) {\n            isSupport = false;\n            menuID = Utils.number_valueOf(val[\"id\"]);\n            minVer = Utils.number_valueOf(val[\"minVersion\"]);\n            maxVer = Utils.number_valueOf(val[\"maxVersion\"]);\n            if (Utils.table_keyof(GConstants.MenuIDConf, menuID) != null) {\n                if (ClientInfo.HallVer >= minVer && ClientInfo.HallVer <= maxVer) {\n                    isSupport = true;\n                }\n                if (isSupport == true && val[\"showBol\"] == false) {//版本支持但是开关不支持\n                    val[\"showBol\"] = false;\n                } else {\n                    val[\"showBol\"] = isSupport;\n                }\n            } else {\n                return null;\n            }\n            return val;\n        }\n        decodeData = Utils.table_verify(decodeData, true);\n        for (let i = 0; i < decodeData.length; i++) {\n            if (Utils.number_valueOf(decodeData[i][\"chan\"], -1) == ClientInfo.ChannelId) {\n                let value = Utils.table_verify(decodeData[i][\"value\"], true);\n                for (let k = 0; k < value.length; k++) {\n                    //若存在子菜单,先将数据从子菜单中拿出来 将所有数据放在同一级别\n                    for (let m = 0; m < value[k][\"children\"].length; m++) {\n                        if (checkValid(value[k][\"children\"][m]) != null) {\n                            allMenuData.push(value[k][\"children\"][m]);\n                        }\n                    }\n                    if (checkValid(value[k]) != null) {\n                        value[k][\"children\"] = [];\n                        allMenuData.push(value[k]);\n                    }\n                    // if (checkValid(value[k]) != null) {\n                    //     let children = [];\n                    //     for (let m = 0; m < value[k][\"children\"].length; m++) {\n                    //         if (checkValid(value[k][\"children\"][m]) != null) {\n                    //             children.push(value[k][\"children\"][m]);\n                    //         }\n                    //     }\n                    //     value[k][\"children\"] = children;\n                    //     allMenuData.push(Utils.clone(value[k]));\n                    // };\n                }\n            };\n        }\n        if (allMenuData.length == 0) {\n            //通知刷新菜单\n            EventManager.dispatch(AppEvent.NOTIFY_UPDATE_MENUS);\n            return;\n        }\n        //排序 从小到大\n        allMenuData.sort((a, b) => {\n            return Utils.number_valueOf(a[\"order\"]) - Utils.number_valueOf(b[\"order\"])\n        })\n        // 本地数据\n        this.menuDataConfig = allMenuData;\n        //初始化映射\n        this.initMapping();\n        //通知刷新菜单\n        EventManager.dispatch(AppEvent.NOTIFY_UPDATE_MENUS);\n    }\n    */\n   \n    /** 根据菜单ID获取菜单数据（克隆的） */\n    getMenuDataByMenuID(menuID) {\n        if (Utils.isNull(menuID) || isNaN(Number(menuID))) {\n            return null;\n        }\n        menuID = Number(menuID);\n        for (let i = 0; i < this.menuDataConfig.length; i++) {\n            if (this.menuDataConfig[i][\"id\"] == menuID) {\n                return Utils.clone(this.menuDataConfig[i]);\n            };\n        }\n        return null;\n    }\n    /** 根据红点获取对应的UIdata映射配置 */\n    getUIDataByRedDot(reddotID): inf_UIDataConfig {\n        if (Utils.isNull(reddotID)) {\n            return null;\n        }\n        reddotID = String(reddotID);\n        return this.mapRedDotID[reddotID];\n    }\n    /** 根据红点获取对应的UIdata映射配置 */\n    getUIDataByMenuID(menuID): inf_UIDataConfig {\n        if (Utils.isNull(menuID)) {\n            return null;\n        }\n        menuID = Number(menuID);\n        return this.mapMenuID[menuID];\n    }\n\n\n    /** 根据UIID获取菜单开关状态 */\n    getSwitchStateByUIID(uiid): boolean {\n        if (Utils.isNull(uiid)) {\n            return false;\n        }\n        if (this.mapUIID[uiid]) {\n            let menuID = this.mapUIID[uiid].menuID;\n            let menuData = this.getMenuDataByMenuID(menuID);\n            if (menuData) {\n                return menuData[\"showBol\"];\n            }\n        }\n        return false;\n    }\n    /** 根据MenuID获取菜单开关状态 */\n    getSwitchStateByMenuID(menuID): boolean {\n        if (Utils.isNull(menuID)) {\n            return false;\n        }\n        let menuData = this.getMenuDataByMenuID(menuID);\n        if (menuData) {\n            return menuData[\"showBol\"];\n        }\n        return false;\n    }\n    /** 根据RedDotID获取菜单开关状态 */\n    getSwitchStateByRedDotID(reddotID): boolean {\n        if (Utils.isNull(reddotID)) {\n            return false;\n        }\n        reddotID = String(reddotID);\n        if (this.mapRedDotID[reddotID]) {\n            let menuID = this.mapRedDotID[reddotID].menuID;\n            let menuData = this.getMenuDataByMenuID(menuID);\n            if (menuData) {\n                return menuData[\"showBol\"];\n            }\n        }\n        return false;\n    }\n    /** 根据PopID获取菜单开关状态 */\n    getSwitchStateByPopID(popID): boolean {\n        if (Utils.isNull(popID)) {\n            return false;\n        }\n        if (this.mapPopID[popID]) {\n            let menuID = this.mapPopID[popID].menuID;\n            let menuData = this.getMenuDataByMenuID(menuID);\n            if (menuData) {\n                return menuData[\"showBol\"];\n            }\n        }\n        return false;\n    }\n\n    /**\n     * 排序自定义菜单(从小到大)升序\n     * @param menuArray 菜单列表[menuID,...]\n     * @param notCheckSwitch 不检查开关 默认false,检查\n     * @returns 返回 null 或者菜单数据对象集合\n     */\n    sortCustomMenus(menuArray, notCheckSwitch = false): Array<object> | null {\n        if (Utils.table_isEmpty(menuArray)) {\n            return null;\n        }\n        if (menuArray instanceof Array) {\n            let allMenuData = [];\n            let menuData = null;\n            for (let i = 0; i < menuArray.length; i++) {\n                menuData = this.getMenuDataByMenuID(menuArray[i]);\n                if (menuData) {\n                    if (notCheckSwitch == true) {\n                        allMenuData.push(menuData);\n                    } else {\n                        if (menuData[\"showBol\"] == true) {\n                            allMenuData.push(menuData);\n                        }\n                    }\n                }\n            }\n            //排序 从小到大\n            allMenuData.sort((a, b) => {\n                return Utils.number_valueOf(a[\"order\"]) - Utils.number_valueOf(b[\"order\"]);\n            })\n            return allMenuData;\n        }\n        return null;\n    }\n}"]}