{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/gui/GUI.ts"],"names":["Enum","ResolutionPolicy","screen","sys","UITransform","Vec3","view","_decorator","AppEvent","GameConfig","SystemConf","BaseComponent","ccclass","menu","property","AdaptiveModel","GUI","tooltip","type","isStartAdaptive","sysScaleNum","nodeScaleNum","_resoulType","SHOW_ALL","_width","_height","_finalWidth","_finalHeight","_finalScaleX","_finalScaleY","onLoad","init","transform","getComponent","width","height","adaptiveDesignResolution","refreshWindow","onInitModuleEvent","addModelListener","SYS_WINDOW_ADAPTIVE","SYS_WINDOW_CHANGE","dr","DEV_SIZE","Design_Portrait","s","windowSize","rw","rh","Window_Portrait","FIXED_WIDTH","FIXED_HEIGHT","platform","Platform","DESKTOP_BROWSER","MOBILE_BROWSER","tLog","setDesignResolutionSize","instance","ResolutionPolicyType","event","adaptiveModel","adaptiveGui","Background","adaptiveBackground","Size","adaptiveSize","Scale","adaptiveScale","realWidth","realHeight","node","scale","z","None"],"mappings":"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","sourcesContent":["/**\n * Name = GUI\n * URL = db://assets/framework/gui/GUI.ts\n * Time = Thu Apr 28 2022 12:19:38 GMT+0800 (中国标准时间)\n * Author = xueya\n *\n * Life: onLoad-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * 图形界面适配\n */\n\nimport { Camera, Enum, ResolutionPolicy, screen, sys, UITransform, Vec3, view, _decorator } from \"cc\";\nimport { AppEvent } from \"../../config/AppEvent\";\nimport { GameConfig, SystemConf } from \"../../config/GameConfig\";\nimport { BaseComponent } from \"../vc/BaseComponent\";\n\nconst { ccclass, menu, property } = _decorator;\n/** 适配模式 */\nexport enum AdaptiveModel {\n    None = 0,\n    GUI = 1,\n    Background = 2,\n    Size = 3,\n    Scale = 4,\n}\n/** 引擎对外接口 */\n@ccclass('GUI')\nexport class GUI extends BaseComponent {\n\n    @property({\n        tooltip: \"适配模式\\nGUI:以根节点方式适配，大小与设计分辨率一致\\nBackground:以背景图片方式适配，大小与设计分辨率一致\\nSize:改变大小达到适配 \\nScale:改变缩放达到适配\",\n        type: Enum(AdaptiveModel)\n    })\n    private adaptiveModel: AdaptiveModel = AdaptiveModel.None;\n    /** 适配开关 */\n    private isStartAdaptive = true;\n\n    /** 界面层矩形信息组件 */\n    public transform!: UITransform;\n    /** 游戏二维摄像机 */\n    public camera!: Camera;\n\n    /** 设计是否为竖屏显示 */\n    public Design_Portrait!: boolean;\n    /** 窗口是否为竖屏显示 */\n    public Window_Portrait!: boolean;\n    /** 系统缩放因子 */\n    public sysScaleNum: number = 1;\n    /** 节点缩放因子 */\n    public nodeScaleNum: number = 1;\n    /** 当前适配模式 */\n    public _resoulType = ResolutionPolicy.SHOW_ALL;\n    /** 节点初始宽高 */\n    private _width: number = 0;\n    private _height: number = 0;\n    /** 最终的设计分辨率大小 */\n    private _finalWidth: number = 0;\n    private _finalHeight: number = 0;\n    /** 最终的缩放系数 */\n    private _finalScaleX = 1;\n    private _finalScaleY = 1;\n\n    onLoad() {\n        this.init();\n    }\n\n    /** 初始化引擎 */\n    protected init() {\n        this.transform = this.getComponent(UITransform)!;\n        if (this.transform) {\n            this._width = this.transform.width;\n            this._height = this.transform.height;\n        }\n        this.adaptiveDesignResolution();\n        this.refreshWindow();\n    }\n    /**override 初始化模块事件，子类需重写该方法 */\n    protected onInitModuleEvent() {\n        //适配设计分辨率\n        this.addModelListener(AppEvent.SYS_WINDOW_ADAPTIVE, this.adaptiveDesignResolution);\n        //刷新大小\n        this.addModelListener(AppEvent.SYS_WINDOW_CHANGE, this.refreshWindow);\n    }\n\n    /** 适配设计分辨率 */\n    public adaptiveDesignResolution() {\n        //设计分辨率\n        let dr = SystemConf.DEV_SIZE || { width: 1280, height: 720 };\n        if (dr.width >= dr.height) {\n            this.Design_Portrait = false;\n        } else {\n            this.Design_Portrait = true;\n        }\n\n        //物理像素\n        let s = screen.windowSize;\n        let rw = s.width;\n        let rh = s.height;\n        this._finalWidth = dr.width;\n        this._finalHeight = dr.height;\n\n        if ((rw / rh) >= 1) {//窗口横屏显示\n            this.Window_Portrait = false;\n            // console.log(\"窗口横屏显示\");\n        }\n        else {//窗口竖屏显示\n            this.Window_Portrait = true;\n            // console.log(\"窗口竖屏显示\");\n        }\n        if (this.Window_Portrait == true) {\n            if (this.Design_Portrait == true) {\n                if (dr.width / rw >= dr.height / rh) {//以屏幕宽度适配优先\n                    this.sysScaleNum = dr.width / rw;\n                    this._resoulType = ResolutionPolicy.FIXED_WIDTH;\n                } else {\n                    this.sysScaleNum = dr.height / rh;\n                    this._resoulType = ResolutionPolicy.FIXED_HEIGHT;\n                }\n            } else {\n                if (dr.width / rw >= dr.height / rh) {//以屏幕宽度适配优先\n                    this.sysScaleNum = dr.width / rw;\n                    this._resoulType = ResolutionPolicy.FIXED_WIDTH;\n                } else {\n                    this.sysScaleNum = dr.height / rh;\n                    this._resoulType = ResolutionPolicy.FIXED_HEIGHT;\n                }\n            }\n            //非浏览器使用\n            if (sys.platform != sys.Platform.DESKTOP_BROWSER && sys.platform != sys.Platform.MOBILE_BROWSER) {\n                this.sysScaleNum = dr.width / rw;\n                this._resoulType = ResolutionPolicy.FIXED_WIDTH;\n            }\n        } else {\n            if (this.Design_Portrait == true) {\n                if (dr.width / rw >= dr.height / rh) {//以屏幕宽度适配优先\n                    this.sysScaleNum = dr.height / rh;\n                    this._resoulType = ResolutionPolicy.FIXED_HEIGHT;\n                } else {\n                    this.sysScaleNum = dr.width / rw;\n                    this._resoulType = ResolutionPolicy.FIXED_WIDTH;\n                }\n            } else {\n                if (dr.width / rw >= dr.height / rh) {//以屏幕宽度适配优先\n                    this.sysScaleNum = dr.height / rh;\n                    this._resoulType = ResolutionPolicy.FIXED_HEIGHT;\n                } else {\n                    this.sysScaleNum = dr.width / rw;\n                    this._resoulType = ResolutionPolicy.FIXED_WIDTH;\n                }\n            }\n            //非浏览器使用\n            if (sys.platform != sys.Platform.DESKTOP_BROWSER && sys.platform != sys.Platform.MOBILE_BROWSER) {\n                this.sysScaleNum = dr.height / rh;\n                this._resoulType = ResolutionPolicy.FIXED_HEIGHT;\n            }\n        }\n        let tLog = `设计是:${this.Design_Portrait == false ? \"横屏\" : \"竖屏\"},窗口是:${this.Window_Portrait == false ? \"横屏\" : \"竖屏\"}`;\n        tLog = tLog + ` 适配策略: ${this._resoulType == ResolutionPolicy.FIXED_WIDTH ? \"宽度\" : this._resoulType == ResolutionPolicy.FIXED_HEIGHT ? \"高度\" : this._resoulType}优先`;\n        tLog = tLog + ` 系统缩放因子:${this.sysScaleNum}`;\n        tLog = tLog + ` 屏幕宽高: width:${s.width} height:${s.height}`;\n\n        // console.log(\"GUI:适配： \" + tLog)\n\n        if (this._resoulType == ResolutionPolicy.FIXED_WIDTH) {\n            this._finalWidth = dr.width;\n            this._finalHeight = this._finalWidth * s.height / s.width;\n\n            if (this.Design_Portrait == false && this.Window_Portrait == true) {\n                this._finalHeight = dr.height;\n            }\n\n        } else if (this._resoulType == ResolutionPolicy.FIXED_HEIGHT) {\n            this._finalHeight = dr.height;\n            this._finalWidth = this._finalHeight * s.width / s.height;\n\n            if (this.Design_Portrait == true && this.Window_Portrait == false) {\n                this._finalWidth = dr.width;\n            }\n\n        }\n        this._finalScaleX = dr.width / this._finalWidth;\n        this._finalScaleY = dr.height / this._finalHeight;\n\n        // console.log(\"GUI:适配宽高： \" + `width:${this._finalWidth} height:${this._finalHeight}`)\n        // console.log(\"GUI:适配系数： \" + `width:${this._finalScaleX} height:${this._finalScaleY}`)\n\n        //设置设计分辨率\n        if (this.isStartAdaptive == false) {\n            view.setDesignResolutionSize(dr.width, dr.height, ResolutionPolicy.FIXED_HEIGHT);\n            GameConfig.instance.ResolutionPolicyType = ResolutionPolicy.FIXED_HEIGHT;\n            return;\n        }\n        GameConfig.instance.ResolutionPolicyType = this._resoulType;\n        view.setDesignResolutionSize(this._finalWidth, this._finalHeight, this._resoulType);\n    }\n\n    /** 刷新窗口大小 */\n    private refreshWindow(event = null) {\n        if (this.isStartAdaptive == false) {\n            return;\n        }\n        // console.log(\"刷新节点大小:\" + this.adaptiveModel)\n        switch (this.adaptiveModel) {\n            case AdaptiveModel.GUI:\n                this.adaptiveGui();\n                break;\n            case AdaptiveModel.Background:\n                this.adaptiveBackground();\n                break;\n            case AdaptiveModel.Size:\n                this.adaptiveSize();\n                break;\n            case AdaptiveModel.Scale:\n                this.adaptiveScale();\n                break;\n            default:\n                break;\n        }\n    }\n    /** 根节点适配 */\n    public adaptiveGui() {\n        if (!this.transform) {\n            return;\n        }\n        this.transform.width = this._finalWidth;\n        this.transform.height = this._finalHeight;\n\n    }\n    /** 背景图片适配 */\n    public adaptiveBackground() {\n        if (!this.transform) {\n            return;\n        }\n        this.transform.width = this._finalWidth;\n        this.transform.height = this._finalHeight;\n\n    }\n\n    /** 大小适配 */\n    public adaptiveSize() {\n        if (!this.transform) {\n            return;\n        }\n        let realWidth = this._width * this._finalScaleX;\n        let realHeight = this._height * this._finalScaleY;\n        // console.log(`初始宽高:${this._width}${this._height} 结果宽高: ${realWidth}${realHeight}`)\n        this.transform.width = realWidth;\n        this.transform.height = realHeight;\n    }\n    /** 缩放适配 */\n    public adaptiveScale() {\n        this.node.scale = new Vec3(this._finalScaleX, this._finalScaleY, this.node.scale.z);\n    }\n}"]}