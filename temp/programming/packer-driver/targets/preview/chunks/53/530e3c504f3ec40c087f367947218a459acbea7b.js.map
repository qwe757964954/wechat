{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/cache/RoomMgr.ts"],"names":["RoomMgr","BaseCache","constructor","name","roomCfg","bankSeatId","dices","mySeatId","totalCardCount","timerInfoList","laiziInfo","rollDice","remainCardsCount","fangangCards","selectFanGangCards","timePass","observers","getInstance","instance","addObserver","observer","push","removeObserver","index","indexOf","splice","notifyObservers","updateCardsCount","mySelfIsBanker","getTimeOut","state","timeOut","forEach","timeInfo","timerId","timeout","updateRoomInfo","resp","roomInfo","gameInfo","fanGangPai","updateRemainCardsCount","remainCardCount","count","clear"],"mappings":"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","sourcesContent":["import { BaseCache } from \"../../../framework/vc/BaseCache\";\nimport { GameStatus } from \"../common/FXJConfig\";\nimport { Common } from \"../common/idl/Common\";\nimport { Game } from \"../common/idl/Game\";\nimport { Observer } from \"./PlayerMgr\";\nexport class RoomMgr extends BaseCache {\n    // public roomInfo?: Common.IRoomInfo = null;\n    public roomCfg?:Common.IRoomCfg = null;\n    public bankSeatId: number = null;\n    public dices: number[]  = null;\n    public mySeatId: number = null;\n    public totalCardCount?: number = null;\n    public timerInfoList?: Common.ITimerInfo[] = null;\n    public laiziInfo?: Game.IFixLaizi = null;\n    public rollDice?: Game.IRollDice = null;\n    public remainCardsCount?: number = 0;\n    public fangangCards: number[] = null;\n    public selectFanGangCards: number = null;\n    public timePass?: number = 0;\n    private static instance: RoomMgr | null = null;\n    \n    private observers: Observer[] = [];\n\n\n\n    constructor(name = \"\") {\n\t\tsuper(name);\n\t};\n    public static getInstance(): RoomMgr {\n        if (!RoomMgr.instance) {\n            RoomMgr.instance = new RoomMgr();\n        }\n        return RoomMgr.instance;\n    }\n    //更新房间信息list数据\n    public addObserver(observer: Observer): void {\n        this.observers.push(observer);\n    }\n    \n    public removeObserver(observer: Observer): void {\n        const index = this.observers.indexOf(observer);\n        if (index !== -1) {\n            this.observers.splice(index, 1);\n        }\n    }\n    \n    public notifyObservers(): void {\n        for (const observer of this.observers) {\n            observer.updateCardsCount();\n        }\n    }\n    \n    public mySelfIsBanker():boolean{\n        return this.bankSeatId === this.mySeatId;\n    }\n\n    public getTimeOut(state:GameStatus):number{\n        let timeOut:number = 0;\n        this.timerInfoList.forEach(timeInfo => {\n            if(timeInfo.timerId == state){\n                timeOut = timeInfo.timeout;\n            }\n        });\n        return timeOut\n    }\n\n    public updateRoomInfo(resp:Game.IUserLoginRoom | Game.IUserReconnect){\n        this.roomCfg = resp.roomInfo.roomCfg;\n        this.bankSeatId = resp.roomInfo.gameInfo.bankSeatId;\n        this.dices = resp.roomInfo.gameInfo.dices;\n        this.fangangCards = resp.roomInfo.gameInfo.fanGangPai;\n        this.mySeatId = resp.roomInfo.gameInfo.mySeatId;\n        this.updateRemainCardsCount(resp.roomInfo.gameInfo.remainCardCount);\n        this.timerInfoList = resp.roomInfo.gameInfo.timerInfoList;\n        this.totalCardCount = resp.roomInfo.gameInfo.totalCardCount;\n    }\n\n    public updateRemainCardsCount(count?:number){\n        this.remainCardsCount = count;\n        this.notifyObservers();\n    } \n\n    //清理房间数据\n\tpublic clear(): void {\n\t\t// this.roomInfo = null;\n\t}\n}"]}