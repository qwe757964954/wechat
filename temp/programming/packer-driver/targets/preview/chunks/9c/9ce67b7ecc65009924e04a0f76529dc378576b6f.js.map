{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/cache/SettleMgr.ts"],"names":["SettleMgr","BaseCache","CardUtil","PlayerMgr","RoomMgr","constructor","name","settleType","isShowGameOver","isBaoSanJia","jiesuanCustomData","settleModel","getInstance","instance","updateSelectInfo","resp","sortTotalInfo","getTotalInfoIndex","index","i","totalInfo","length","info","bWin","getMaxWinType","fanData","moneyItemList","forEach","item","winSeatId","settleInfo","fanExtendInfo","num","fanInfo","parseInt","fan","player","findPlayerWithUserId","userId","seatId","sortPlayersBySeatId","mySeatId","getOpponentTotalInfo","myPlayer","getMyPlayerInfo","opponentInfo","filter","getMyTotalInfo","getWinPlayerInfo","findPlayerWithSeatId","filterFanExtendInfo","filteredFanExtendInfo","clear"],"mappings":";;;uEAUaA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVJC,MAAAA,S,iBAAAA,S;;AAGAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,O,iBAAAA,O;;;;;;;2BAKIJ,S,GAAN,MAAMA,SAAN;AAAA;AAAA,kCAAkC;AAYrC;AAKAK,QAAAA,WAAW,CAACC,IAAD,EAAY;AAAA,cAAXA,IAAW;AAAXA,YAAAA,IAAW,GAAJ,EAAI;AAAA;;AACzB,gBAAMA,IAAN;AADyB,eAfhBC,UAegB,GAfM,EAeN;AAAA,eAbhBC,cAagB,GAbU,CAaV;AAAA,eAXhBC,WAWgB,GAXQ,KAWR;AAAA,eAThBC,iBASgB,GATa,EASb;AAAA,eAPhBC,WAOgB,GAPkB,IAOlB;AAEzB;;AAC2B,eAAXC,WAAW,GAAc;AACnC,cAAI,CAACZ,SAAS,CAACa,QAAf,EAAyB;AACrBb,YAAAA,SAAS,CAACa,QAAV,GAAqB,IAAIb,SAAJ,EAArB;AACH;;AACD,iBAAOA,SAAS,CAACa,QAAjB;AACH;;AACDC,QAAAA,gBAAgB,CAACC,IAAD,EAAuB;AACnC,eAAKR,UAAL,GAAkBQ,IAAI,CAACR,UAAvB;AACA,eAAKC,cAAL,GAAsBO,IAAI,CAACP,cAA3B;AACA,eAAKC,WAAL,GAAmBM,IAAI,CAACN,WAAxB;AACA,eAAKC,iBAAL,GAAyBK,IAAI,CAACL,iBAA9B;AACA,eAAKC,WAAL,GAAmBI,IAAI,CAACJ,WAAxB;AACA,eAAKK,aAAL;AACH;;AAEDC,QAAAA,iBAAiB,GAAE;AACf,cAAIC,KAAK,GAAG,CAAZ;;AACA,eAAK,IAAIC,CAAC,GAAE,CAAZ,EAAcA,CAAC,GAAC,KAAKR,WAAL,CAAiBS,SAAjB,CAA2BC,MAA3C,EAAkDF,CAAC,EAAnD,EAAuD;AACnD,gBAAIG,IAAoB,GAAG,KAAKX,WAAL,CAAiBS,SAAjB,CAA2BD,CAA3B,CAA3B;;AACA,gBAAGG,IAAI,CAACC,IAAL,KAAc,CAAjB,EAAmB;AACfL,cAAAA,KAAK,GAAGC,CAAR;AACA;AACH;AACJ;;AACD,iBAAOD,KAAP;AACH;;AAEDM,QAAAA,aAAa,GAAgB;AACzB,cAAIC,OAAqB,GAAG,IAA5B;AACA,eAAKd,WAAL,CAAiBe,aAAjB,CAA+BC,OAA/B,CAAwCC,IAAD,IAAgC;AACnE,gBAAIC,SAAgB,GAAGD,IAAI,CAACC,SAA5B;AACA,gBAAIC,UAAoC,GAAGF,IAAI,CAACG,aAAL,CAAmBF,SAAS,GAAE,CAA9B,CAA3C;AACA,gBAAIG,GAAG,GAAG,CAAV;AACAF,YAAAA,UAAU,CAACG,OAAX,CAAmBN,OAAnB,CAA2BL,IAAI,IAAI;AAC/B,kBAAGY,QAAQ,CAACZ,IAAI,CAACa,GAAN,CAAR,IAAsBH,GAAzB,EAA6B;AACzBP,gBAAAA,OAAO,GAAGH,IAAV;AACH;AACJ,aAJD;AAKH,WATD;AAUA,iBAAOG,OAAP;AACH;;AAEDT,QAAAA,aAAa,GAAE;AACX,eAAKL,WAAL,CAAiBS,SAAjB,CAA2BO,OAA3B,CAAmCL,IAAI,IAAI;AACvC,gBAAIc,MAAyB,GAAG;AAAA;AAAA,wCAAUxB,WAAV,GAAwByB,oBAAxB,CAA6Cf,IAAI,CAACgB,MAAlD,CAAhC;AACAhB,YAAAA,IAAI,CAACiB,MAAL,GAAcH,MAAM,CAACG,MAArB;AACH,WAHD;AAIA,eAAK5B,WAAL,CAAiBS,SAAjB,GAA6B;AAAA;AAAA,oCAASoB,mBAAT,CAA6B,KAAK7B,WAAL,CAAiBS,SAA9C,EAAwD;AAAA;AAAA,kCAAQR,WAAR,GAAsB6B,QAA9E,CAA7B;AACH;;AAGDC,QAAAA,oBAAoB,GAAoB;AACpC,cAAIC,QAA2B,GAAG;AAAA;AAAA,sCAAU/B,WAAV,GAAwBgC,eAAxB,EAAlC;AACA,cAAIC,YAA8B,GAAG,KAAKlC,WAAL,CAAiBS,SAAjB,CAA2B0B,MAA3B,CAAkClB,IAAI,IAAIA,IAAI,CAACU,MAAL,KAAgBK,QAAQ,CAACL,MAAnE,CAArC;AACA,iBAAOO,YAAP;AACH;;AAEDE,QAAAA,cAAc,GAAkB;AAC5B,cAAIJ,QAA2B,GAAG;AAAA;AAAA,sCAAU/B,WAAV,GAAwBgC,eAAxB,EAAlC;AACA,cAAIC,YAA4B,GAAG,KAAKlC,WAAL,CAAiBS,SAAjB,CAA2B0B,MAA3B,CAAkClB,IAAI,IAAIA,IAAI,CAACU,MAAL,KAAgBK,QAAQ,CAACL,MAAnE,EAA2E,CAA3E,CAAnC;AACA,iBAAOO,YAAP;AACH;;AAEDG,QAAAA,gBAAgB,GAAqB;AACjC,cAAIZ,MAAyB,GAAG,IAAhC;AACA,eAAKzB,WAAL,CAAiBe,aAAjB,CAA+BC,OAA/B,CAAwCC,IAAD,IAAgC;AACnEQ,YAAAA,MAAM,GAAG;AAAA;AAAA,wCAAUxB,WAAV,GAAwBqC,oBAAxB,CAA6CrB,IAAI,CAACC,SAAlD,CAAT;AACH,WAFD;AAGA,iBAAOO,MAAP;AACH;;AACDc,QAAAA,mBAAmB,GAA8B;AAC7C,cAAG,KAAKvC,WAAL,CAAiBe,aAAjB,CAA+BL,MAA/B,KAA0C,CAA7C,EAA+C;AAC3C,mBAAO,EAAP;AACH;;AACD,cAAM8B,qBAAiD,GAAG,KAAKxC,WAAL,CAAiBe,aAAjB,CAA+B,CAA/B,EAAkCK,aAAlC,CAAgDe,MAAhD,CAAuDlB,IAAI,IAAIA,IAAI,CAACK,OAAL,CAAaZ,MAAb,GAAsB,CAArF,CAA1D;AACA,iBAAO8B,qBAAP;AACH,SAhGoC,CAiGrC;;;AACIC,QAAAA,KAAK,GAAS,CAEpB;;AApGuC,O;;AAA5BpD,MAAAA,S,CAcMa,Q,GAA6B,I","sourcesContent":["import { BaseCache } from \"../../../framework/vc/BaseCache\";\nimport { Common } from \"../common/idl/Common\";\nimport { Game } from \"../common/idl/Game\";\nimport { CardUtil } from \"../util/CardUtil\";\nimport { PlayerMgr } from \"./PlayerMgr\";\nimport { RoomMgr } from \"./RoomMgr\";\n\n\n\n\nexport class SettleMgr extends BaseCache {\n    \n    public settleType?: string = \"\";\n    \n    public isShowGameOver?: number = 0;\n\n    public isBaoSanJia?: boolean = false;\n\n    public jiesuanCustomData?: string = \"\";\n\n    public settleModel?: Game.ISettleModel = null;\n\n    // public isBaoSanJia?: boolean = false;\n\n    private static instance: SettleMgr | null = null;\n    \n\n    constructor(name = \"\") {\n\t\tsuper(name);\n\t};\n    public static getInstance(): SettleMgr {\n        if (!SettleMgr.instance) {\n            SettleMgr.instance = new SettleMgr();\n        }\n        return SettleMgr.instance;\n    }\n    updateSelectInfo(resp:Game.ISettleItem){\n        this.settleType = resp.settleType;\n        this.isShowGameOver = resp.isShowGameOver;\n        this.isBaoSanJia = resp.isBaoSanJia;\n        this.jiesuanCustomData = resp.jiesuanCustomData;\n        this.settleModel = resp.settleModel;\n        this.sortTotalInfo()\n    }\n\n    getTotalInfoIndex(){\n        let index = 0;\n        for (let i =0;i<this.settleModel.totalInfo.length;i++ ){\n            let info:Game.ITotalInfo = this.settleModel.totalInfo[i];\n            if(info.bWin === 1){\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n\n    getMaxWinType():Game.IFanInfo{\n        let fanData:Game.IFanInfo = null;\n        this.settleModel.moneyItemList.forEach((item:Game.ISettleMoneyItem) => {\n            let winSeatId:number = item.winSeatId;\n            let settleInfo:Game.ISettleFanExtendInfo = item.fanExtendInfo[winSeatId -1];\n            let num = 0;\n            settleInfo.fanInfo.forEach(info => {\n                if(parseInt(info.fan) >= num){\n                    fanData = info;\n                }\n            });\n        });\n        return fanData;\n    }\n\n    sortTotalInfo(){\n        this.settleModel.totalInfo.forEach(info => {\n            let player:Common.IPlayerInfo = PlayerMgr.getInstance().findPlayerWithUserId(info.userId);\n            info.seatId = player.seatId;\n        });\n        this.settleModel.totalInfo = CardUtil.sortPlayersBySeatId(this.settleModel.totalInfo,RoomMgr.getInstance().mySeatId);\n    }\n    \n\n    getOpponentTotalInfo():Game.ITotalInfo[]{\n        let myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n        let opponentInfo:Game.ITotalInfo[] = this.settleModel.totalInfo.filter(item => item.userId !== myPlayer.userId);\n        return opponentInfo;\n    }\n\n    getMyTotalInfo():Game.ITotalInfo{\n        let myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n        let opponentInfo:Game.ITotalInfo = this.settleModel.totalInfo.filter(item => item.userId === myPlayer.userId)[0];\n        return opponentInfo;\n    }\n\n    getWinPlayerInfo():Common.IPlayerInfo{\n        let player:Common.IPlayerInfo = null;\n        this.settleModel.moneyItemList.forEach((item:Game.ISettleMoneyItem) => {\n            player = PlayerMgr.getInstance().findPlayerWithSeatId(item.winSeatId);\n        });\n        return player\n    }\n    filterFanExtendInfo():Game.ISettleFanExtendInfo[]{\n        if(this.settleModel.moneyItemList.length === 0){\n            return [];\n        }\n        const filteredFanExtendInfo:Game.ISettleFanExtendInfo[] = this.settleModel.moneyItemList[0].fanExtendInfo.filter(item => item.fanInfo.length > 0);\n        return filteredFanExtendInfo;\n    }\n    //清理房间数据\n\tpublic clear(): void {\n\t\t\n\t}\n}\n"]}