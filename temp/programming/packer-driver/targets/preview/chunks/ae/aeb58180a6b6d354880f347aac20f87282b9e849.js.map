{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/RoomController.ts"],"names":["RoomController","GCache","AppEvent","ClientInfo","GConstants","GameTxt","Encrypt","CountTime","EventManager","Utils","BaseControll","GameRoomHelper","GlobalCMDHead","constructor","name","_className","_deskCache","_reconnResLoadTime","_handlerReconnResLoad","_gameValid","_handlerTimeOutLoginGame","_sendLoginMaxCount","_sendLoginCurrowNum","_sendLoginTimeout","_sendLoginData","_isReconn","_isExitsGame","_intoGameData","_handlerCountTimeMap","Map","_halfwayExitRoomData","SelectGame","intoGameData","intoRoomInit","onInit","onInitModuleEvent","addModelListener","ROOM_VIEW_ONLOAD","onViewLoad","NET_REQ_ROOM_LOGIN","reqEnterGameLogin","NET_CHECK_OUT_TIME_ROOM_JOIN","loginRoomOutTime","NET_STOP_CHECK_OUT_TIME_ROOM_JOIN","stopcheckLoginCheckTimeOut","NET_RECEIVE_GAME_LOGIN_SUCCESS","receiveLoginRoomSuccess","NET_RECEIVE_GAME_RECONNECT_SUCCESS","receiveReConnectSuccess","NET_RECEIVE_GAME_LOGIN_FAIL","receiveLoginRoomFail","NET_RECEIVE_GAME_ROOM_INFO","receiveRoomInfo","NET_RECEIVE_GAME_READY_INFO","receiveReadyInfo","NET_REQ_PLAYER_READY","reqPlayerReady","NET_RECEIVE_GAME_PLAYER_READY","receivePlayerReady","NET_RECEIVE_GAME_PLAYER_LOGOUT","receivePlayerLogOut","NET_REQ_LOGOUT_IN_GAME_TRY","reqTryLogOutInGame","NET_RESP_LOGOUT_IN_GAME","respTryLogOutInGame","NET_REQ_LOGOUT_IN_GAME","reqLogOutInGame","NET_REQ_LOGOUT_IN_GAME_FORCE","reqLogOutInGameForce","NET_RECEIVE_GAME_EXIT_ROOM_SUCCESS","receiveExitRoomSuccess","NET_RECEIVE_GAME_STOP_PLAYING","receiveStopPlaying","NET_RECEIVE_GAME_USER_FACE","receiveGameUserFace","NET_RECEIVE_GAME_USER_CHAT","receiveGameUserChat","NET_REQ_GAME_USER_AI","reqGamePlayerAI","NET_RECEIVE_GAME_PLAYER_AI","receiveGamePlayerAI","NET_RECEIVE_ROOM_LEVEL_UP","receiveRoomLevelUp","NET_REQ_GAME_CHANGE_DESK","reqGameChangeTable","NET_RECEIVE_GAME_CHANGE_DESK_ERROR","receiveChangeTableError","GAME_ROOM_STATE_CHANGE","receiveRoomStateChange","ACTIVITY_BANKUP_BACK","receiveBankUpBack","receiveGameOver","receiveGameStart","event","User","LoginRoomState","stopScheduler","isHaveView","isReconn","__reConnection","__connection","print","dispatch","GAME_RECONNECT_RESLOAD","SYS_TOAST_TIP","content","login_goto_room","addScheduler","onViewStart","onViewDestroy","resetIntoGameDataToLogin","TableID","StopCountTime","hall_goto_game_out_time","detailExitGame","gameID","number_valueOf","GameID","roomLevel","Level","tableID","hall_goto_game_no_gameid","NET_REQ_GAME_LEVEL_ROOM_TAB","loginParam","loginSendCMD","tips_txt","infoData","version","AppVer","api","mid","getUserMid","roomId","userInfo","getUserLoginInfoByIntoGame","key","plateInfo","JsonEncode2","ROOM_SEND_LOGIN","login_room_reconnect","roomData","getGameLevelRoomMinMoney","getGameRoomInfoByRoomLevelID","table_verify","moneyId","minMoney","currowMoney","getUserMoneyByID","gameId","levelId","flag","changeTableType","extParam","gameVersion","getGameVersionByGameID","playType","propertyId","ROOM_LOGIN_GAME_ONE_KEY","console","warn","SYS_SHOW_NETLOADING","sendMsg","cmd","body","SYS_UPDATE_HEART_TIME","NET_SEND_MSG","SYS_CLOSE_NETLOADING","respData","dump","NET_REQ_LEVEL_MODEL_CONFIG","NET_REQ_PROPS_INFO","NET_REQ_HALL_GAME_CONFIG","NET_REQ_BANKRUPT_CONFIG","canExitGame","login_reconnect_success","MoneyTypeID","updateRoomInfo","getRoomInfo","readyTime","USER_READY_REQUEST","GameRoomState","STATUS_READED","STATUS_EXITSUCCESS","dumpPlayers","dumpPlayersReadyState","CLIENT_COMMAND_LOGOUT_IN_GAME","ROOM_SEND_LOGOUT","isLoginSuccesed","log","state","CLIENT_COMMAND_REQUEST_AI","ai","isNeedLogout","CLIENT_COMMAND_CHANGE_TABLE","currowRoomState","param","getRoomStates","setRoomStates","roomState","STATUS_NORMAL","isReconnected","startShowMathChing","STATUS_READY","startShowReady","STATUS_START","NET_REQ_BANKRUPT_GIFT_CONF","getCurGameID","getCurLevelID","startShowExitSuccess","isSuccess","isDetail","stopAllScheduler","GAME_GOTO_EXIT","StartCountTime","maxTime","updateCallback","stopCallback","isClearAll","countTime","get","EndTime","StartTime","UpdateCallback","StopCallback","CallbackParam","set","Start","forEach","Stop","CheckCountTimeState","isStart","showBankUpView","isInMatchRoom","Desk","isInPrivateRoom","clear","_instance"],"mappings":"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","sourcesContent":["/**\n * Name = RoomController\n * URL = db://assets/proj/RoomController.ts\n * Time = Fri Jun 17 2022 15:51:55 GMT+0800 (中国标准时间)\n * Author = xueya\n * 游戏控制器的基类 通用游戏事件（此类存在的前提是:游戏场景已存在）\n * 房间控制器的生命周期: constructor -> onInitModuleEvent -> onInit ->clear\n * 附属场景的生命周期: onViewLoad->onViewStart->onViewDestroy\n */\n\nimport { Desk } from \"../cache/Desk\";\nimport { GCache } from \"../cache/GCache\";\nimport { AppEvent } from \"../config/AppEvent\";\nimport { ClientInfo } from \"../config/GameConfig\";\nimport { GConstants } from \"../config/GameConstant\";\nimport { GameTxt } from \"../config/GameTxt\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { CountTime } from \"../framework/extend/CountTime\";\nimport { inf_GameIntoParams } from \"../framework/InterfaceDefines\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseControll } from \"../framework/vc/BaseController\";\nimport { GameRoomHelper } from \"./GameRoomHelper\";\nimport { GlobalCMDHead } from \"./gnet/GlobalCMD\";\n\nexport class RoomController extends BaseControll {\n\tprotected _className = \"\";\n\t/**当前使用的桌子缓存数据 */\n\tprotected _deskCache: Desk = null;\n\t/**重连时资源延时加载时间 秒 */\n\tprotected _reconnResLoadTime = 3;\n\t/**重连时加载定时器句柄 */\n\tprotected _handlerReconnResLoad = null;\n\n\t/** 游戏场景是否被激活 */\n\tprotected _gameValid: boolean = false;\n\t/**发送登录请求超时的超时检测句柄 */\n\tprotected _handlerTimeOutLoginGame = null;\n\t/**发送登录次数最大的次数 */\n\tprotected _sendLoginMaxCount = 2;\n\t/**当前发送登录请求的次数 */\n\tprotected _sendLoginCurrowNum = 0;\n\n\t/**发送登录请求超时的时间 */\n\tprotected _sendLoginTimeout = 15;\n\t/**请求登录时发送的数据 */\n\tprotected _sendLoginData = null;\n\t/** 是否重连 */\n\tprotected _isReconn: boolean = false;\n\n\t/** 是否退出游戏 */\n\tprotected _isExitsGame: boolean = false;\n\n\t/**进入房间发送的参数 */\n\tprotected _intoGameData: inf_GameIntoParams = null;\n\t/** 游戏内倒计时的句柄队列 */\n\tprotected _handlerCountTimeMap: Map<string, CountTime> = new Map();\n\n\t/** 中途退出房间的数据 */\n\tprotected _halfwayExitRoomData = null;\n\n\tprotected static _instance = null;\n\t//实例化\n\tconstructor(name: string) {\n\t\tsuper(name);\n\t\tthis._className = name;\n\t\tthis._intoGameData = GCache.SelectGame?.intoGameData;\n\t\tGameRoomHelper.intoRoomInit();\n\t\tthis.onInit();\n\n\t};\n\n\t/**初始化添加事件绑定 */\n\tprotected onInitModuleEvent(): void {\n\t\t/************************登录相关************************/\n\t\t//房间界面再次加载(一般用于重连)\n\t\tthis.addModelListener(AppEvent.ROOM_VIEW_ONLOAD, this.onViewLoad)\n\n\t\t//登录游戏房间(一键或重连)\n\t\tthis.addModelListener(AppEvent.NET_REQ_ROOM_LOGIN, this.reqEnterGameLogin)\n\t\t//开启检测登录超时\n\t\tthis.addModelListener(AppEvent.NET_CHECK_OUT_TIME_ROOM_JOIN, this.loginRoomOutTime)\n\t\t//停止检测登录超时\n\t\tthis.addModelListener(AppEvent.NET_STOP_CHECK_OUT_TIME_ROOM_JOIN, this.stopcheckLoginCheckTimeOut)\n\n\t\t//游戏房间登录成功\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_LOGIN_SUCCESS, this.receiveLoginRoomSuccess)\n\t\t//游戏房间重连成功\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_RECONNECT_SUCCESS, this.receiveReConnectSuccess)\n\t\t//广播:游戏结束\n\t\t// this.addModelListener(AppEvent.BROADCAST_GAME_OVER, this.receiveGameOver)\n\t\t// //广播:游戏开始\n\t\t// this.addModelListener(AppEvent.BROADCAST_GAME_START, this.receiveGameStart)\n\t\t//游戏房间登录失败\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_LOGIN_FAIL, this.receiveLoginRoomFail)\n\t\t//下发房间信息\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_ROOM_INFO, this.receiveRoomInfo)\n\t\t//server通知准备相关信息\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_READY_INFO, this.receiveReadyInfo)\n\t\t//请求:玩家准备请求\n\t\tthis.addModelListener(AppEvent.NET_REQ_PLAYER_READY, this.reqPlayerReady)\n\t\t//广播:玩家准备\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_PLAYER_READY, this.receivePlayerReady)\n\t\t//广播:玩家进入\n\t\t// this.addModelListener(AppEvent.NET_RECEIVE_GAME_PLAYER_INTO, this.receivePlayerInto)\n\t\t//广播:玩家退出\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_PLAYER_LOGOUT, this.receivePlayerLogOut)\n\n\t\t//请求:玩家请求退出\n\t\tthis.addModelListener(AppEvent.NET_REQ_LOGOUT_IN_GAME_TRY, this.reqTryLogOutInGame)\n\t\t//响应:Server回应退出请求(游戏中退出)\n\t\tthis.addModelListener(AppEvent.NET_RESP_LOGOUT_IN_GAME, this.respTryLogOutInGame)\n\t\t//请求:玩家确定要退出房间\n\t\tthis.addModelListener(AppEvent.NET_REQ_LOGOUT_IN_GAME, this.reqLogOutInGame)\n\t\t//请求:玩家确定要退出房间\n\t\tthis.addModelListener(AppEvent.NET_REQ_LOGOUT_IN_GAME_FORCE, this.reqLogOutInGameForce)\n\t\t//退出游戏房间成功\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_EXIT_ROOM_SUCCESS, this.receiveExitRoomSuccess)\n\t\t//广播:游戏强制结束（游戏中有玩家退出）\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_STOP_PLAYING, this.receiveStopPlaying)\n\n\t\t/************************其它相关************************/\n\t\t//广播:表情\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_USER_FACE, this.receiveGameUserFace)\n\t\t//广播:聊天\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_USER_CHAT, this.receiveGameUserChat)\n\t\t//请求:玩家请求托管或取消托管\n\t\tthis.addModelListener(AppEvent.NET_REQ_GAME_USER_AI, this.reqGamePlayerAI)\n\t\t//广播:玩家托管\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_PLAYER_AI, this.receiveGamePlayerAI)\n\n\t\t//广播:升降场信息\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_ROOM_LEVEL_UP, this.receiveRoomLevelUp)\n\n\t\t//请求:换桌\n\t\tthis.addModelListener(AppEvent.NET_REQ_GAME_CHANGE_DESK, this.reqGameChangeTable)\n\t\t//广播:换桌失败\n\t\tthis.addModelListener(AppEvent.NET_RECEIVE_GAME_CHANGE_DESK_ERROR, this.receiveChangeTableError)\n\t\t//房间状态有改变\n\t\tthis.addModelListener(AppEvent.GAME_ROOM_STATE_CHANGE, this.receiveRoomStateChange)\n\t\t//破产结果通知\n\t\tthis.addModelListener(AppEvent.ACTIVITY_BANKUP_BACK, this.receiveBankUpBack)\n\t\t\n\t}\n\n\t/** override:下发给个控制器做一些专属操作 */\n\tprotected onInit(): void {\n\n\t}\n\tprotected receiveGameOver(){\n\t\t\n\t}\n\n\tprotected receiveGameStart(){\n\t\t\n\t}\n\t/** override:场景加载/界面强制重新刷新 */\n\tpublic onViewLoad(event = null): void {\n\t\tthis._gameValid = true;\n\t\tthis._intoGameData = GCache.SelectGame?.intoGameData;\n\t\tif (this._intoGameData) {\n\t\t\tif (GCache.User.LoginRoomState != true) {\n\t\t\t\tthis._sendLoginCurrowNum = 0;\n\n\t\t\t\tif (this._handlerReconnResLoad) {\n\t\t\t\t\tthis.stopScheduler(this._handlerReconnResLoad);\n\t\t\t\t\tthis._handlerReconnResLoad = null;\n\t\t\t\t}\n\t\t\t\t/** 界面是否已经存在了 */\n\t\t\t\tlet isHaveView = (event != null);\n\t\t\t\tif (this._intoGameData.isReconn == true) {\n\t\t\t\t\t/** 重连 */\n\t\t\t\t\tthis.__reConnection(isHaveView);\n\t\t\t\t} else { /** 推荐入场 */\n\t\t\t\t\tthis.__connection(isHaveView);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/** 重连加载界面 */\n\tprivate __reConnection(isHaveView: boolean = false) {\n\t\tthis.print(\"重新连接，游戏场景状态:\" + `${isHaveView == true ? \"存在\" : \"不存在\"}`)\n\t\t//--重连--\n\t\tthis._isReconn = true;\n\t\tthis.stopScheduler(this._handlerReconnResLoad);\n\t\tthis._handlerReconnResLoad = null;\n\n\t\tif (isHaveView == false) {\n\t\t\t//重连时先预加载资源\n\t\t\tEventManager.dispatch(AppEvent.GAME_RECONNECT_RESLOAD);\n\t\t\t//吐司:场景加载中\n\t\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.login_goto_room });\n\n\t\t\tthis._handlerReconnResLoad = this.addScheduler(this._reconnResLoadTime, () => {\n\t\t\t\tthis.stopScheduler(this._handlerReconnResLoad);\n\t\t\t\tthis._handlerReconnResLoad = null;\n\t\t\t\t//清空本次登录请求数据\n\t\t\t\tthis._sendLoginData = null;\n\t\t\t\t//发送登录请求\n\t\t\t\tEventManager.dispatch(AppEvent.NET_REQ_ROOM_LOGIN);\n\t\t\t})\n\t\t} else {\n\t\t\tthis.stopScheduler(this._handlerReconnResLoad);\n\t\t\tthis._handlerReconnResLoad = null;\n\t\t\t//清空本次登录请求数据\n\t\t\tthis._sendLoginData = null;\n\t\t\t//发送登录请求\n\t\t\tEventManager.dispatch(AppEvent.NET_REQ_ROOM_LOGIN);\n\t\t}\n\t}\n\t/** 正常连接 */\n\tprivate __connection(isHaveView: boolean = false) {\n\t\tthis.print(\"推荐入场，游戏场景状态:\" + `${isHaveView == true ? \"存在\" : \"不存在\"}`)\n\t\t//--非重连--\n\t\tthis._isReconn = false;\n\t\tthis.stopScheduler(this._handlerReconnResLoad);\n\t\tthis._handlerReconnResLoad = null;\n\n\t\tif (isHaveView == false) {\n\t\t\t//吐司:场景加载中\n\t\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.login_goto_room });\n\t\t\t// this._handlerReconnResLoad = this.addScheduler(this._reconnResLoadTime, () => {\n\t\t\t// \tthis.stopScheduler(this._handlerReconnResLoad);\n\t\t\t// \tthis._handlerReconnResLoad = null;\n\t\t\t// \t//清空本次登录请求数据\n\t\t\t// \tthis._sendLoginData = null;\n\t\t\t// \t//发送登录请求\n\t\t\t// \tEventManager.dispatch(AppEvent.NET_REQ_ROOM_LOGIN);\n\t\t\t// })\n\t\t}\n\t\t//清空本次登录请求数据\n\t\tthis._sendLoginData = null;\n\t\t//发送登录请求\n\t\tEventManager.dispatch(AppEvent.NET_REQ_ROOM_LOGIN);\n\t}\n\n\t/** override:场景显示 */\n\tpublic onViewStart(): void {\n\t}\n\t/** override:游戏场景被销毁 */\n\tpublic onViewDestroy(): void {\n\t}\n\t/** 重置登录请求数据为登录非重连 */\n\tprotected resetIntoGameDataToLogin(event = null) {\n\t\tif (GCache.SelectGame.intoGameData) {\n\t\t\tGCache.SelectGame.intoGameData.TableID = 0;\n\t\t}\n\t\tif (this._intoGameData) {\n\t\t\tthis._intoGameData.TableID = 0;\n\n\t\t}\n\t}\n\n\t/** 请求登录进入房间 */\n\tprotected reqEnterGameLogin(event = null) {\n\t\tif (GCache.User.LoginRoomState == true) {\n\t\t\tthis.print(\"Error:已经登录成功了，不需要再次登录\")\n\t\t\treturn;\n\t\t}\n\t\tthis.stopcheckLoginCheckTimeOut();\n\t\tthis.StopCountTime();\n\t\tif (this._sendLoginCurrowNum >= this._sendLoginMaxCount) {\n\t\t\tthis.print(\"Error:超出登录的最大次数 直接退出游戏场景\")\n\t\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_out_time })\n\t\t\tthis.detailExitGame();\n\t\t\treturn;\n\t\t}\n\t\tif (!this._intoGameData) {\n\t\t\tthis.print(\"Error:进入房间的缓存参数有误 直接退出游戏场景\")\n\t\t\tthis.detailExitGame(false);\n\t\t\treturn;\n\t\t}\n\t\tthis.print(\"请求登录进入房间===>当前登录次数:\" + this._sendLoginCurrowNum)\n\n\t\tlet gameID = Utils.number_valueOf(this._intoGameData.GameID, 0)\n\t\tlet roomLevel = Utils.number_valueOf(this._intoGameData.Level, 0)\n\t\tlet tableID = Utils.number_valueOf(this._intoGameData.TableID, 0);\n\n\t\tif (gameID <= 0) {\n\t\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_no_gameid })\n\t\t\tthis.detailExitGame();\n\t\t\treturn\n\t\t}\n\t\t//先请求更新子游戏场次信息\n\t\tEventManager.dispatch(AppEvent.NET_REQ_GAME_LEVEL_ROOM_TAB, gameID, 1)\n\t\t//登录时请求的数据\n\t\tlet loginParam = null;\n\t\t//登录发送的数据\n\t\tlet loginSendCMD = null;\n\t\t//吐司文本\n\t\tlet tips_txt = null;\n\n\t\tif (tableID > 0) {\n\t\t\tthis.print(`请求重连进入游戏房间 gameID = ${gameID} roomLevel = ${roomLevel} tableID = ${tableID}`);\n\t\t\tlet infoData = {\n\t\t\t\tversion: ClientInfo.AppVer,\n\t\t\t\tapi: 1,\n\t\t\t};\n\t\t\tloginParam = {\n\t\t\t\tmid: GCache.User.getUserMid(),\n\t\t\t\troomId: tableID,\n\t\t\t\tuserInfo: GCache.User.getUserLoginInfoByIntoGame(gameID),\n\t\t\t\tkey: \"55ff85e777d50680fb52935076d7e55b\",\n\t\t\t\tplateInfo: Encrypt.JsonEncode2(infoData),\n\t\t\t}\n\t\t\tloginSendCMD = GlobalCMDHead.ROOM_SEND_LOGIN;\n\n\t\t\ttips_txt = GameTxt.login_room_reconnect;\n\t\t} else {\n\t\t\tthis.print(`请求一键进入游戏房间 gameID = ${gameID} roomLevel = ${roomLevel} tableID = ${tableID}`);\n\t\t\tlet roomData = null;\n\t\t\tif (roomLevel == 0) {\n\t\t\t\troomData = GCache.SelectGame.getGameLevelRoomMinMoney(gameID)\n\t\t\t} else {\n\t\t\t\troomData = GCache.SelectGame.getGameRoomInfoByRoomLevelID(gameID, roomLevel)\n\t\t\t}\n\t\t\troomData = Utils.table_verify(roomData)\n\n\t\t\tlet moneyId = Utils.number_valueOf(roomData[\"base_chip_type\"])\n\t\t\tlet minMoney = Utils.number_valueOf(roomData[\"min_money\"])\n\t\t\tlet currowMoney = Utils.number_valueOf(GCache.User.getUserMoneyByID(moneyId))\n\n\t\t\tloginParam = {\n\t\t\t\tgameId: gameID,\n\t\t\t\tlevelId: roomLevel,\n\t\t\t\tuserInfo: GCache.User.getUserLoginInfoByIntoGame(gameID),\n\t\t\t\tkey: \"55ff85e777d50680fb52935076d7e55b\",\n\t\t\t\tflag: 1,\n\t\t\t\tchangeTableType: 0,  //1或者0\n\t\t\t\textParam: {},\n\t\t\t\tgameVersion: Utils.number_valueOf(GCache.SelectGame.getGameVersionByGameID(gameID)),      //游戏版本号\n\t\t\t\tplayType: Utils.number_valueOf(roomData[\"play_mode\"]),        //玩法类型\n\t\t\t\tpropertyId: moneyId,  //货币类型：0银币，1元宝\n\t\t\t}\n\t\t\tloginSendCMD = GlobalCMDHead.ROOM_LOGIN_GAME_ONE_KEY;\n\n\t\t\tif (currowMoney < minMoney) {\n\t\t\t\t//触发降场\n\t\t\t\tconsole.warn(\"应该触发降场,但是并未处理\")\n\t\t\t\t// return\n\t\t\t}\n\t\t}\n\t\t//吐司:重连独有\n\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: tips_txt });\n\t\t//显示网络loading\n\t\tEventManager.dispatch(AppEvent.SYS_SHOW_NETLOADING);\n\t\t//保存请求登录时的数据\n\t\tthis._sendLoginData = loginParam;\n\t\t//登录次数计次\n\t\tthis._sendLoginCurrowNum = this._sendLoginCurrowNum + 1;\n\n\t\tlet sendMsg = {\n\t\t\tcmd: loginSendCMD,\n\t\t\tbody: this._sendLoginData,\n\t\t}\n\t\t//先修改心跳间隔\n\t\tEventManager.dispatch(AppEvent.SYS_UPDATE_HEART_TIME, 6000)\n\t\t//请求命令\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\t\t//开启超时检测\n\t\tthis.stopcheckLoginCheckTimeOut()\n\t\tthis._handlerTimeOutLoginGame = this.addScheduler(this._sendLoginTimeout, () => {\n\t\t\t//开启登录超时检测\n\t\t\tEventManager.dispatch(AppEvent.NET_CHECK_OUT_TIME_ROOM_JOIN)\n\t\t})\n\n\t}\n\t/** 停止检测登录房间超时 */\n\tprotected stopcheckLoginCheckTimeOut(event = null) {\n\t\tthis.stopScheduler(this._handlerTimeOutLoginGame)\n\t\tthis._handlerTimeOutLoginGame = null;\n\t}\n\t/** 登录游戏房间超时 */\n\tprivate loginRoomOutTime(event = null) {\n\t\tif (!this._handlerTimeOutLoginGame) {\n\t\t\treturn\n\t\t}\n\t\tthis.print(\"请求登录超时\" + this._sendLoginCurrowNum);\n\t\tthis.stopcheckLoginCheckTimeOut()\n\t\tif (this._sendLoginCurrowNum >= this._sendLoginMaxCount) {\n\t\t\tthis.print(\"Error:超出登录的最大次数 直接退出游戏场景\")\n\t\t\t//关闭网络loading\n\t\t\tEventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n\t\t\t//修改心跳间隔\n\t\t\tEventManager.dispatch(AppEvent.SYS_UPDATE_HEART_TIME, 10000)\n\t\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_out_time })\n\t\t\tthis.detailExitGame();\n\t\t\treturn;\n\t\t}\n\t\tif (GCache.User.LoginRoomState != true) {\n\t\t\t//发送登录请求\n\t\t\tEventManager.dispatch(AppEvent.NET_REQ_ROOM_LOGIN)\n\t\t}\n\t}\n\t/** 房间登录成功 */\n\tprotected receiveLoginRoomSuccess(event = null, respData = null) {\n\t\tthis.dump(respData, \"房间登录成功==>\")\n\t\tthis._isExitsGame = false;\n\t\t//关闭网络loading\n\t\tEventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n\t\t//重置登录次数\n\t\tthis._sendLoginCurrowNum = 0;\n\t\t//更新用户登录游戏房间的状态\n\t\tGCache.User.LoginRoomState = true;\n\t\t//停止检测进房超时\n\t\tEventManager.dispatch(AppEvent.NET_STOP_CHECK_OUT_TIME_ROOM_JOIN)\n\t\t//重置中途退出的数据\n\t\tthis._halfwayExitRoomData = null;\n\n\t\t//请求等级配置\n\t\tEventManager.dispatch(AppEvent.NET_REQ_LEVEL_MODEL_CONFIG);\n\t\t//请求道具信息\n\t\tEventManager.dispatch(AppEvent.NET_REQ_PROPS_INFO);\n\t\t//请求大厅游戏配置\n\t\tEventManager.dispatch(AppEvent.NET_REQ_HALL_GAME_CONFIG);\n\t\t//请求游戏房间信息\n\t\tEventManager.dispatch(AppEvent.NET_REQ_GAME_LEVEL_ROOM_TAB, this._intoGameData.GameID);\n\t\t//请求破产配置\n\t\tEventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_CONFIG);\n\t\t\n\t\tif (this._deskCache) {\n\t\t\t// this._deskCache.resertPlayer();\n\t\t\tthis._deskCache.canExitGame = true;\n\t\t\t// this._deskCache.setCurGameID(this._intoGameData.GameID);\n\t\t}\n\t}\n\t/** 房间重连成功 */\n\tprotected receiveReConnectSuccess(event = null, respData = null) {\n\t\tthis.dump(respData, \"房间重连成功==>\")\n\t\t//关闭网络loading\n\t\tEventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n\t\t//吐司:重连成功\n\t\tEventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.login_reconnect_success });\n\t\t//重置登录次数\n\t\tthis._sendLoginCurrowNum = 0;\n\t\t//更新用户登录游戏房间的状态\n\t\tGCache.User.LoginRoomState = true;\n\t\t//停止检测进房超时\n\t\tEventManager.dispatch(AppEvent.NET_STOP_CHECK_OUT_TIME_ROOM_JOIN);\n\t\t//重置中途退出的数据\n\t\tthis._halfwayExitRoomData = null;\n\n\t\t//请求等级配置\n\t\tEventManager.dispatch(AppEvent.NET_REQ_LEVEL_MODEL_CONFIG);\n\t\t//请求道具信息\n\t\tEventManager.dispatch(AppEvent.NET_REQ_PROPS_INFO);\n\t\t//请求大厅游戏配置\n\t\tEventManager.dispatch(AppEvent.NET_REQ_HALL_GAME_CONFIG);\n\t\t//请求游戏房间信息\n\t\tEventManager.dispatch(AppEvent.NET_REQ_GAME_LEVEL_ROOM_TAB, this._intoGameData.GameID);\n\t\t//请求破产配置\n\t\tEventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_CONFIG);\n\n\t\tif (this._deskCache) {\n\t\t\t// PlayerMgr.getInstance().resertPlayer();\n\t\t\tthis._deskCache.canExitGame = true;\n\t\t\tthis._deskCache.MoneyTypeID = this._sendLoginData[\"propertyId\"];\n\t\t\t// this._deskCache.setCurGameID(this._intoGameData.GameID);\n\t\t}\n\n\t}\n\t/** 游戏房间登录失败 */\n\tprotected receiveLoginRoomFail(event = null, respData = null) {\n\t\tthis.dump(respData, \"游戏房间登录失败==>\" + this._sendLoginCurrowNum)\n\t\t//更新用户登录游戏房间的状态\n\t\tGCache.User.LoginRoomState = false;\n\t\tif (this._sendLoginCurrowNum >= this._sendLoginMaxCount) {\n\t\t\t//关闭网络loading\n\t\t\tEventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n\t\t}\n\t\t//发送登录请求\n\t\tEventManager.dispatch(AppEvent.NET_REQ_ROOM_LOGIN)\n\t}\n\t/** 下发房间信息 */\n\tprotected receiveRoomInfo(event = null, respData = null) {\n\t\tthis._deskCache.updateRoomInfo(respData);\n\t\tthis.dump(this._deskCache.getRoomInfo(), \"下发房间信息==>\")\n\t}\n\t/** server通知准备相关信息 */\n\tprotected receiveReadyInfo(event = null, respData = null) {\n\t\tthis.dump(respData, \"server通知准备相关信息==>\")\n\t\tif (respData) {\n\t\t\tif (this._deskCache) {\n\t\t\t\tthis._deskCache.readyTime = respData[\"readyTime\"];\n\t\t\t}\n\t\t}\n\t\t// //更新房间状态\n\t\t// EventManager.dispatch(AppEvent.GAME_ROOM_STATE_CHANGE, GConstants.GameRoomState.STATUS_READY);\n\t\t// //请求破产配置\n\t\t// EventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_CONFIG);\n\t}\n\n\t/** 请求:玩家请求准备 */\n\tprotected reqPlayerReady(event = null) {\n\t\t// this.print(\"请求:玩家请求准备====>\")\n\t\tlet sendMsg = {\n\t\t\tcmd: GlobalCMDHead.USER_READY_REQUEST,\n\t\t\tbody: null,\n\t\t}\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\t}\n\t/** 广播:玩家准备 */\n\tprotected receivePlayerReady(event = null, respData = null) {\n\t\tif (respData) {\n\t\t\tif (respData[\"userId\"] == GCache.User.getUserMid() && this._deskCache) {\n\t\t\t\t//更新房间状态\n\t\t\t\tEventManager.dispatch(AppEvent.GAME_ROOM_STATE_CHANGE, GConstants.GameRoomState.STATUS_READED);\n\t\t\t};\n\t\t};\n\n\t}\n\n\t// /** 广播:玩家进入 */\n\t// protected receivePlayerInto(event = null, respData = null) {\n\t// \tthis.dump(respData, \"广播:玩家进入==>\")\n\t// }\n\t/** 广播:玩家退出 */\n\tprotected receivePlayerLogOut(event = null, respData = null) {\n\t}\n\t/** 广播:退出游戏房间成功 */\n\tprotected receiveExitRoomSuccess(event = null, respData = null) {\n\t\tthis.dump(respData, \"退出房间成功==>\")\n\t\t\n\t\tthis.resetIntoGameDataToLogin();\n\t\t//更新用户登录游戏房间的状态\n\t\tGCache.User.LoginRoomState = false;\n\t\tif (this._deskCache) {\n\n\t\t\t//更新房间状态\n\t\t\tEventManager.dispatch(AppEvent.GAME_ROOM_STATE_CHANGE, GConstants.GameRoomState.STATUS_EXITSUCCESS);\n\n\t\t\tthis._deskCache.dumpPlayers()\n\t\t\tthis._deskCache.dumpPlayersReadyState()\n\t\t\tif (this._deskCache.canExitGame == false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t//退出游戏场景\n\t\tif(this._isExitsGame){\n\t\t\tthis.detailExitGame(false);\n\t\t}\n\t\t// \n\t}\n\t/** 广播:中途退出房间 */\n\tprotected receiveStopPlaying(event = null, respData = null) {\n\t\tthis.dump(respData, \"中途退出房间成功 强制结束游戏==>\")\n\t\tthis._halfwayExitRoomData = respData;\n\t\t//更新房间状态\n\t\tEventManager.dispatch(AppEvent.GAME_ROOM_STATE_CHANGE, GConstants.GameRoomState.STATUS_EXITSUCCESS);\n\t}\n\n\t/** 请求:玩家请求中途退出游戏 */\n\tprotected reqTryLogOutInGame(event = null) {\n\t\tlet sendMsg = {\n\t\t\tcmd: GlobalCMDHead.CLIENT_COMMAND_LOGOUT_IN_GAME,\n\t\t\tbody: null,\n\t\t}\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\t}\n\t/** 请求:玩家确定要退出房间 */\n\tprotected reqLogOutInGame(event = null) {\n\t\tlet sendMsg = {\n\t\t\tcmd: GlobalCMDHead.ROOM_SEND_LOGOUT,\n\t\t\tbody: null,\n\t\t}\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\t\tthis._isExitsGame = true;\n\t}\n\t/** 强制踢人 */\n\tprotected reqLogOutInGameForce(event = null) {\n\t\tif (GCache.User.isLoginSuccesed() == false || GCache.User.LoginRoomState == false) {\n\t\t\t//退出游戏场景\n\t\t\tthis.detailExitGame(false);\n\t\t\treturn;\n\t\t}\n\t\tif (!this._deskCache) {\n\t\t\treturn;\n\t\t}\n\t\tthis.reqLogOutInGame();\n\t}\n\t/** 响应:玩家请求中途退出游戏 */\n\tprotected respTryLogOutInGame(event = null, respData = null) {\n\t\tconsole.log(respData, \"玩家请求中途退出游戏==>\")\n\t}\n\n\t/**广播: 表情 */\n\tprotected receiveGameUserFace(event = null, respData = null) {\n\t\tthis.dump(respData, \"有玩家发表情了==>\")\n\t}\n\t/**广播: 聊天 */\n\tprotected receiveGameUserChat(event = null, respData = null) {\n\t\tthis.dump(respData, \"有玩家发聊天消息了==>\")\n\t}\n\t/** 请求:玩家请求托管或取消托管 */\n\tprotected reqGamePlayerAI(event = null, state: number) {\n\t\t//0表示取消托管，非0表示托管\n\t\tstate = Utils.number_valueOf(state, 0)\n\t\tlet sendMsg = {\n\t\t\tcmd: GlobalCMDHead.CLIENT_COMMAND_REQUEST_AI,\n\t\t\tbody: { ai: state },\n\t\t}\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\t}\n\t/** 广播:玩家托管 */\n\tprotected receiveGamePlayerAI(event = null, respData = null) {\n\t\t\n\t}\n\n\t/** 广播: 收到升降场信息 **/\n\tprotected receiveRoomLevelUp(event = null, respData = null) {\n\t\tthis.dump(respData, \"广播:收到升降场信息==>\")\n\t}\n\t/** 请求：换桌 */\n\tprotected reqGameChangeTable(event = null, isNeedLogout: boolean = false) {\n\t\tlet sendMsg = {\n\t\t\tcmd: GlobalCMDHead.CLIENT_COMMAND_CHANGE_TABLE,\n\t\t\tbody: {},\n\t\t}\n\t\tEventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\t}\n\t/** 返回：换桌失败 */\n\tprotected receiveChangeTableError(event = null, respData = null) {\n\t\tthis.dump(respData, \"返回：换桌失败==>\")\n\t}\n\t/** 房间状态改变 */\n\tprotected receiveRoomStateChange(event = null, currowRoomState, param = null) {\n\t\tif (this._deskCache && currowRoomState != null) {\n\t\t\tthis.print(\"房间状态改变>>>: 上一个:\", this._deskCache.getRoomStates(), \" 更新为:\", currowRoomState)\n\t\t\tthis._deskCache.setRoomStates(currowRoomState)\n\t\t\tlet roomState = this._deskCache.getRoomStates();\n\t\t\tswitch (roomState) {\n\t\t\t\tcase GConstants.GameRoomState.STATUS_NORMAL://开始匹配\n\t\t\t\t\tlet isReconnected = false;\n\t\t\t\t\tif (this._intoGameData && Utils.number_valueOf(this._intoGameData.TableID) > 0) {\n\t\t\t\t\t\tisReconnected = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.startShowMathChing(isReconnected);\n\t\t\t\t\tbreak;\n\t\t\t\tcase GConstants.GameRoomState.STATUS_READY://开始显示准备状态\n\t\t\t\t\tthis.startShowReady(param);\n\t\t\t\t\tbreak;\n\t\t\t\tcase GConstants.GameRoomState.STATUS_START:\n\t\t\t\t\t//请求破产礼包的配置\n\t\t\t\t\tEventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_GIFT_CONF, this._deskCache.getCurGameID(), this._deskCache.getCurLevelID());\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase GConstants.GameRoomState.STATUS_EXITSUCCESS:\n\t\t\t\t\tthis.print(\"=======切换成结束状态:===\");\n\t\t\t\t\tif (!this._deskCache) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.startShowExitSuccess();\n\t\t\t\t\t/*\n\t\t\t\t\tthis.print(\"是否在私人房间或比赛房间:\", this._deskCache.isInMatchRoom(), this._deskCache.isInPrivateRoom());\n\t\t\t\t\tif (this._deskCache.isInMatchRoom() || this._deskCache.isInPrivateRoom()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.print(\"检查破产礼包===>>>>\", GameRoomHelper.checkIsBankrupt(this._deskCache.getCurGameID(), this._deskCache.getCurLevelID()))\n\n\t\t\t\t\tif (GameRoomHelper.checkIsBankrupt(this._deskCache.getCurGameID(), this._deskCache.getCurLevelID()) == true) {//破产了,弹出破产界面\n\t\t\t\t\t\tthis.print(\"破产结果: 破产了 弹出破产界面\");\n\t\t\t\t\t\t//检查破产礼包\n\t\t\t\t\t\tGameRoomHelper.checkShowBankruptView(this._deskCache.getCurGameID(), this._deskCache.getCurLevelID(), this._deskCache.MoneyTypeID)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.print(\"破产结果: 没有破产\");\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/** 破产结果通知 */\n\tprotected receiveBankUpBack(event, isSuccess, param) {\n\t\tthis.dump(param, \"破产结果通知:===>\" + isSuccess)\n\t}\n\t//开始匹配\n\tprotected startShowMathChing(isReconn: boolean = false) {\n\n\t}\n\t//开始显示准备\n\tprotected startShowReady(param = null) {\n\n\t}\n\t//开始显示退出成功\n\tprotected startShowExitSuccess(param = null) {\n\n\t}\n\n\n\t/** 延迟退出游戏 */\n\tprotected detailExitGame(isDetail: boolean = true) {\n\t\tif (isDetail) {\n\t\t\tthis.StopCountTime();\n\t\t\tthis.stopAllScheduler();\n\t\t\tthis.addScheduler(2, () => {\n\t\t\t\tthis.StopCountTime();\n\t\t\t\tthis.stopAllScheduler();\n\t\t\t\tif (this._gameValid == true) {\n\t\t\t\t\tEventManager.dispatch(AppEvent.GAME_GOTO_EXIT);\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tif (this._gameValid == true) {\n\t\t\t\tthis.StopCountTime();\n\t\t\t\tEventManager.dispatch(AppEvent.GAME_GOTO_EXIT);\n\t\t\t}\n\t\t}\n\n\t}\n\t/**\n\t * 开始一个倒计时\n\t * @param key 关键字\n\t * @param maxTime 最大时间\n\t * @param updateCallback 更新回调\n\t * @param stopCallback 停止回调\n\t * @param isClearAll 是否先关闭所有 停止回调\n\t */\n\tprotected StartCountTime(key, maxTime, updateCallback, stopCallback, isClearAll = false) {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\t\tif (isClearAll) {\n\t\t\tthis.StopCountTime();\n\t\t}\n\t\tlet countTime = this._handlerCountTimeMap.get(key);\n\t\tif (!countTime) {\n\t\t\tcountTime = new CountTime();\n\t\t}\n\t\tcountTime.EndTime = 0;\n\t\tcountTime.StartTime = maxTime;\n\t\tcountTime.UpdateCallback = updateCallback;\n\t\tcountTime.StopCallback = stopCallback;\n\t\tcountTime.CallbackParam = key;\n\t\tthis._handlerCountTimeMap.set(key, countTime);\n\t\tcountTime.Start();\n\t}\n\t/** 停止一个倒计时(不传则停止所有) */\n\tprotected StopCountTime(key = null) {\n\t\tif (!key) {\n\t\t\tthis._handlerCountTimeMap.forEach((countTime) => {\n\t\t\t\tcountTime.Stop();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tlet countTime = this._handlerCountTimeMap.get(key);\n\t\tif (countTime) {\n\t\t\tcountTime.Stop();\n\t\t}\n\t}\n\t/** 检测倒计时的开启关闭状态*/\n\tpublic CheckCountTimeState(key): boolean {\n\t\tif (!key) {\n\t\t\treturn false;\n\t\t}\n\t\tlet countTime = this._handlerCountTimeMap.get(key);\n\t\tif (countTime) {\n\t\t\treturn countTime.isStart();\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** 显示破产界面 */\n\tprotected showBankUpView(event) {\n\t\tlet isInMatchRoom = GCache.Desk.isInMatchRoom();\n\t\tlet isInPrivateRoom = GCache.Desk.isInPrivateRoom();\n\t\tif (isInMatchRoom || isInPrivateRoom) {\n\t\t\t//此处要重新开启socket\n\t\t\treturn;\n\t\t}\n\t}\n\tpublic clear() {\n\t\tsuper.clear();\n\t\tthis._gameValid = false;\n\t\tthis._deskCache = null;\n\t}\n}\n\n"]}