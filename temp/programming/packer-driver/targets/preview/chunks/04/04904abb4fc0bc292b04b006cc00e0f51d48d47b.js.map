{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/GameDeskPrefabCtr.ts"],"names":["_decorator","Node","Utils","BaseComponent","RoomMgr","OPCode","FXJController","GameEvent","NodeClockCtr","NodeDiceCtr","NodeHandCardCtr","NodeHuCardCtr","NodeMeldCardCtr","NodeOutCardCtr","NodeWallCtr","ccclass","property","menu","GameDeskPrefabCtr","tooltip","type","constructor","_gangCount","console","log","init","getInstance","GameDeskCtr","onInitModuleEvent","addModelListener","VIEW_BROADCAST_GAME_START","onGameStart","VIEW_BROADCAST_ZHI_TOU","onRollDices","VIEW_BROADCAST_DEAL_CARD","onDealCard","VIEW_BROADCAST_OPERATION_START","onOperationStart","VIEW_USER_OPERATION","onOperationSelect","UPDATE_USER_OPERATION_RESULT","onOperationResult","VIEW_BROADCAST_GRAB_CARD","onTakeCard","VIEW_BROADCAST_GAME_OVER","onGameOver","onLoad","initData","initView","start","updateView","resetView","OnChangedSeat","hostDir","nodeWall","nodeHandCard","nodeOutCard","nodeMeldCard","nodeClock","mySeatId","node","setRotationFromEuler","nodeDesk","event","data","isNull","table_isEmpty","diceInfo","bankerSeatId","seatId","diceList","dices","length","i","dice","nodeDice","cards","opCode","OPE_OUT_CARD","onOutCard","OPE_RIGHT_CHI","OPE_MIDDLE_CHI","OPE_LEFT_CHI","OPE_PENG","OPE_QIANG_PENG","onPengGang","OPE_AN_GANG","OPE_GANG","OPE_BU_GANG","OPE_HU","OPE_ZI_MO","onHu","OPE_DIAO","dataTakeCard","gangCount","remian","remainCardNum","opCard","cardSeatId","nodeHuCard","handCards","onReconnect","onDestroy","args"],"mappings":"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","sourcesContent":["\nimport { _decorator, Node } from 'cc';\nimport { Utils } from '../../../framework/Utils';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { OPCode } from '../common/FXJConfig';\nimport { FXJController } from '../common/FXJController';\nimport { GameEvent } from '../common/GameEvent';\nimport { Game } from '../common/idl/Game';\nimport { NodeClockCtr } from './NodeClockCtr';\nimport { NodeDiceCtr } from './NodeDiceCtr';\nimport { NodeHandCardCtr } from './NodeHandCardCtr';\nimport { NodeHuCardCtr } from './NodeHuCardCtr';\nimport { NodeMeldCardCtr } from './NodeMeldCardCtr';\nimport { NodeOutCardCtr } from './NodeOutCardCtr';\nimport { NodeWallCtr } from './NodeWallCtr';\nconst { ccclass, property, menu } = _decorator;\n\n/**\n * Name = GameDeskPrefabCtr\n * URL = db://assets/package/game/scripts/GameDeskPrefabCtr.ts\n * Time = Thu Aug 03 2023 11:48:42 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('GameDeskPrefabCtr')\n//方便编辑器识别的菜单项目\n@menu('prefab/game/GameDeskPrefabCtr')\nexport class GameDeskPrefabCtr extends BaseComponent {\n    // 桌子节点\n    @property({ tooltip: \"桌子节点\", type: Node })\n    private nodeDesk: Node = null;\n\n    // 牌墙节点\n    @property({ tooltip: \"牌墙节点\", type: NodeWallCtr })\n    private nodeWall: NodeWallCtr = null;\n\n    // 出牌节点\n    @property({ tooltip: \"出牌节点\", type: NodeOutCardCtr })\n    private nodeOutCard: NodeOutCardCtr = null;\n\n    // 手牌节点\n    @property({ tooltip: \"手牌节点\", type: NodeHandCardCtr })\n    private nodeHandCard: NodeHandCardCtr = null;\n\n    // 碰杠牌节点\n    @property({ tooltip: \"碰杠牌节点\", type: NodeMeldCardCtr })\n    private nodeMeldCard: NodeMeldCardCtr = null;\n\n    // 胡牌节点\n    @property({ tooltip: \"胡牌节点\", type: NodeHuCardCtr })\n    private nodeHuCard: NodeHuCardCtr = null;\n\n    // 闹钟节点\n    @property({ tooltip: \"闹钟节点\", type: NodeClockCtr })\n    private nodeClock: NodeClockCtr = null;\n\n    // 色子节点\n    @property({ tooltip: \"色子节点\", type: NodeDiceCtr })\n    private nodeDice: NodeDiceCtr = null;\n\n    // 杠牌数 计数，用于界面逻辑\n    private _gangCount: number = 0;\n\n    constructor() {\n        super()\n        console.log(\"==============飞小鸡游戏桌子初始化========\");\n        this.init();\n    }\n\n    //加载初始化\n    init() {\n        FXJController.getInstance().GameDeskCtr = this;\n    }\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n        // 游戏开始\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GAME_START, this.onGameStart);\n        // 摇色子\n        this.addModelListener(GameEvent.VIEW_BROADCAST_ZHI_TOU, this.onRollDices);\n        // 发牌\n        this.addModelListener(GameEvent.VIEW_BROADCAST_DEAL_CARD, this.onDealCard);\n        // 操作开始\n        this.addModelListener(GameEvent.VIEW_BROADCAST_OPERATION_START, this.onOperationStart);\n        // 操作选项\n        this.addModelListener(GameEvent.VIEW_USER_OPERATION, this.onOperationSelect);\n        // 出牌 吃碰杠 胡\n        this.addModelListener(GameEvent.UPDATE_USER_OPERATION_RESULT, this.onOperationResult);\n        // 抓牌\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GRAB_CARD, this.onTakeCard);\n        // 游戏结束\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GAME_OVER, this.onGameOver);\n\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    };\n\n    /** 初始化数据 */\n    initData() {\n\n    };\n\n    /** 初始化界面 */\n    initView() {\n\n    };\n\n    /** 更新界面 */\n    updateView() {\n\n    };\n\n    /** 重置界面 */\n    resetView() {\n        this._gangCount = 0;\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this.nodeWall.OnChangedSeat(hostDir);\n        this.nodeHandCard.OnChangedSeat(hostDir);\n        this.nodeOutCard.OnChangedSeat(hostDir);\n        this.nodeMeldCard.OnChangedSeat(hostDir);\n        this.nodeClock.OnChangedSeat(hostDir);\n    }\n\n    // 牌墙 ---------------------------------------------------------------------\n    /** 开始游戏 */\n    onGameStart() {\n        this.log(\"GameDeskPrefabCtr.onGameStart\");\n        // 需要根据玩家位置旋转方位\n        let hostDir = RoomMgr.getInstance().mySeatId - 1; // mark\n        this.node.setRotationFromEuler(0, -90 * hostDir, 0);\n        this.nodeDesk.setRotationFromEuler(0, 90 * hostDir, 0); // 为了保留桌子水印，反向旋转桌子\n        this.resetView();\n        \n        this.nodeWall.onGameStart();\n        this.nodeHandCard.onGameStart();\n        this.nodeOutCard.onGameStart();\n        this.nodeMeldCard.onGameStart();\n        this.nodeClock.onGameStart();\n    }\n\n    /** 摇色子 */\n    onRollDices(event, data: Game.IRollDice) {\n        this.log(\"GameDeskPrefabCtr.onRollDices\", data);\n\n        if (Utils.isNull(data) || Utils.table_isEmpty(data.diceInfo)) {\n            this.log(\"GameDeskPrefabCtr.onRollDices\", \"数据异常\", data);\n            return;\n        }\n\n        let bankerSeatId = data.diceInfo[0].seatId;\n        let diceList = data.diceInfo[0].dices;\n\n        if (Utils.isNull(bankerSeatId) || bankerSeatId < 1 || bankerSeatId > 4) {\n            this.log(\"GameDeskPrefabCtr.onRollDices\", \"庄家座位非法\", bankerSeatId);\n            return;\n        }\n\n        if (Utils.table_isEmpty(diceList) || diceList.length != 2) {\n            this.log(\"GameDeskPrefabCtr.onRollDices\", \"骰子数量非法\", diceList);\n            return;\n        }\n\n        for (let i = 0; i < diceList.length; i++) {\n            let dice = diceList[i];\n            if (dice < 1 || dice > 6) {\n                this.log(\"GameDeskPrefabCtr.onRollDices\", \"骰子数值非法\", diceList);\n                return;\n            }\n        }\n\n        this.nodeWall.onRollDices(data);\n        this.nodeDice.onRollDices(data);\n    }\n\n    /** 发牌 */\n    onDealCard(event, data: Game.IDealCard) {\n        this.log(\"GameDeskPrefabCtr.onDealCard\", data);\n        if (Utils.isNull(data) || Utils.table_isEmpty(data.cards)) {\n            this.log(\"GameDeskPrefabCtr.onDealCard\", \"没有手牌数据\");\n            return;\n        }\n\n        this.nodeWall.onDealCard(data);\n        this.nodeHandCard.onDealCard(data);\n    }\n\n    /** 操作开始 */\n    onOperationStart(event, data: Game.IFixBanker) {\n        this.log(\"GameDeskPrefabCtr.onOperationStart\", data);\n        \n        this.nodeClock.onOperationStart(data);\n        this.nodeDice.onOperationStart(data);\n    }\n\n    /** 操作选项 */\n    onOperationSelect(event, data: Game.IOperation) {\n        this.log(\"GameDeskPrefabCtr.onOperationSelect\", data);\n\n        this.nodeClock.onOperationSelect(data);\n    }\n\n    /** 操作结果 */\n    onOperationResult(event, data: Game.IOperationResult) {\n        switch (data.opCode) {\n            case OPCode.OPE_OUT_CARD: // 出牌\n                this.onOutCard(event, data);\n                break;\n            case OPCode.OPE_RIGHT_CHI: // 右吃\n            case OPCode.OPE_MIDDLE_CHI: // 中吃\n            case OPCode.OPE_LEFT_CHI: // 左吃\n            case OPCode.OPE_PENG: // 碰\n            case OPCode.OPE_QIANG_PENG: // 抢碰\n                this.onPengGang(event, data)\n                break;\n            case OPCode.OPE_AN_GANG: // 暗杠\n            case OPCode.OPE_GANG: // 杠\n            case OPCode.OPE_BU_GANG: // 补杠\n                this.onPengGang(event, data)\n                this._gangCount++;\n                break;\n            case OPCode.OPE_HU: // 胡\n            case OPCode.OPE_ZI_MO: // 自摸\n                this.onHu(event, data)\n                break;\n            case OPCode.OPE_DIAO:// 调牌\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** 抓牌 */\n    onTakeCard(event, data: Game.IGrabCard) {\n        \n        if (Utils.isNull(data)) {\n            this.log(\"GameDeskPrefabCtr.onTakeCard\", \"没有抓牌数据\");\n            return;\n        }\n\n        let dataTakeCard = {\n            seatId: data.seatId,\n            gangCount: this._gangCount,\n            remian: data.remainCardNum,\n        }\n        this.log(\"GameDeskPrefabCtr.onTakeCard\", dataTakeCard);\n        this.nodeWall.onTakeCard(dataTakeCard);\n        this.nodeHandCard.onTakeCard(dataTakeCard);\n        this.nodeClock.onTakeCard(dataTakeCard);\n    }\n\n    // 出牌 ---------------------------------------------------------------------\n    /** 出牌 */\n    onOutCard(event, data: Game.IOperationResult) {\n        this.log(\"GameDeskPrefabCtr.onOutCard\", data);\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.opCard)) {\n            this.log(\"GameDeskPrefabCtr.onOutCard\", \"出牌数据错误\");\n            return;\n        }\n\n        this.nodeOutCard.onOutCard(data);\n        this.nodeHandCard.onOutCard(data);\n    }\n\n    /** 碰杠 */\n    onPengGang(event, data: Game.IOperationResult) {\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.cardSeatId) || Utils.isNull(data.opCard)) {\n            this.log(\"GameDeskPrefabCtr.onPengGang\", \"碰杠数据错误\");\n            return;\n        }\n\n        if (data.cardSeatId == 0) {\n            this.log(\"GameDeskPrefabCtr.onPengGang\", \"无效座位号\");\n            return;\n        }\n\n        this.log(\"GameDeskPrefabCtr.onPengGang\", data);\n        \n        this.nodeOutCard.onPengGang(data);\n        this.nodeHandCard.onPengGang(data);\n        this.nodeMeldCard.onPengGang(data);\n    }\n\n    /** 胡牌 */\n    onHu(event, data: Game.IOperationResult) {\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.cardSeatId) || Utils.isNull(data.opCard)) {\n            this.log(\"GameDeskPrefabCtr.onHu\", \"胡牌数据错误\");\n            return;\n        }\n\n        if (data.cardSeatId == 0) {\n            this.log(\"GameDeskPrefabCtr.onHu\", \"无效座位号\");\n            return;\n        }\n\n        this.log(\"GameDeskPrefabCtr.onHu\", data);\n\n        this.nodeOutCard.onHu(data);\n        this.nodeHandCard.onHu(data);\n        this.nodeHuCard.onHu(data);\n    }\n\n    /** 清理 */\n    onGameOver(event, data: Game.IHandCards) {\n        this.log(\"GameDeskPrefabCtr.onGameOver\", data);\n        if (Utils.isNull(data) || Utils.table_isEmpty(data.handCards)) {\n            this.log(\"GameDeskPrefabCtr.onGameOver\", \"结算数据错误\");\n            return;\n        }\n\n        this.nodeWall.onGameOver(data);\n        this.nodeHandCard.onGameOver(data);\n        this.nodeOutCard.onGameOver(data);\n        this.nodeMeldCard.onGameOver(data);\n        this.nodeClock.onGameOver(data);\n    }\n\n\n    // ---------------------------------------------------------------------\n\n    /** 重连 */\n    onReconnect() {\n        this.nodeWall.onReconnect();\n        this.nodeHandCard.onReconnect();\n        this.nodeOutCard.onReconnect();\n        this.nodeMeldCard.onReconnect();\n        this.nodeClock.onReconnect();\n    }\n\n    //销毁\n    onDestroy() {\n\n    };\n\n    log(...args: any[]) {\n        console.log(args);\n\t}\n\n}\n\n"]}