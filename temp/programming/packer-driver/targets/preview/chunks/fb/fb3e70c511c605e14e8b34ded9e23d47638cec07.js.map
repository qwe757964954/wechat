{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/BankrupData.ts"],"names":["BankrupData","AppEvent","GConstants","EventManager","Utils","BaseCache","constructor","superClass","__User","_bankruptConf","_lowestMoney","_curCount","_curleftTime","_vipActualTime","_curBankruptReward","_curCanCutCD","_bankupToast","_lastUpdateTimeBankUp","_isHideBankruptPayInRoom","_bankrupFeedbackData","_newBankruptGiftData","curBankruptCount","num","curLeftTime","updateNewBankUpGiftConf","body","getNewBankUpGiftConf","vipActualTime","curBankruptReward","curCanCutCD","bankToast","txt","updateLastTimeBankUpCount","time","isCanCheckUpdateCount","updateBankruptConfig","_body","mergeArrayDefault","print","setCurBankruptInfo","_info","__info","mergeObject","info","getBankruptLowestMoney","table_isEmpty","dispatch","NET_REQ_BANKRUPT_CONFIG","getBankruptTimesInterval","intervals","nullToDefault","getCurTotalTime","temp","getTotalTimeByCount","count","number_valueOf","length","totalTime","isBankruptRewardRemain","curCount","getBankruptStatus","isLoginSuccesed","UserBankUpState","None","totalMoney","getUserSilver","curMoney","getUserGameSilver","lowestMoney","Fake","Real","checkIsBankrupt","money","isMineBankrupt","isCheckSafebox","setBankruptPaySceneSatus","state","isShowBankruptPayInRoom","updateBankUpFeedbackData","getBankUpFeedbackData"],"mappings":"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","sourcesContent":["/**\n * Name = BankrupData\n * URL = db://assets/cache/BankrupData.ts\n * Time = Fri Jun 17 2022 15:37:14 GMT+0800 (中国标准时间)\n * Author = xueya\n * 破产相关数据\n */\n\nimport { AppEvent } from \"../config/AppEvent\";\nimport { GConstants } from \"../config/GameConstant\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { User } from \"./User\";\n\nexport class BankrupData extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n\n    //破产数据配置\n    _bankruptConf = {};\n    //破产下限\n    _lowestMoney = 0;\n    //第几次破产\n    _curCount = 0;\n    //当前离领取破产补助的剩余时间\n    _curleftTime = null;\n    //vip等待的真实时间\n    _vipActualTime = 0;\n    //可领取的补助\n    _curBankruptReward = 0;\n    //当前是否可以免CD 0:否，1：可以\n    _curCanCutCD = 0;\n    //破产文案\n    _bankupToast = \"\";\n\n    //破产数据更新时间\n    _lastUpdateTimeBankUp = 0;\n    //(房间里面)是否关闭破产时弹出充值界面\n    _isHideBankruptPayInRoom: boolean = true;\n\n    //破产反馈数据(包含小红点)\n    _bankrupFeedbackData = null;\n    //破产礼包数据\n    _newBankruptGiftData = null;\n    //实例化\n    constructor(superClass) {\n        super(\"BankrupData\");\n        this.__User = superClass;\n    };\n\n    /** set 当前第几次破产 */\n    set curBankruptCount(num: number) {\n        this._curCount = num;\n    }\n    /** get 当前第几次破产 */\n    get curBankruptCount() {\n        return this._curCount;\n    }\n    /** set 当前离领取破产补助的剩余时间 */\n    set curLeftTime(num: number) {\n        this._curleftTime = num;\n    }\n    /** 更新新破产礼包数据 */\n    updateNewBankUpGiftConf(body) {\n        this._newBankruptGiftData = body;\n\n    }\n\n    /** 获取破产礼包数据  */\n    getNewBankUpGiftConf() {\n        return this._newBankruptGiftData;\n    }\n\n    /** get 当前离领取破产补助的剩余时间 */\n    get curLeftTime(): number {\n        if (this._curleftTime == null) {\n            return 30 * 60;\n        }\n        return this._curleftTime;\n    }\n    /** set vip等待的真实时间 */\n    set vipActualTime(num: number) {\n        this._vipActualTime = num;\n    }\n    /** get vip等待的真实时间 */\n    get vipActualTime() {\n        return this._vipActualTime\n    }\n    /** set 可领取的补助 */\n    set curBankruptReward(num: number) {\n        this._curBankruptReward = num;\n    }\n    /** get 可领取的补助 */\n    get curBankruptReward() {\n        return this._curBankruptReward;\n    }\n\n    /** set  */\n    set curCanCutCD(num: number) {\n        this._curCanCutCD = num;\n    }\n    /** get  */\n    get curCanCutCD() {\n        return this._curCanCutCD;\n    }\n    /** set 破产文案 */\n    set bankToast(txt: string) {\n        this._bankupToast = txt || \"\";\n    }\n    /** get 破产文案 */\n    get bankToast() {\n        return this._bankupToast;\n    }\n\n\n    //更新上次更新的时间\n    updateLastTimeBankUpCount() {\n        this._lastUpdateTimeBankUp = Utils.time();\n    }\n    /**\n     * 是否可以更新破产配置\n     * @returns boolea\n     */\n    isCanCheckUpdateCount(): boolean {\n        let time = Utils.time();\n        if ((time - this._lastUpdateTimeBankUp) < 8) {\n            return false;\n        }\n        return true\n    }\n\n    /**\n     * 更新破产配置\n     * @param body \n     * @returns \n     */\n    updateBankruptConfig(body) {\n        if (!body) {\n            return;\n        }\n        let _body = {\n            \"curBankruptTime\": 0, //当前破产次数\n            \"lowestMoney\": 0,      //破产下限\n            \"intervals\": [],      //每次领取破产时间间隔\n        }\n        this._bankruptConf = this.mergeArrayDefault(_body, body);\n        this._bankruptConf[\"intervals\"] = body[\"intervals\"];\n        this._lowestMoney = this._bankruptConf[\"lowestMoney\"];\n        this.print(\"更新破产配置===>\", _body, \"当前破产下限：\", this._lowestMoney, this._bankruptConf)\n    }\n    /**\n     * 设置破产信息\n     * @param body \n     */\n    setCurBankruptInfo(body) {\n        let _info = {\n            \"curCount\": 0,      //第几次破产\n            \"leftTime\": 0,      //当前剩余时间\n            \"vipExpires\": 0,    //vip过期时间\n            \"vipActualTime\": 0, //vip等待的真实时间\n            \"get_money\": 0,     //可领取的补助\n            \"shard_cd_flag\": 0, //vip等待的真实时间\n        };\n        let __info = this.mergeArrayDefault(_info, body);\n        this._bankruptConf = Utils.mergeObject(this._bankruptConf, __info)\n        let info = this._bankruptConf;\n\n        this.curBankruptCount = info[\"curCount\"];\n        this.curLeftTime = info[\"leftTime\"];\n        this.vipActualTime = info[\"vipActualTime\"];\n        this.curBankruptReward = info[\"get_money\"];\n        this.curCanCutCD = info[\"shard_cd_flag\"];\n\n    }\n    /**\n     * 获取破产下限\n     * @returns number\n     */\n    getBankruptLowestMoney(): number {\n        if (Utils.table_isEmpty(this._bankruptConf)) {\n            //发送请求事件\n            EventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_CONFIG);\n        }\n        return this._lowestMoney;\n    }\n\n    /**\n     * 获取破产等待时间的配置\n     * @returns \n     */\n    getBankruptTimesInterval() {\n        if (Utils.table_isEmpty(this._bankruptConf)) {\n            EventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_CONFIG);\n        }\n        let intervals = Utils.nullToDefault(this._bankruptConf[\"intervals\"], []);\n        return intervals;\n    }\n\n\n    /**\n     * 本次破产需等待的总时间\n     * @returns \n     */\n    getCurTotalTime() {\n        let temp = this.curBankruptCount;\n        return this.getTotalTimeByCount(temp);\n    }\n\n    /**\n     * 第n次破产需等待的总时间（秒）\n     * @param count \n     * @returns number（秒）\n     */\n    getTotalTimeByCount(count: number): number {\n        count = Utils.number_valueOf(count, 1);\n        let intervals = this.getBankruptTimesInterval();\n        let temp = intervals.length;\n\n        count = (count <= 1 ? 1 : count);\n        count = (count >= temp ? temp : count);\n\n        let time = intervals[count];\n        time = Utils.number_valueOf(time, 30);\n        let totalTime = time * 60;\n        return totalTime;\n    }\n\n    /**\n     * 当前是否还有破产补助可以领\n     * @returns boolean\n     */\n    isBankruptRewardRemain(): boolean {\n        let curCount = this.curBankruptCount;\n        let intervals = this.getBankruptTimesInterval().length;\n        //大于0加1的原因是避免新用户进去的时候弹破产提示，以及第三次破产能够正常领取\n        if (intervals > 0) {\n            intervals = intervals + 1;\n        }\n\n        return curCount < intervals;\n    }\n\n    /** \n     * 自己的破产状态 0:没有破产；1：真破产；-1：假破产\n     * @returns 详见 UserBankUpState\n     */\n    getBankruptStatus(): number {\n        if (this.__User.isLoginSuccesed() == false) {\n            return GConstants.UserBankUpState.None;\n        }\n        let totalMoney = this.__User.getUserSilver();//总资产\n        let curMoney = this.__User.getUserGameSilver(); // 现金\n        let lowestMoney = this.getBankruptLowestMoney(); //破产下限\n        if (curMoney >= lowestMoney) {\n            return GConstants.UserBankUpState.None;\n        } else {\n            if (totalMoney >= lowestMoney) {\n                return GConstants.UserBankUpState.Fake;\n            } else {\n                return GConstants.UserBankUpState.Real;\n            }\n        }\n    }\n\n    /**\n     * 根据金币检查是否破产\n     * @param money \n     * @returns boolean\n     */\n    checkIsBankrupt(money): boolean {\n        money = Utils.number_valueOf(money);\n        let lowestMoney = Utils.number_valueOf(this.getBankruptLowestMoney());\n        this.print(\"根据金币检查是否破产 checkIsBankrupt===>\", `我的金币：${money} 破产下限: ${lowestMoney}`)\n        if (money <= 0) {\n            return true;\n        }\n        if (money < lowestMoney) {\n            return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * 检查用户是否破产了\n     * @param isCheckSafebox 是否检查总资产 默认不检查\n     * @returns boolean\n     */\n    isMineBankrupt(isCheckSafebox: boolean = false): boolean {\n        let money = this.__User.getUserGameSilver(); // 现金\n        if (isCheckSafebox) {\n            return this.checkIsBankrupt(money) && this.getBankruptStatus() == GConstants.UserBankUpState.Real;\n        } else {\n            return this.checkIsBankrupt(money)\n        }\n    }\n    /**\n     * (房间里面)是否破产时弹出充值界面 0:不弹 1:弹\n     * @param state \n     */\n    setBankruptPaySceneSatus(state: number) {\n        this._isHideBankruptPayInRoom = (state == 0);\n    }\n    /**\n     * 是否允许弹出充值界面\n     * @returns boolean\n     */\n    isShowBankruptPayInRoom(): boolean {\n        return !this._isHideBankruptPayInRoom;\n    }\n\n    /** 更新破产反馈数据  */\n    updateBankUpFeedbackData(body) {\n        this._bankrupFeedbackData = body;\n    }\n    /** 获取破产反馈数据  */\n    getBankUpFeedbackData() {\n        return this._bankrupFeedbackData;\n    }\n\n\n\n}\n\n"]}