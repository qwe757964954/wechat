{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/layer/LayerUI.ts"],"names":["LayerUI","Button","error","instantiate","isValid","Layers","MaskComponent","Node","Prefab","Sprite","UITransform","Vec2","warn","Widget","inf_ViewParams","resLoader","DelegateComponent","countDeletcNum","constructor","name","addHistoryRecode","loadingMap","key_num","ui_nodes","_maskNode","_buttonCompent","onWillAdd","node","viewParams","onAdded","onRemoved","setTimeout","valid","removeByUuid","uuid","onBeforeRemove","next","init","widget","getComponent","addComponent","isAlignLeft","isAlignRight","isAlignTop","isAlignBottom","left","right","top","bottom","alignMode","enabled","updateAlignment","create_Mask","on","EventType","CHILD_ADDED","onCallbackChildAdd","CHILD_REMOVED","onCallbackChildRemove","NODE_DESTROYED","onCallbackDestory","layer","Enum","UI_2D","addChild","mask","type","target","interactable","transition","active","create_2DNode","String","uiTrans","anchorPoint","create_2DSprite","spriteFrame","sprite","sizeMode","trim","updateMaskState","off","activeInHierarchy","children","length","insertChild","getSoleID","prefabPath","soleNum","soleKey","replace","add","config","params","callbacks","isClickSpanceClose","isAutoRecover","bundle","prefab","noticeToRoot","load","get","err","res","childNode","comp","createNode","nedAddNode","_activeInHierarchy","self","Map","set","isDestroy","key","getViewParamsSizeByUuid","isRemove","delete","components","remove","viewParamsMap","size","forEach","toDestoryNotNotify","i","delegateComponent","destroy","_key","_viewParam","Object","prototype","hasOwnProperty","call","has","isLoading","find","prefabPathReg","arr","__nodes","test","push","prefabPathOrUUID","result","clear"],"mappings":"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","sourcesContent":["/**\n * UI基础层，允许添加多个预制件节点(可添加多个相同预制体节点)\n * Name = LayerUI\n * URL = db://assets/framework/layer/LayerUI.ts\n * Time = Wed Apr 20 2022 17:08:37 GMT+0800 (中国标准时间)\n * Author = xueya\n * \n * add          : 添加一个预制件节点到层容器中，该方法将返回一个唯一uuid来标识该操作Node节点。\n * delete       : 根据uuid删除Node节点，如果节点还在队列中也会被删除, 删除节点可以用gui.delete(node)或this.node.destroy()\n * deleteByUuid : 根据预制件路径删除，预制件如在队列中也会被删除，如果该预制件存在多个也会一起删除。\n * get          : 根据uuid获取Node节点，如果节点不存在或者预制件还在队列中，则返回null 。\n * getSoleID    : 根据预制件路径获取当前显示的该预制件唯一ID 同一路径ID也不同。\n * has          : 判断当前层是否包含 uuid或预制件路径对应的Node节点。\n * find         : 判断当前层是否包含 uuid或预制件路径对应的Node节点。\n * size         : 当前层上显示的所有Node节点数。\n * clear        : 清除所有Node节点，队列当中未创建的任务也会被清除。\n * getViewParamsSizeByUuid:根据uuid获取所在列表的位置和具体数据\n * isLoading    ：资源是否正在加载中\n */\n\nimport { Button, error, instantiate, isValid, Layers, MaskComponent, Node, Prefab, Sprite, SpriteFrame, UITransform, Vec2, warn, Widget } from \"cc\";\nimport { inf_UICallbacks, inf_UIConfig, inf_ViewParams } from \"../InterfaceDefines\";\nimport { resLoader } from \"../loader/ResLoader\";\nimport { DelegateComponent } from \"./DelegateComponent\";\n\nlet countDeletcNum = 0;\nexport class LayerUI extends Node {\n    //添加的历史记录{prefabPath = {soleID,soleID,...}}\n    protected addHistoryRecode = {};\n    protected loadingMap = {};\n    protected key_num = 0;\n    protected ui_nodes = {};  //[path] = [viewParams,viewParams]\n\n    /** 遮罩层 */\n    protected _maskNode: Node = null;\n\n    /** 遮罩层 */\n    protected _buttonCompent: Button = null;\n\n    /**\n     * UI基础层，允许添加多个预制件节点\n     * @param name 该层名\n     * @param container 容器Node\n     */\n    constructor(name: string) {\n        super(name);\n        this.init();\n    };\n    /** 初始化节点 */\n    protected init() {\n        let widget: Widget = this.getComponent(Widget);\n        if (!widget) {\n            widget = this.addComponent(Widget);\n        }\n        widget.isAlignLeft = widget.isAlignRight = widget.isAlignTop = widget.isAlignBottom = true;\n        widget.left = widget.right = widget.top = widget.bottom = 0;\n        widget.alignMode = 2;\n        widget.enabled = true;\n        widget.updateAlignment();\n        this.create_Mask(\"Mask\");\n        this.on(Node.EventType.CHILD_ADDED, this.onCallbackChildAdd, this);\n        this.on(Node.EventType.CHILD_REMOVED, this.onCallbackChildRemove, this);\n        this.on(Node.EventType.NODE_DESTROYED, this.onCallbackDestory, this);\n    }\n    /**\n     * 创建一个遮罩层\n     * @param name 节点名称\n     * @returns \n     */\n    protected create_Mask(name: string = null) {\n        if (!this._maskNode) {\n            this._maskNode = new Node(name);\n            this._maskNode.layer = Layers.Enum.UI_2D;\n            this.addChild(this._maskNode);\n        }\n        let widget: Widget = this._maskNode.getComponent(Widget);\n        if (!widget) {\n            widget = this._maskNode.addComponent(Widget);\n        }\n\n        widget.isAlignLeft = widget.isAlignRight = widget.isAlignTop = widget.isAlignBottom = true;\n        widget.left = widget.right = widget.top = widget.bottom = 0;\n        widget.alignMode = 2;\n        widget.enabled = true;\n        widget.updateAlignment();\n\n        let mask: MaskComponent = this._maskNode.addComponent(MaskComponent);\n        mask.type = 0;\n        mask.enabled = true;\n\n        this._buttonCompent = this._maskNode.getComponent(Button);\n        if (!this._buttonCompent) {\n            this._buttonCompent = this._maskNode.addComponent(Button);\n        }\n        this._buttonCompent.target = this._maskNode;\n        this._buttonCompent.interactable = true;\n        this._buttonCompent.transition = 0;\n        this._buttonCompent.enabled = true;\n\n        this._maskNode.active = false;\n    }\n    /**\n     * 创建一个2D节点\n     * @param name 节点名称\n     * @returns \n     */\n    protected create_2DNode(name: string = null): Node {\n        if (name != null) {\n            name = String(name);\n        }\n        let node = new Node(name);\n        node.layer = Layers.Enum.UI_2D;\n\n        let uiTrans: UITransform = node.addComponent(UITransform);\n        uiTrans.anchorPoint = new Vec2(0.5, 0.5);\n        uiTrans.enabled = true;\n        return node;\n    }\n    /**\n     * 创建一个2D图片节点\n     * @param name 节点名称\n     * @returns \n     */\n    protected create_2DSprite(spriteFrame: SpriteFrame, name = null): Node {\n        let node = this.create_2DNode(name);\n        if (node) {\n            let sprite: Sprite = node.addComponent(Sprite);\n            sprite.sizeMode = 0;\n            sprite.type = 0;\n            sprite.trim = true;\n            sprite.spriteFrame = spriteFrame;\n            sprite.enabled = true;\n        }\n        return node;\n    }\n    /** 有子节点被添加 */\n    protected onCallbackChildAdd(node: Node) {\n        // console.log(\"有子节点被添加\", node)\n        this.updateMaskState();\n    }\n    /** 有子节点被移除 */\n    protected onCallbackChildRemove(node: Node) {\n        // console.log(\"有子节点被移除：\", node)\n        this.updateMaskState();\n    }\n    /** 节点被销毁 */\n    protected onCallbackDestory(node: Node) {\n        this.off(Node.EventType.CHILD_ADDED, this.onCallbackChildAdd, this);\n        this.off(Node.EventType.CHILD_REMOVED, this.onCallbackChildRemove, this);\n        this.off(Node.EventType.NODE_DESTROYED, this.onCallbackDestory, this);\n    }\n    /** 更新遮罩层点击状态 */\n    protected updateMaskState() {\n        if (this.isValid == false || !this._maskNode) {\n            return;\n        }\n        if (this.activeInHierarchy == false) {\n            return;\n        }\n        if (this.children.length > 1) {\n            this.active = true;\n            this.insertChild(this._maskNode, (this.children.length - 1 - 1))\n            this._maskNode.active = true;\n            this._buttonCompent.enabled = true;\n        } else {\n            this._maskNode.active = false;\n        }\n    }\n\n    /** \n     * 构造一个唯一标识 同一个预制体也唯一\n    */\n    protected getSoleID(prefabPath: string): string {\n        this.key_num = this.key_num + 1\n        let soleNum = `${this.name}_${prefabPath}_${this.key_num}`;\n        let soleKey = soleNum.replace(/\\//g, \"_\");\n        //记录历史\n        if (!this.addHistoryRecode[prefabPath]) {\n            this.addHistoryRecode[prefabPath] = {}\n        }\n        this.addHistoryRecode[prefabPath][soleKey] = true\n        return soleKey\n    }\n\n    /**\n     * 添加一个预制件节点到层容器中，该方法将返回一个唯一`uuid`来标识该操作节点 \n     * 一个层不能同时存在多个相同的uuid\n     * @param config.prefab 预制件路径 config.bundle 分包包名 默认resources\n     * @param params     自定义参数\n     * @param callbacks  回调函数对象，可选\n     * @param isClickSpanceClose 是否点击自动关闭 默认 false 不关闭\n     * @param isAutoRecover 是否自动释放加载的资源 默认false不释放\n     */\n    add(config: inf_UIConfig, params?: any, callbacks?: inf_UICallbacks, isClickSpanceClose?: boolean, isAutoRecover?: boolean): string {\n        //this不存在了\n        if (this.isValid == false) {\n            return;\n        }\n        let bundle = config.bundle || \"resources\"\n        let prefabPath = config.prefab\n        //唯一标识\n        let soleKey = this.getSoleID(prefabPath);\n\n        let viewParams = new inf_ViewParams();\n        viewParams.uuid = soleKey;\n        viewParams.bundle = bundle\n        viewParams.prefabPath = prefabPath;\n        viewParams.params = params || {};\n        viewParams.callbacks = callbacks || {};\n        viewParams.noticeToRoot = {\n            onWillAdd: this.onWillAdd,\n            onAdded: this.onAdded,\n            onBeforeRemove: this.onBeforeRemove,\n            onRemoved: this.onRemoved\n        }\n        viewParams.valid = true;\n        viewParams.isAutoRecover = isAutoRecover || false;\n        viewParams.isClickSpanceClose = isClickSpanceClose || false;\n        this.load(viewParams)\n        return soleKey\n    }\n\n    protected load(viewParams: inf_ViewParams) {\n        //this不存在了\n        if (this.isValid == false) {\n            return;\n        }\n        if (viewParams && viewParams.prefabPath) {\n            this.loadingMap[viewParams.prefabPath] = true\n            //缓存中的资源\n            let prefab: Prefab = resLoader.get(viewParams.prefabPath, Prefab, viewParams.bundle)\n            if (!prefab) { /**缓存中不存在 重新加载 */\n                // 获取预制件资源 并给套上DelegateComponent 组件\n                resLoader.load(viewParams.bundle, viewParams.prefabPath, (err: Error | null, res: Prefab) => {\n                    if (err) {\n                        this.loadingMap[viewParams.prefabPath] = false;\n                        error(err);\n                        return\n                    }\n                    //this不存在了\n                    if (this.isValid == false) {\n                        this.loadingMap[viewParams.prefabPath] = null;\n                        return;\n                    }\n                    //不在添加历史的就不做处理\n                    if (!this.addHistoryRecode[viewParams.prefabPath] || !this.addHistoryRecode[viewParams.prefabPath][viewParams.uuid]) {\n                        this.loadingMap[viewParams.prefabPath] = null;\n                        return\n                    }\n\n                    let childNode: Node = instantiate(res);\n\n                    let comp: DelegateComponent = childNode.addComponent(DelegateComponent);\n                    comp.viewParams = viewParams;\n\n                    this.createNode(childNode, viewParams);\n                });\n            } else {   /**缓存中存在 使用缓存的 */\n                //不在添加历史的就不做处理\n                if (!this.addHistoryRecode[viewParams.prefabPath] || !this.addHistoryRecode[viewParams.prefabPath][viewParams.uuid]) {\n                    return\n                }\n                let childNode: Node = instantiate(prefab);\n                let comp: DelegateComponent = childNode.addComponent(DelegateComponent);\n                comp.viewParams = viewParams;\n\n                this.createNode(childNode, viewParams);\n            }\n        } else {\n            warn(`${this.name}.load 加载失败 viewParams.bundle = ${viewParams.bundle} viewParams.prefabPath = ${viewParams?.prefabPath}`)\n        }\n    }\n    /**\n     * 创建节点界面，可覆盖重写\n     * @param nedAddNode 需要添加的节点 预制体需要由instantiate()而来 \n     * @param viewParams \n     */\n    protected createNode(nedAddNode: Node | null, viewParams: inf_ViewParams) {\n\n        //this不存在了\n        if (this.isValid == false) {\n            this.loadingMap[viewParams.prefabPath] = null;\n            return;\n        }\n        //不在添加历史的就不做处理\n        if (!this.addHistoryRecode[viewParams.prefabPath] || !this.addHistoryRecode[viewParams.prefabPath][viewParams.uuid]) {\n            this.loadingMap[viewParams.prefabPath] = null;\n            return null;\n        }\n\n        let childNode: Node = nedAddNode;\n        let comp: DelegateComponent | null = childNode.getComponent(DelegateComponent);\n        if (childNode) {\n            //激活场景\n            this.layer = Layers.Enum.UI_2D\n            this._activeInHierarchy = true;\n\n            let self = this;\n            setTimeout(() => {\n                //不在添加历史的就不做处理\n                if (!self.addHistoryRecode[viewParams.prefabPath] || !self.addHistoryRecode[viewParams.prefabPath][viewParams.uuid]) {\n                    self.loadingMap[viewParams.prefabPath] = null;\n                    return null;\n                }\n                if (self.isValid == false) {\n                    self.loadingMap[viewParams.prefabPath] = null;\n                    return null;\n                }\n                self.addChild(childNode);\n\n                childNode[\"__UUID__\"] = viewParams.uuid;\n                viewParams.node = childNode;\n                viewParams.valid = true;\n\n                comp?.add();\n\n                //数据的存储格式\n                if (!self.ui_nodes[viewParams.prefabPath]) {\n                    self.ui_nodes[viewParams.prefabPath] = new Map<string, inf_ViewParams>()\n                }\n                self.ui_nodes[viewParams.prefabPath].set(viewParams.uuid, viewParams)\n                childNode.active = true;\n                self.loadingMap[viewParams.prefabPath] = null;\n            }, 0)\n        } else {\n            viewParams.node = null;\n            viewParams.valid = false;\n            this.loadingMap[viewParams.prefabPath] = null;\n        }\n        return childNode;\n    }\n\n    /**\n     * 根据uuid删除界面上的节点，如果节点还在队列中也会被删除\n     * 注意。删除节点请直接调用 `this.node.destroy()`或 `gui.delete(node)`;\n     * @param uuid \n     */\n    removeByUuid(uuid: string, isDestroy: boolean): void {\n        let [key, viewParams] = this.getViewParamsSizeByUuid(uuid);\n\n        if (viewParams) {\n            let childNode = viewParams.node;\n            let isRemove = isValid(childNode)\n            if (isDestroy) {\n                this.ui_nodes[key].delete(viewParams.uuid)\n            } else {\n                if (isRemove == false) {\n                    this.ui_nodes[key].delete(viewParams.uuid);\n                }\n            }\n            if (isRemove) {//防止已被删除的 重复删除\n                if (this.addHistoryRecode[viewParams.prefabPath]) {\n                    this.addHistoryRecode[viewParams.prefabPath][viewParams.uuid] = false;\n                }\n                if (childNode && childNode?.components) {\n                    let comp = childNode.getComponent(DelegateComponent);\n                    comp.remove(isDestroy);\n                }\n            }\n        }\n    }\n\n    /**\n     * 根据预制件路径删除 如果该预制件存在多个也会一起删除。\n     * @param prefabPath \n     */\n    remove(prefabPath: string, isDestroy: boolean): void {\n        if (!prefabPath) {\n            return\n        }\n        let viewParamsMap = this.ui_nodes[prefabPath]\n        if (viewParamsMap && viewParamsMap.size > 0) {\n            viewParamsMap.forEach((viewParams, uuid) => {\n                let childNode = viewParams.node;\n                let isRemove = isValid(childNode)\n                if (isDestroy) {\n                    this.ui_nodes[prefabPath].delete(uuid)\n                } else {\n                    if (isRemove == false) {\n                        this.ui_nodes[prefabPath].delete(uuid);\n                    }\n                }\n                if (isRemove) {//防止已被删除的 重复删除\n                    if (this.addHistoryRecode[viewParams.prefabPath]) {\n                        this.addHistoryRecode[viewParams.prefabPath][viewParams.uuid] = false;\n                    }\n                    if (childNode && childNode?.components) {\n                        let comp = childNode.getComponent(DelegateComponent);\n                        comp.remove(isDestroy);\n                    }\n                    viewParams.valid = false;\n                }\n            })\n        } else {\n            this.addHistoryRecode[prefabPath] = null;\n        }\n    }\n    /**\n     * 执行销毁,不发送通知\n     */\n    public toDestoryNotNotify() {\n        this.addHistoryRecode = {};\n        this.loadingMap = {};\n        this.key_num = 0;\n        this.ui_nodes = {};  //[path] = [viewParams,viewParams]\n\n        this.off(Node.EventType.CHILD_ADDED, this.onCallbackChildAdd, this);\n        this.off(Node.EventType.CHILD_REMOVED, this.onCallbackChildRemove, this);\n        this.off(Node.EventType.NODE_DESTROYED, this.onCallbackDestory, this);\n\n        if (this.children && this.children.length > 0) {\n            countDeletcNum = countDeletcNum + this.children.length;\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let childNode: Node = this.children[i];\n                if (childNode && childNode.isValid == true) {\n                    let delegateComponent = childNode.getComponent(DelegateComponent);\n                    if (delegateComponent) {\n                        delegateComponent.enabled = false;\n                    }\n                    childNode.destroy();\n                }\n            }\n        }\n        /** 遮罩层 */\n        this._maskNode = null;\n        /** 遮罩层 */\n        this._buttonCompent = null;\n        this.create_Mask(\"Mask\");\n\n        this.on(Node.EventType.CHILD_ADDED, this.onCallbackChildAdd, this);\n        this.on(Node.EventType.CHILD_REMOVED, this.onCallbackChildRemove, this);\n        this.on(Node.EventType.NODE_DESTROYED, this.onCallbackDestory, this);\n    }\n\n    /**\n     * 根据uuid获取节点配置所在位置，如果节点不存在 则返回null \n     * @param uuid \n     */\n    getViewParamsSizeByUuid(uuid: string): [key: string, viewParam: inf_ViewParams] | null {\n        let _key = null\n        let _viewParam = null\n        for (let key in this.ui_nodes) {\n            if (Object.prototype.hasOwnProperty.call(this.ui_nodes, key)) {\n                let viewParamsMap = this.ui_nodes[key]\n                if (viewParamsMap.has(uuid)) {\n                    _key = key\n                    _viewParam = viewParamsMap.get(uuid)\n                }\n\n            }\n        }\n        return [_key, _viewParam];\n    }\n\n    /**\n     * 判断预制体是否正在加载\n     * @param prefabPath\n     * @returns \n     */\n    isLoading(prefabPath: string): boolean {\n        return this.loadingMap[prefabPath] == true\n    }\n    /**\n     * 获取当前层包含指定正则匹配的Node节点。\n     * @param prefabPathReg 匹配预制件路径的正则表达式对象\n     */\n    find(prefabPathReg: RegExp): Node[] {\n        let arr: Node[] = [];\n        let children = this.__nodes();\n        for (let comp of children) {\n            if (prefabPathReg.test(comp.viewParams!.prefabPath)) {\n                arr.push(comp.node);\n            }\n        }\n        return arr;\n    }\n\n    /**\n     * 判断当前层是否包含 uuid或预制件路径对应的Node节点。\n     * @param prefabPathOrUUID 预制件路径或者UUID\n     */\n    has(prefabPathOrUUID: string): boolean {\n        let children = this.__nodes();\n        for (let comp of children) {\n            if (comp.viewParams!.uuid === prefabPathOrUUID || comp.viewParams!.prefabPath === prefabPathOrUUID) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**当前层上的节点 */\n    protected __nodes(): Array<DelegateComponent> {\n        let result: Array<DelegateComponent> = [];\n        let children = this.children;\n        for (let i = 0; i < children.length; i++) {\n            if (children[i] && children[i]?.components) {\n                let comp = children[i].getComponent(DelegateComponent);\n                if (comp && comp.viewParams && comp.viewParams.valid && isValid(comp)) {\n                    result.push(comp);\n                }\n            }\n        }\n        return result;\n    }\n    /**UI层的回调 UICallbacks类型 */\n    protected onWillAdd = (node: Node | null, viewParams: inf_ViewParams) => {\n\n    }\n    /**UI层的回调 UICallbacks类型 */\n    protected onAdded = (node: Node | null, viewParams: inf_ViewParams) => {\n    }\n    /**UI层的回调 UICallbacks类型 */\n    protected onRemoved = (node: Node | null, viewParams: inf_ViewParams) => {\n        setTimeout(() => {\n            viewParams.node = null;\n            viewParams.valid = false;\n            this.removeByUuid(viewParams.uuid, true);\n        }, 0);\n    }\n    protected onBeforeRemove = (node: Node | null, next: Function) => {\n\n    }\n\n\n    /** 层节点数量 */\n    public size(): number {\n        return this.children.length;\n    }\n\n    /** 清除所有节点 */\n    public clear(isDestroy: boolean): void {\n        this.addHistoryRecode = {};\n\n        for (let key in this.ui_nodes) {\n            if (Object.prototype.hasOwnProperty.call(this.ui_nodes, key)) {\n                let viewParamsMap = this.ui_nodes[key]\n                viewParamsMap.forEach((viewParams, uuid) => {\n                    let remove = true\n                    let childNode = viewParams.node;\n                    if (isDestroy) {\n                        this.ui_nodes[key].delete(viewParams.uuid)\n                    } else {\n                        if (isValid(childNode) == false) {\n                            this.ui_nodes[key].delete(viewParams.uuid);\n                            remove = false\n                        }\n                    }\n                    if (remove) {//防止已被删除的 重复删除\n                        if (childNode && childNode?.components) {\n                            let comp = childNode.getComponent(DelegateComponent);\n                            comp.remove(isDestroy);\n                        }\n                        viewParams.valid = false;\n                    }\n                })\n            }\n        }\n        this.ui_nodes = {};\n    }\n\n\n\n}\n\n"]}