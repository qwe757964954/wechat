{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeOutCardCtr.ts"],"names":["Node","Tween","Vec3","_decorator","instantiate","tween","Utils","EventManager","BaseComponent","FXJEvent","GameViewConfig","NodeCardCtr","ccclass","property","NodeOutCardCtr","tooltip","type","_numList","_seatList","_offsetArrow","onInitModuleEvent","onLoad","initData","initView","start","Array","scale","CardConfig","ScaleOutCard","width","Width","height","Height","groundToCard","GroundToCard","indexStart","SpaceOutCard","distance","CenterToOutCard","dir","nodeSeat","setRotationFromEuler","node","addChild","i","length","layer","Math","floor","index","distanceFromCenter","leftToRight","card","nodeCard","setScale","x","y","z","setPosition","push","ceil","nodeArrow","pos","getPosition","resetView","cards","active","onGameStart","OnChangedSeat","hostDir","onOutCard","data","seatId","showCard","opCard","cardNumber","cardList","num","console","log","getComponent","setCardByte","stopAllByTarget","rotate3DAround","moveTween","by","position","repeatForever","hideCard","showAnim","aniType","AnimType","Hu2","getWorldPosition","dispatch","VIEW_UI_3D_GET_CAMERA","VIEW_OUT_CARD_ANI_PLAY","huTime","delay","call","onPengGang","cardSeatId","onHu","onGameOver","onReconnect","playerList","forEach","value","array","outCards","table_isEmpty","isNotNull","status","onDestroy"],"mappings":"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","sourcesContent":["\nimport { Node, Tween, Vec3, _decorator, instantiate, tween } from 'cc';\nimport { Utils } from '../../../framework/Utils';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { NodeCardCtr } from './NodeCardCtr';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeOutCardCtr\n * URL = db://assets/package/game/scripts/NodeOutCardCtr.ts\n * Time = Mon Aug 14 2023 12:07:51 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('NodeOutCardCtr')\nexport class NodeOutCardCtr extends BaseComponent {\n    /** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 箭头节点 */\n    @property({ tooltip: \"箭头节点\", type: Node })\n    private nodeArrow: Node = null;\n\n    /** 麻将数量列表 */\n    private _numList: number[] = null;\n    /** 麻将位置列表 */\n    private _seatList: Node[][] = null;\n    /** 箭头初始位置 */\n    private _offsetArrow: Vec3 = null;\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    }\n\n    initData() {\n        this._numList = [0, 0, 0, 0];\n        this._seatList = new Array(4);\n    }\n\n    initView() {\n        let scale = GameViewConfig.CardConfig.ScaleOutCard;\n        let width = GameViewConfig.CardConfig.Width * scale;\n        let height = GameViewConfig.CardConfig.Height * scale;\n        let groundToCard = GameViewConfig.CardConfig.GroundToCard * scale;\n        \n        let indexStart = (width * 6 + GameViewConfig.CardConfig.SpaceOutCard * (6 - 1)) / 2\n            - width / 2 - 2 // 往右2米。这里-2\n        let distance = GameViewConfig.CardConfig.CenterToOutCard;\n        for (let dir = 0; dir < 4; dir++) {\n            // 每个方向的手牌设定一个父节点，方便管理\n            let nodeSeat = new Node();\n            nodeSeat.setRotationFromEuler(0, 90 * dir, 0);\n            this.node.addChild(nodeSeat);\n\n            this._seatList[dir] = [];\n            for (let i = 0; i < 18; i++) {\n                let length = this._seatList[dir].length;\n                let layer = Math.floor(length / 6);\n                let index = length % 6;\n                let distanceFromCenter = distance + ((layer - 1) * height); // 离桌面中心的垂直距离\n                let leftToRight = -indexStart + index * (width + GameViewConfig.CardConfig.SpaceOutCard); // 指定层的第index张牌的位置\n                let card = instantiate(this.nodeCard);\n                card.setScale(card.scale.x * scale, card.scale.y * scale, card.scale.z * scale);\n                card.setPosition(leftToRight, groundToCard, distanceFromCenter);\n                nodeSeat.addChild(card);\n                this._seatList[dir].push(card);\n            }\n\n            // 超过18张的地方\n            for (let i = 0; i < 9; i++) {\n                let length = this._seatList[dir].length;\n                let layer = Math.ceil((i + 1) / 3);\n                let index = length % 3;\n                let distanceFromCenter = distance + ((layer - 2) * height); // 离桌面中心的垂直距离\n                let leftToRight = -indexStart + 6 * width + 1 + index * (width + GameViewConfig.CardConfig.SpaceOutCard); // 指定层的第index张牌的位置\n                let card = instantiate(this.nodeCard);\n                card.setScale(card.scale.x * scale, card.scale.y * scale, card.scale.z * scale);\n                card.setPosition(leftToRight, groundToCard, distanceFromCenter);\n                nodeSeat.addChild(card);\n                this._seatList[dir].push(card);\n            }\n        }\n\n        this.nodeArrow.setPosition(0, -4.5, 0);\n        let pos = this.nodeArrow.getPosition();\n        this._offsetArrow = new Vec3(pos.x, pos.y + groundToCard, pos.z);\n        this.nodeArrow.setPosition(this._offsetArrow);\n    }\n\n    resetView() {\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let cards = this._seatList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                cards[i].active = false;\n            }\n        }\n\n        this._numList = [0, 0, 0, 0];\n\n        this.nodeArrow.active = false;\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        // 换位不影响出牌\n    }\n\n    /** 出牌 */\n    onOutCard(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n        this.showCard(dir, data.opCard);\n    }\n\n    private showCard(dir: number, cardNumber: number) {\n        let cardList = this._seatList[dir];\n        let num = this._numList[dir] + 1;\n        if (num > cardList.length) {\n            console.log(\"NodeOutCardCtr.showCard\", \"出牌数量已超上限\", \"num\", num);\n            return;\n        }\n\n        let index = num - 1;\n        cardList[index].active = true;\n        cardList[index].getComponent(NodeCardCtr).setCardByte(cardNumber);\n        let pos = cardList[index].getPosition();\n        this.nodeArrow.active = true;\n        Tween.stopAllByTarget(this.nodeArrow);\n        this.nodeArrow.setPosition(pos.x + this._offsetArrow.x, this._offsetArrow.y, pos.z + this._offsetArrow.z)\n        Utils.rotate3DAround(this.nodeArrow, new Vec3(0, 0, 0), new Vec3(0, 90 * dir, 0), false)\n        let moveTween = tween(this.nodeArrow)\n            .by(0.6, { position: new Vec3(0, 1, 0) })\n            .by(0.6, { position: new Vec3(0, -1, 0) })\n\n        tween(this.nodeArrow)\n            .repeatForever(moveTween)\n            .start();\n        this._numList[dir] = num;\n    }\n\n    private hideCard(dir: number, cardNumber: number, showAnim: boolean) {\n        let cardList = this._seatList[dir];\n        let num = this._numList[dir];\n        if (num < 1) {\n            return;\n        }\n\n        let index = num - 1;\n        if (showAnim) {\n            // 胡牌动画\n            let data: GameViewConfig.AnimConfig = {\n                seatId : dir + 1,\n                aniType : GameViewConfig.AnimType.Hu2,\n                pos : cardList[index].getWorldPosition(),\n            }\n            EventManager.dispatch(FXJEvent.VIEW_UI_3D_GET_CAMERA, FXJEvent.VIEW_OUT_CARD_ANI_PLAY, data);\n\n            let huTime = 0.5\n            tween(this.node)\n                .delay(huTime)\n                .call(() => {\n                    cardList[index].active = false;\n                    this.nodeArrow.active = false;\n                    this._numList[dir] = index;\n                })\n                .start();\n        } else {\n            cardList[index].active = false;\n            this.nodeArrow.active = false;\n            this._numList[dir] = index;\n        }\n    }\n\n    /** 碰杠 */\n    onPengGang(data: Game.IOperationResult) {\n        let dir = data.cardSeatId - 1;\n        this.hideCard(dir, data.opCard, false);\n    }\n\n    /** 胡牌 */\n    onHu(data: Game.IOperationResult) {\n        if (data.cardSeatId == data.seatId) {\n            console.log(\"NodeOutCardCtr.onHu\", \"自摸不需要移除牌\");\n            return;\n        }\n\n        let dir = data.cardSeatId - 1;\n        this.hideCard(dir, data.opCard, true);\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n    }\n\n    /** 重连 */\n    onReconnect(data: GameViewConfig.ReconnectConfig) {\n        this.resetView();\n\n        data.playerList.forEach((value, index, array) => {\n            let dir = value.seatId - 1;\n            let cards = value.outCards;\n            if (!Utils.table_isEmpty(cards)) {\n                for (let i = 0; i < cards.length; i++) { \n                    if (Utils.isNotNull(cards[i].status) && cards[i].status != 1) {\n                        this.showCard(dir, cards[i].card);\n                    }\n                    \n                }\n            }\n        });\n    }\n\n    //销毁\n    onDestroy() {\n        Tween.stopAllByTarget(this.nodeArrow);\n    };\n\n}\n\n\n"]}