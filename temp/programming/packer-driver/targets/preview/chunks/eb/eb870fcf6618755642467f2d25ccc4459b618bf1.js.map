{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/HallController.ts"],"names":["HallController","view","GCache","AppEvent","ClientInfo","GConstants","StoreKey","UIConfigData","UIID","Utils","Encrypt","LayerManager","EventManager","Network","BaseControll","Platform","GlobalCMD","_handlerTimeOutIntoGame","print","getInstance","_instance","init","clear","onInitModuleEvent","addModelListener","HALL_GOTO_SHOW","showHall","HALL_TODO_SHOW","toDoHallShow","NET_REQ_USER_LOGIN_CORE_INIT","reqLoginCoreInit","NET_FORWARD_USER_LOGIN_CORE_INIT","respLoginCoreInit","NET_REQ_SET_USERINFO","reqSetUserInfo","NET_FORWARD_SET_USERINFO","respSetUserInfo","NET_REQ_LEVEL_MODEL_CONFIG","reqLevelModelConfig","NET_FORWARD_LEVEL_MODEL_CONFIG","respLevelModelConfig","NET_REQ_PROPS_INFO","reqPropsInfo","NET_FORWARD_PROPS_INFO","respPropsInfo","NET_REQ_HALL_GAME_CONFIG","reqHallGameConfig","NET_FORWARD_HALL_GAME_CONFIG","respHallGameConfig","NET_REQ_ONLINE_PERSON","reqOnlinePerson","NET_FORWARD_ONLINE_PERSON","respOnlinePerson","NET_REQ_GAME_LEVEL_ROOM_TAB","reqGameLeaveRoom","NET_FORWARD_GAME_LEVEL_ROOM_TAB","respGameLeaveRoom","NET_REQ_GAME_LEVEL_PERSON_COUNT","reqGameLeavePersonCount","NET_FORWARD_GAME_LEVEL_PERSON_COUNT","respGameLeavePersonCount","NET_REQ_GOODS_BASE","reqGoodsBase","NET_RESP_GOODS_BASE","respGoodsBase","event","isByGame","User","isLoginSuccesed","has","HallPrefab","isLoading","clearOther","layer","dispatch","SYS_PACKAGE_LOAD","PkgLoaderTaskList","Hall","SYS_APP_LIFE","AppRunLife","Hall_Will_Open","VIEW_UI_OPEN","onAdded","VIEW_UI_MAIN_UPDATE","Hall_Opened","setDesk","onRemoved","Hall_Closed","isLogining","NET_GOTO_START_LOGIN","console","log","NET_REQ_SIGNIN_CONFIG","NET_REQ_HOLIDAYS_GIFTPACKAGE","NET_REQ_GOODS_INFO","scene","GoodsListID","limitPack","Bankruptcy","GiftPack","MarketSilver","MarketProp","NET_CMD_REQ_WATCH","NET_CMD_REQ_TASK_ACT_CONFIG","NET_REQ_FIRST_PAY_CONFIG","NET_REQ_NEW_PLAYER_CONFIG","reqPlatformFriendInteraction","WxAuthSettingFriends","getCloudStorageSaveList","resParam","setPlatformCloudStorage","data","getCloudStorageParam","postMessage","RECOMMEND_POP_GET","PopupPos","POS_LOGIN","w","getVisibleSize","width","h","height","deviceno","SignDeviceId","networkstate","instance","name","osversion","PhoneModel","SysVer","macid","MachineId","guid","Guid","config_format","api_ver","sendMsg","cmd","PHP_CORE_INIT","body","NET_SEND_MSG","isSuccess","respData","reqData","dump","table_verify","BankrupData","setBankruptPaySceneSatus","conf","PropsConf","setPropsBaseUrlConf","param","PHP_UPDATE_USERINFO","nick","sex","avatar","icon","icon_big","key","Object","prototype","hasOwnProperty","call","value","undefined","updateDataUserKey","USER_UPDATE_INFO","PHP_LEVEL_MODEL_CONFIG","cli_ver","updateLevelExpConfig","USER_UPDATE_LEVEL","PHP_PROPS_INFO","updatePropsInfo","USER_UPDATE_PROPS","hall_version","HallVer","enable_special_game","getUserGuid","lastLoginMid","getLastlocalMid","PHP_HALLVIEW_CONFIG","SelectGame","updateServerGameConfig","info","HALL_UPDATE_GAME_CONFIG","PHP_HALL_GAME_PLAYER_NUM","updateServerGamePersonOnline","HALL_UPDATE_GAME_ONLINE_PERSON","gameID","islevel_500","isNull","ver","getGameVersionByGameID","current_ver","game_id","gameVer","PHP_GAME_LEVEL_LIST","isReset","updateServerGameLevelTabList","getServerGameLevelTabListByGameID","HALL_UPDATE_GAME_LEVEL_TAB","PHP_GAME_LEVEL_COUNT","updateServerGameLevelPeson","HALL_UPDATE_GAME_LEVEL_PERSON","baseConfTime","getPropsConfTime","PROPS_BASE_CONF","unionConfTime","PROPS_UNION_CONF","obj","type","JsonEncode","PHP_GOODS_BASE","table_isEmpty","propsUrlConf","getPropsBaseUrlConf","iconPre","string_isEmpty","time","filepre","filename","coreGoodsBaseUrl","unionGoodsBaseUrl","downloadAndSavePropsConf"],"mappings":"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","sourcesContent":["/**\n * Name = HallController\n * URL = db://assets/proj/HallController.ts\n * Time = Fri Apr 29 2022 14:08:39 GMT+0800 (中国标准时间)\n * Author = xueya\n * 大厅控制器\n */\n\nimport { view } from \"cc\";\nimport { GCache } from \"../cache/GCache\";\nimport { AppEvent } from \"../config/AppEvent\";\nimport { ClientInfo } from \"../config/GameConfig\";\nimport { GConstants, StoreKey } from \"../config/GameConstant\";\nimport { UIConfigData, UIID } from \"../config/UIConfig\";\nimport { Utils } from \"../framework/Utils\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { LayerManager } from \"../framework/layer/LayerManager\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { Network } from \"../framework/network/NetState\";\nimport { BaseControll } from \"../framework/vc/BaseController\";\nimport { Platform } from \"../platform/Platform\";\nimport { GlobalCMD } from \"./gnet/GlobalCMD\";\n\n\nexport class HallController extends BaseControll {\n    //进房超时检测句柄\n    _handlerTimeOutIntoGame = null\n    private static _instance = null;\n    public static getInstance(): HallController {\n        if (!this._instance || this._instance == null) {\n            this._instance = new HallController(\"HallController\");\n        }\n        return this._instance;\n    }\n    public static init(): HallController {\n        if (this._instance) {\n            this._instance.clear()\n        }\n        this._instance = null\n        HallController.getInstance()\n        return\n    }\n\n    /**初始化添加事件绑定 */\n    protected onInitModuleEvent(): void {\n        //显示大厅界面\n        this.addModelListener(AppEvent.HALL_GOTO_SHOW, this.showHall)\n        //显示大厅界面\n        this.addModelListener(AppEvent.HALL_TODO_SHOW, this.toDoHallShow)\n\n        //快速开始\n        // this.addModelListener(AppEvent.HALL_QUICK_START, this.quickStart)\n        //请求登录初始化\n        this.addModelListener(AppEvent.NET_REQ_USER_LOGIN_CORE_INIT, this.reqLoginCoreInit)\n        //登录初始化返回\n        this.addModelListener(AppEvent.NET_FORWARD_USER_LOGIN_CORE_INIT, this.respLoginCoreInit)\n\n        //请求更新用户信息\n        this.addModelListener(AppEvent.NET_REQ_SET_USERINFO, this.reqSetUserInfo)\n        //更新用户信息返回\n        this.addModelListener(AppEvent.NET_FORWARD_SET_USERINFO, this.respSetUserInfo)\n        //请求经验等级配置\n        this.addModelListener(AppEvent.NET_REQ_LEVEL_MODEL_CONFIG, this.reqLevelModelConfig)\n        //经验等级配置返回\n        this.addModelListener(AppEvent.NET_FORWARD_LEVEL_MODEL_CONFIG, this.respLevelModelConfig)\n        //请求自己的道具信息\n        this.addModelListener(AppEvent.NET_REQ_PROPS_INFO, this.reqPropsInfo)\n        //自己的道具信息返回\n        this.addModelListener(AppEvent.NET_FORWARD_PROPS_INFO, this.respPropsInfo)\n\n        //请求大厅游戏位配置\n        this.addModelListener(AppEvent.NET_REQ_HALL_GAME_CONFIG, this.reqHallGameConfig)\n        //大厅游戏位配置返回\n        this.addModelListener(AppEvent.NET_FORWARD_HALL_GAME_CONFIG, this.respHallGameConfig)\n\n\n        //请求大厅在线人数\n        this.addModelListener(AppEvent.NET_REQ_ONLINE_PERSON, this.reqOnlinePerson)\n        //大厅在线人数回调\n        this.addModelListener(AppEvent.NET_FORWARD_ONLINE_PERSON, this.respOnlinePerson)\n        //请求子游戏场次中的房间列表\n        this.addModelListener(AppEvent.NET_REQ_GAME_LEVEL_ROOM_TAB, this.reqGameLeaveRoom)\n        //子游戏场次中的房间列表回调\n        this.addModelListener(AppEvent.NET_FORWARD_GAME_LEVEL_ROOM_TAB, this.respGameLeaveRoom)\n\n        //请求子游戏场次中人数\n        this.addModelListener(AppEvent.NET_REQ_GAME_LEVEL_PERSON_COUNT, this.reqGameLeavePersonCount)\n        //子游戏场次中人数回调\n        this.addModelListener(AppEvent.NET_FORWARD_GAME_LEVEL_PERSON_COUNT, this.respGameLeavePersonCount)\n\n        //请求是否需要更新配置\n        this.addModelListener(AppEvent.NET_REQ_GOODS_BASE, this.reqGoodsBase)\n        //响应是否需要更新配置\n        this.addModelListener(AppEvent.NET_RESP_GOODS_BASE, this.respGoodsBase)\n    }\n\n    /**\n     * 显示大厅\n     * @param event \n     * @param isByGame boolean是否从游戏中来\n     * @returns \n     */\n    showHall(event, isByGame: boolean = false) {\n        //此处要判断用户是否登录成功\n        if (GCache.User.isLoginSuccesed()) {\n            if (!LayerManager.has(UIID.HallPrefab) && !LayerManager.isLoading(UIID.HallPrefab)) {\n                LayerManager.clearOther(UIConfigData[UIID.HallPrefab].layer);\n                LayerManager.clear(UIConfigData[UIID.HallPrefab].layer);\n                EventManager.dispatch(AppEvent.SYS_PACKAGE_LOAD, GConstants.PkgLoaderTaskList.Hall, () => {\n                    if (GCache.User.isLoginSuccesed() == false) {\n                        return;\n                    }\n                    //通知:sys周期变化\n                    EventManager.dispatch(AppEvent.SYS_APP_LIFE, GConstants.AppRunLife.Hall_Will_Open);\n                    EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.HallPrefab, null, {\n                        onAdded: function () {\n                            //通知:主场景更换\n                            EventManager.dispatch(AppEvent.VIEW_UI_MAIN_UPDATE, UIID.HallPrefab);\n                            //通知:sys周期变化\n                            EventManager.dispatch(AppEvent.SYS_APP_LIFE, GConstants.AppRunLife.Hall_Opened);\n                            GCache.setDesk(null);\n                            EventManager.dispatch(AppEvent.HALL_TODO_SHOW, isByGame);\n                        },\n                        onRemoved: function () {\n                            //通知:sys周期变化\n                            EventManager.dispatch(AppEvent.SYS_APP_LIFE, GConstants.AppRunLife.Hall_Closed);\n                        }\n                    })\n                })\n            } else {//存在大厅 判断是否在游戏中\n                this.print(\"存在大厅 判断是否在游戏中\");\n                this.toDoHallShow(null, false);\n            }\n        } else {\n            //正在登录中\n            if (GCache.User.isLogining()) {\n                return\n            }\n            //重新登录\n            LayerManager.clear(null);\n            EventManager.dispatch(AppEvent.NET_GOTO_START_LOGIN);\n        }\n\n    }\n    /** 大厅显示完成后的操作 */\n    toDoHallShow(event, isByGame = false) {\n        //判断是否弹出签到\n        // if (GCache.Activity.checkTodayIsOpenSign() == false && GCache.Activity.checkHaveSignin() == true) {\n        // \tif (GCache.Activity.checkHaveSignin()) {\n        // \t\tEventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.SigninPrefab);\n        // \t}\n        // }\n        //请求基础配置\n        console.log(\"请求基础配置\")\n        EventManager.dispatch(AppEvent.NET_REQ_GOODS_BASE)\n\n        if (isByGame) {//从游戏中返回\n            //请求签到数据\n            EventManager.dispatch(AppEvent.NET_REQ_SIGNIN_CONFIG)\n            //请求限时折扣\n            EventManager.dispatch(AppEvent.NET_REQ_HOLIDAYS_GIFTPACKAGE);\n            //请求限时折扣礼包数据\n            EventManager.dispatch(AppEvent.NET_REQ_GOODS_INFO, { scene: GConstants.GoodsListID.limitPack });\n            //请求商城破产数据\n            EventManager.dispatch(AppEvent.NET_REQ_GOODS_INFO, { scene: GConstants.GoodsListID.Bankruptcy });\n            //请求首充礼包商品数据\n            EventManager.dispatch(AppEvent.NET_REQ_GOODS_INFO, { scene: GConstants.GoodsListID.GiftPack });\n\n            //请求商城银币\n            EventManager.dispatch(AppEvent.NET_REQ_GOODS_INFO, { scene: GConstants.GoodsListID.MarketSilver });\n            //请求商城道具\n            EventManager.dispatch(AppEvent.NET_REQ_GOODS_INFO, { scene: GConstants.GoodsListID.MarketProp });\n            //请求邮箱数据\n            EventManager.dispatch(AppEvent.NET_CMD_REQ_WATCH);\n\n            //请求活动中心数据\n            EventManager.dispatch(AppEvent.NET_CMD_REQ_TASK_ACT_CONFIG);\n            //请求首充礼包配置\n            EventManager.dispatch(AppEvent.NET_REQ_FIRST_PAY_CONFIG)\n        } else {\n            //请求新手活动\n            EventManager.dispatch(AppEvent.NET_REQ_NEW_PLAYER_CONFIG);\n            //平台好友授权\n            Platform.reqPlatformFriendInteraction(() => {\n                if (Platform.WxAuthSettingFriends == 1) {\n                    GCache.User.getCloudStorageSaveList((resParam) => {\n                        Platform.setPlatformCloudStorage(resParam);\n                        //提前预加载数据\n                        let data = {}\n                        data[\"UIKey\"] = \"friendList\";\n                        data[\"init\"] = true;\n                        data[\"param\"] = GCache.User.getCloudStorageParam();\n                        Platform.postMessage(data);\n                    });\n                }\n            });\n            //通知:请求推荐弹窗\n            EventManager.dispatch(AppEvent.RECOMMEND_POP_GET, GConstants.PopupPos.POS_LOGIN)\n            //请求商城破产数据\n            EventManager.dispatch(AppEvent.NET_REQ_GOODS_INFO, { scene: GConstants.GoodsListID.Bankruptcy });\n        }\n\n    }\n\n    /** 登录初始化 */\n    reqLoginCoreInit(event) {\n        let data = {\n            w: view.getVisibleSize().width,\n            h: view.getVisibleSize().height,\n            deviceno: ClientInfo.SignDeviceId,\n            networkstate: Network.instance.name,\n            osversion: `${ClientInfo.PhoneModel},${ClientInfo.SysVer}`,\n            macid: ClientInfo.MachineId,\n            guid: ClientInfo.Guid,\n            config_format: \"json\",\n            api_ver: 2,\n        }\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_CORE_INIT,\n            body: data,\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n    /** 登录初始化返回 */\n    respLoginCoreInit(event, isSuccess, respData, reqData) {\n        this.dump(respData, \"登录初始化返回\" + isSuccess)\n\n        if (isSuccess == false) {\n            EventManager.dispatch(AppEvent.NET_REQ_USER_LOGIN_CORE_INIT);\n            return;\n        }\n        respData = Utils.table_verify(respData);\n        //结算破产开关\n        if (respData[\"bankrupt_pay\"]) {\n            GCache.BankrupData.setBankruptPaySceneSatus(respData[\"bankrupt_pay\"]);\n        }\n\n        //图片配置相关信息\n        if (respData[\"goodsbase_url\"]) {\n            let conf = respData[\"goodsbase_url\"];\n            conf[\"srvtime\"] = respData[\"srvtime\"];\n            GCache.PropsConf.setPropsBaseUrlConf(conf)\n        }\n\n    }\n\n    //请求更新用户信息\n    reqSetUserInfo(event, param) {\n        if (!param) {\n            return\n        }\n        param = Utils.table_verify(param)\n        let body = {}\n        if (param[\"nick\"] != null) {\n            body['nick'] = param[\"nick\"];\n        }\n        if (param[\"sex\"] != null) {\n            body['sex'] = param[\"sex\"];\n        }\n        if (param[\"city\"] != null) {\n            body['city'] = param[\"city\"];\n        }\n        if (param[\"avatar\"] != null) {\n            body['avatar'] = param[\"avatar\"];\n        }\n\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_UPDATE_USERINFO,\n            body: body,\n        }\n        console.log(\"发起更新信息请求:\", sendMsg)\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\n    }\n\n    //更新用户信息返回\n    respSetUserInfo(event, isSuccess, respData, reqData) {\n        console.log(\"更新用户信息返回:\", isSuccess, respData, reqData)\n        if (isSuccess) {\n            respData = Utils.table_verify(respData)\n            if (respData) {\n                let body = {}\n                if (reqData.nick && respData.nick) {\n                    body['nick'] = respData.nick\n                }\n                if (reqData.sex && respData.sex) {\n                    body['sex'] = respData.sex\n                }\n                if (reqData.avatar) {\n                    if (respData.icon) {\n                        body['avatar_s'] = respData.icon\n                        body['avatar_m'] = respData.icon\n                        body['avatar_b'] = respData.icon_big\n                    }\n                }\n                console.log(\"更新用户信息返回body:\", body)\n                for (let key in body) {\n                    if (Object.prototype.hasOwnProperty.call(body, key)) {\n                        let value = body[key];\n                        if (value != null && value != undefined) {\n                            GCache.User.updateDataUserKey(key, value)\n                        }\n                    }\n                }\n                // 用户信息有更新\n                EventManager.dispatch(AppEvent.USER_UPDATE_INFO, body)\n            }\n        }\n    }\n    //请求经验等级配置\n    reqLevelModelConfig(event) {\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_LEVEL_MODEL_CONFIG,\n            body: {\n                cli_ver: -1\n            },\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    //经验等级配置返回\n    respLevelModelConfig(event, isSuccess, respData, reqData) {\n        this.dump(respData, \"经验等级配置返回\" + isSuccess)\n        if (isSuccess) {\n            GCache.User.updateLevelExpConfig(respData[\"level\"])\n            //经验等级有更新\n            EventManager.dispatch(AppEvent.USER_UPDATE_LEVEL)\n        }\n    }\n    //请求自己的道具信息\n    reqPropsInfo(event) {\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_PROPS_INFO,\n            body: {},\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    //自己的道具信息返回\n    respPropsInfo(event, isSuccess, respData, reqData) {\n        this.dump(respData, \"道具信息返回\" + isSuccess)\n        Utils.dump(respData)\n        if (isSuccess) {\n            //更新道具信息\n            GCache.User.updatePropsInfo(respData);\n            //道具信息有更新\n            EventManager.dispatch(AppEvent.USER_UPDATE_PROPS)\n        }\n    }\n\n    //请求大厅游戏配置\n    reqHallGameConfig(event) {\n        let param = {\n            hall_version: ClientInfo.HallVer,   //hall_version 与 cli_ver不同则重新拉取数据\n            cli_ver: -1,\n            enable_special_game: 1,                        //此位标识特殊游戏位，1为返回，0为不返回--包括私人房，比赛场\n            guid: GCache.User.getUserGuid(),\n            lastLoginMid: GCache.User.getLastlocalMid(),  //用户上次登录的Mid, 用于游戏列表白名单控制\n        }\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_HALLVIEW_CONFIG,\n            body: param,\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    //大厅游戏配置返回\n    respHallGameConfig(event, isSuccess, respData, reqData) {\n        this.dump(respData, \"大厅游戏配置返回\" + isSuccess)\n        if (isSuccess) {\n            GCache.SelectGame.updateServerGameConfig(respData.info)\n            EventManager.dispatch(AppEvent.HALL_UPDATE_GAME_CONFIG)\n        }\n    }\n\n\n\n\n\n    //请求大厅在线人数\n    reqOnlinePerson(event, param) {\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_HALL_GAME_PLAYER_NUM,\n            body: {},\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n\n    }\n    //大厅在线人数回调\n    respOnlinePerson(event, isSuccess, respData, reqData) {\n        // this.print(\"大厅在线人数返回 ===>\" + isSuccess)\n        // Utils.dump(respData)\n        if (isSuccess) {\n            GCache.SelectGame.updateServerGamePersonOnline(respData)\n            EventManager.dispatch(AppEvent.HALL_UPDATE_GAME_ONLINE_PERSON)\n        }\n    }\n    //请求子游戏场次中的房间列表\n    reqGameLeaveRoom(event, gameID = null, islevel_500: number = 1) {\n        if (Utils.isNull(gameID)) {\n            return\n        }\n        if (Utils.isNull(islevel_500)) {\n            islevel_500 = 1\n        }\n        let ver = GCache.SelectGame.getGameVersionByGameID(gameID)\n\n        if (!ver) {\n            ver = 0\n        }\n        let param = {\n\n            hall_version: ClientInfo.HallVer,\n            current_ver: 0,\n            game_id: gameID,\n            islevel_500: islevel_500,        //是否返回包含快速场数据，不传或0不返回，1返回\n            gameVer: ver,\n\n        }\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_GAME_LEVEL_LIST,\n            body: param,\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    //子游戏场次中的房间列表返回\n    respGameLeaveRoom(event, isSuccess, respData, reqData) {\n        this.dump(respData, \"子游戏场次中的房间列表返回\" + isSuccess)\n\n        if (isSuccess) {\n            let isReset = true\n            if (reqData && reqData[\"islevel_500\"] != 1) {\n                isReset = false\n            }\n            GCache.SelectGame.updateServerGameLevelTabList(respData[\"gameid\"], respData[\"levels\"], isReset)\n            this.print(\"当前保存的游戏房间列表缓存\")\n            Utils.dump(GCache.SelectGame.getServerGameLevelTabListByGameID(respData[\"gameid\"]))\n            EventManager.dispatch(AppEvent.HALL_UPDATE_GAME_LEVEL_TAB, respData[\"gameid\"])\n        }\n    }\n    //请求子游戏场次中人数\n    reqGameLeavePersonCount(event, gameID = null) {\n        if (Utils.isNull(gameID)) {\n            return\n        }\n        let param = {\n            game_id: gameID,\n        }\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_GAME_LEVEL_COUNT,\n            body: param,\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    //子游戏场次中人数返回\n    respGameLeavePersonCount(event, isSuccess, respData, reqData) {\n        this.dump(respData, \"子游戏场次中人数返回\" + isSuccess)\n\n        if (isSuccess) {\n            GCache.SelectGame.updateServerGameLevelPeson(respData[\"game_id\"], respData[\"level_cnt\"])\n            EventManager.dispatch(AppEvent.HALL_UPDATE_GAME_LEVEL_PERSON, respData[\"game_id\"])\n        }\n    }\n    //当前类日志输出\n    public print = function (...args: any[]) {\n    }\n    //当前类日志输出\n    // public dump = function (arg1, args2 = null) {\n    // }\n\n\n\n\n    /**\n     * 请求是否需要更新配置\n     * @param event \n     */\n    reqGoodsBase(event) {\n        this.print(\"基础配置请求\")\n        let baseConfTime = GCache.PropsConf.getPropsConfTime(StoreKey.PROPS_BASE_CONF);\n        let unionConfTime = GCache.PropsConf.getPropsConfTime(StoreKey.PROPS_UNION_CONF);\n        let obj = {\n            1: baseConfTime,\n            2: unionConfTime,\n        }\n        let type = Encrypt.JsonEncode(obj)\n        let param = {\n            type: type\n        }\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_GOODS_BASE,\n            body: param,\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    /**\n     * 返回是否更新配置 \n     * @param event \n     * @param isSuccess \n     * @param respData \n     * @param reqData \n     */\n    respGoodsBase(event, isSuccess, respData, reqData) {\n        console.log(\"基础配置返回\", isSuccess, respData, reqData)\n        if (isSuccess) {\n            if (!Utils.table_isEmpty(respData)) {\n                this.print(\"数据不为空,需要下载\");\n                let propsUrlConf = GCache.PropsConf.getPropsBaseUrlConf();\n                let iconPre = propsUrlConf[\"icon_pre\"]\n                if (Utils.string_isEmpty(iconPre)) {\n                    return;\n                }\n                let time = propsUrlConf[\"srvtime\"];\n                let filepre = propsUrlConf[\"file_pre\"];\n                let filename = propsUrlConf['file_name'];\n                let coreGoodsBaseUrl = filepre + filename[4] + \"?v=\" + time;\n                let unionGoodsBaseUrl = filepre + filename[5] + \"?v=\" + time;\n                console.log(\"goodsurl:\", coreGoodsBaseUrl, unionGoodsBaseUrl);\n                //飞小鸡没有地区性道具\n                GCache.PropsConf.downloadAndSavePropsConf(coreGoodsBaseUrl, StoreKey.PROPS_BASE_CONF);\n                GCache.PropsConf.downloadAndSavePropsConf(unionGoodsBaseUrl, StoreKey.PROPS_UNION_CONF);\n            } else {\n                this.print(\"数据为空\")\n            }\n        } else {\n            this.print(\"hehe请求失败\")\n        }\n    }\n}"]}