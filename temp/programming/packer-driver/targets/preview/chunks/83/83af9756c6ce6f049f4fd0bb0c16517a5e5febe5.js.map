{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/Players/MyPlayerCard.ts"],"names":["animation","Animation","AnimationClip","instantiate","Node","Tween","Vec3","_decorator","GCache","EventManager","Utils","BaseComponent","OperationMgr","PlayerMgr","OPCode","GameEvent","CardUtil","NodeCardCtr","drawCardDisRatio","MjSize","ccclass","property","MyPlayerCard","tooltip","type","selectedNode","_drawCardNode","_mjList","myHandCardY","_slotIndex","_drawByte","_playHandCardCb","_isTouched","_touchNode","moveDistance","thresholdDistance","startPosition","touchNodePos","drawByte","newValue","onInitModuleEvent","onLoad","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","stackAnim","indexList","tByte","insertIndex","cb","pos","length","removeHandCard","getPosition","setPosition","removeDrawCard","addHandCard","pop","getInstance","getLastMyhands","startPosDraw","endPosDraw","x","width","y","z","acDraw","duration","trackDraw","VectorTrack","componentsCount","path","TrackPath","toProperty","drawX","channels","curve","assignSorted","value","animDrawCom","getComponent","addComponent","removeAll","FINISHED","addTrack","defaultClip","play","removeFromParent","console","log","index","insertNode","nodeCardTemplate","cardValue","setCardByte","active","name","addChild","splice","updateHandPositionAndName","drawCard","hiden","cardAddTouchEvent","getLastPosition","setRotationFromEuler","showDrawCard","rotaionEuler","eulerAngles","point","tweenTargetVec3","tw","by","onUpdate","target","ratio","rotate3DAroundByPositionRotaion","start","filter","item","undefined","i","handNode","getHandCardByIndex","playAnimOfShow","showdownDrawCard","showdownCard","off","event","playSelectAnim","location","getLocation","getDelta","add","endPos","subtract","Desk","turnMe","byte","onSendCard","playDrawCard","toOutCard","playCardFromHandAnim","rmDraw","isNotNull","updateCard","sort","a","b","removeNode","makeSlotAnim","ac","track","_","mjNode","startPos","getHandPosition","animCom","drawCardToSlot","posx","posy","posz","easingMethod","getListBytes","bytes","node_byte","push","useByteFindIndexs","indexs","forEach","getNodeIndex","findIndex","theNode","addHandCards","valueList","stackCount","hasDrawCard","handCardCount","playUnselectAnim","trackPos","dumpMyHands","getSendCardIndex","getMajiangValue","req","opCard","opCode","OPE_OUT_CARD","opCards","seatId","userId","dispatch","CLOSE_OPRATION_INFO","SEND_PLAYER_OPERATION","resetView","removeAllChildren"],"mappings":"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","sourcesContent":["\nimport { animation, Animation, AnimationClip, EventTouch, instantiate, Node, Tween, Vec3, _decorator } from 'cc';\nimport { GCache } from '../../../../cache/GCache';\nimport { EventManager } from '../../../../framework/manager/EventManager';\nimport { Utils } from '../../../../framework/Utils';\nimport { BaseComponent } from '../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../cache/OperationMgr';\nimport { PlayerMgr } from '../../cache/PlayerMgr';\nimport { OPCode } from '../../common/FXJConfig';\nimport { GameEvent } from '../../common/GameEvent';\nimport { Game } from '../../common/idl/Game';\nimport { CardUtil } from '../../util/CardUtil';\nimport { NodeCardCtr } from '../NodeCardCtr';\nimport { drawCardDisRatio, MjSize } from './CardConfigs';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = MyPlayer\n * URL = db://assets/package/game/scripts/MyPlayer.ts\n * Time = Fri Aug 11 2023 11:08:16 GMT+0800 (中国标准时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('MyPlayerCard')\nexport class MyPlayerCard extends BaseComponent {\n\tpublic selectedNode: Node | null = null;\n\t\n    public _drawCardNode: Node | null = null;\n\n\tpublic\t_mjList:Node[] = [];\n\t\n\tprivate myHandCardY: number = 0;\n\n\t// 手牌模板\n\t@property({ tooltip: \"手牌模板\", type: Node })\n\tprivate nodeCardTemplate: Node | null = null;\n\n\t_slotIndex: number;\n\tprivate _drawByte: number;\n\n\t_playHandCardCb: any;\n\n    private _isTouched: boolean;\n\n    public _touchNode: Node | null = null;\n\n    private moveDistance: number = 0; // 阈值距离，用于判断是否出牌\n    private thresholdDistance: number = 0.5; // 阈值距离，用于判断是否出牌\n    private startPosition = new Vec3(); // 初始点击位置\n    private touchNodePos = new Vec3();\n\tget drawByte(): number {\n\t\treturn this._drawByte;\n\t}\n\n\tset drawByte(newValue: number) {\n\t\tthis._drawByte = newValue;\n\t}\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n    onLoad() {\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n   \n\t//移除对应的索引的牌去构成stack, 刷新整体node的位置\n\tstackAnim(indexList: number[], tByte?: number, insertIndex?: number, cb?:any) {\n\t\tlet pos = new Vec3();\n\t\tif(indexList.length === 2){\n            this.removeHandCard(indexList,true);\n\t\t\t//碰牌直接移除两张牌, 刷新位置\n\t\t\tpos = this.node.getPosition();\n\t\t\t// Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n\t\t\tthis.node.setPosition(pos);\n\t\t}else if (indexList.length == 3){\n            this.removeHandCard(indexList,true);\n\t\t\t//杠牌直接移除三张牌, 刷新位置\n\t\t\tpos = this.node.getPosition();\n            // Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n            this.node.setPosition(pos);\n            return\n\t\t}else if (indexList.length == 4 && insertIndex!==null){\n            insertIndex = insertIndex - indexList.length;\n            this.removeHandCard(indexList);\n\t\t\tthis.removeDrawCard();\n            this.addHandCard(tByte, insertIndex);\n            pos = this.node.getPosition();\n            // Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n            this.node.setPosition(pos);\n            return\n\t\t}\n        /*\n\t\t//吃碰时候移除两张,平移一张到抽牌区 \n        let startPos = pos;\n        let endPos = new Vec3();\n        Vec3.add(endPos, startPos, startPos) \n        \n        let ac = new AnimationClip()\n        ac.duration = 0.1\n        let track = new animation.VectorTrack();\n        track.componentsCount = 3;\n        track.path = new animation.TrackPath().toProperty(\"position\")\n        let [x] = track.channels();\n       \n        x.curve.assignSorted([\n            [0, {value: startPos.x}],\n            [0.1, {value: endPos.x}]\n        ])\n\n        let animCom: Animation;\n\n        if (this.node.getComponent(Animation) == null)\n        {\n            animCom = this.node.addComponent(Animation)\n        }\n        else\n        {\n            animCom = this.node.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        } \n\n        if(cb)\n        {\n            animCom.on(Animation.EventType.FINISHED, cb, this)\n            // this._stackCb = cb\n        }\n\n        ac.addTrack(track)\n        animCom.defaultClip = ac\n        animCom.play(); \n        */\n\n        \n        this._drawCardNode = this._mjList.pop();\n        this.drawByte =  PlayerMgr.getInstance().getLastMyhands();\n        \n        let startPosDraw = this._drawCardNode.getPosition();\n        let endPosDraw = new Vec3(startPosDraw.x + MjSize.width, startPosDraw.y, startPosDraw.z)\n        this._drawCardNode.setPosition(endPosDraw);\n        \n        let acDraw = new AnimationClip()\n        acDraw.duration = 0.1\n        let trackDraw = new animation.VectorTrack();\n        trackDraw.componentsCount = 3;\n        trackDraw.path = new animation.TrackPath().toProperty(\"position\")\n        let [drawX] = trackDraw.channels();\n       \n        drawX.curve.assignSorted([\n            [0, {value: startPosDraw.x}],\n            [0.1, {value: endPosDraw.x}]\n        ])\n        \n        let animDrawCom: Animation;\n\n        if (this._drawCardNode.getComponent(Animation) == null)\n        {\n            animDrawCom = this._drawCardNode.addComponent(Animation)\n        }\n        else\n        {\n            animDrawCom = this._drawCardNode.getComponent(Animation)\n            animDrawCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        if(cb)\n        {  \n            animDrawCom.on(Animation.EventType.FINISHED, cb, this)\n            // this._stackCb = cb\n        }\n\n        acDraw.addTrack(trackDraw)\n        animDrawCom.defaultClip = acDraw\n        animDrawCom.play(); \n        \n\t}\n\n\t//移除一张手牌, 没有动画时的接口, 未来会使用动画接口出牌\n    removeDrawCard() {\n        if (this._drawCardNode) {\n            this._drawCardNode.removeFromParent();\n            this._drawCardNode = null;\n        }\n        else {\n            console.log(\"当前没有渲染牌,无法移除\")\n        }\n    }\n\t//添加一张牌到手牌的指定位置\n\taddHandCard(tByte: number, index: number) {\n\n        if (index > this._mjList.length) {\n            console.log(\"索引大于当前渲染手牌的数量请检查逻辑\", index)\n            return;\n        }\n\n        if (this._mjList.length >= 13) {\n            console.log(\"当前渲染手牌数量已满--> 13\", index)\n            return;\n        } \n\n\t\tlet insertNode = instantiate(this.nodeCardTemplate)\n\t\tlet cardValue = tByte;\n\t\tinsertNode.getComponent(NodeCardCtr).setCardByte(cardValue);\n\t\tinsertNode.active = true;        \n        insertNode.name = \"MJBlock\" + index\n\n        this.node.addChild(insertNode)\n\t\tthis._mjList.splice(index, 0, insertNode); // 在指定索引处插入对象\n\n        this.updateHandPositionAndName()\n    }\n\n\t//抓一张牌\n    drawCard(tByte: number,hiden?:boolean) {\n\t\tthis.drawByte = tByte;\n\t\tthis._drawCardNode = instantiate(this.nodeCardTemplate)\n\t\tthis._drawCardNode.getComponent(NodeCardCtr).setCardByte(tByte);\n\t\tthis._drawCardNode.active = true;\n\t\tthis.node.addChild(this._drawCardNode);\n        this.cardAddTouchEvent(this._drawCardNode);\n\t\tthis._drawCardNode.setPosition(this.getLastPosition() + drawCardDisRatio * MjSize.width, 0, 0)\n        if(hiden){\n            this._drawCardNode.setRotationFromEuler(90, 0, 0);\n        }\n\t}\n\n    showDrawCard(){\n        let duration = 0.3;\n        let rotaionEuler = new Vec3(this._drawCardNode.eulerAngles);\n        let pos = new Vec3(this._drawCardNode.getPosition());\n        let point = new Vec3(pos.x, 0,\n            0);\n        let tweenTargetVec3 = new Vec3(0, 0, 0);\n        let tw = new Tween(tweenTargetVec3)\n            .by(duration, new Vec3(0, 0, 0), {\n                onUpdate: (target: Vec3, ratio: number) => {\n                    Utils.rotate3DAroundByPositionRotaion(this._drawCardNode, pos, rotaionEuler, point, target, true)\n                }\n            })\n            .by(duration, new Vec3(-90, 0, 0), {\n                onUpdate: (target: Vec3, ratio: number) => {\n                    Utils.rotate3DAroundByPositionRotaion(this._drawCardNode, pos, rotaionEuler, point, target, true)\n                }\n            })\n            .start();\n    }\n\n\tupdateHandPositionAndName(hiden?:boolean){\n        this._mjList = this._mjList.filter(item => item !== null && item !== undefined);\n\t\tfor (let i = 0; i < this._mjList.length; i++) {\n            let handNode = this._mjList[i]\n            handNode.name = \"MJBlock\" + i;\n            handNode.getComponent(NodeCardCtr).setCardByte(PlayerMgr.getInstance().getHandCardByIndex(i));\n            this.cardAddTouchEvent(handNode);\n            handNode.setPosition(MjSize.width / 2 + MjSize.width * i, 0, 0);\n            if(hiden){\n                handNode.setRotationFromEuler(90, 0, 0);\n            }\n        }\n\t}\n    \n    playAnimOfShow() {\n        let duration = 0.3;\n        for (let i = 0; i < this._mjList.length; i++) {\n            let rotaionEuler = new Vec3(this._mjList[i].eulerAngles);\n            let pos = new Vec3(this._mjList[i].getPosition());\n            let point = new Vec3(pos.x, 0,\n                0);\n\n            let tweenTargetVec3 = new Vec3(0, 0, 0);\n            let tw = new Tween(tweenTargetVec3)\n                .by(duration, new Vec3(0, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(this._mjList[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .by(duration, new Vec3(-90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(this._mjList[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .start();\n        }\n        if(this._drawCardNode){\n            this.showDrawCard();\n        }\n    }\n    showdownDrawCard(){\n        let duration = 0.3;\n        let rotaionEuler = new Vec3(this._drawCardNode.eulerAngles);\n        let pos = new Vec3(this._drawCardNode.getPosition());\n        let point = new Vec3(pos.x, 0,\n            0);\n        let tweenTargetVec3 = new Vec3(0, 0, 0);\n        let tw = new Tween(tweenTargetVec3)\n            .by(duration, new Vec3(-90, 0, 0), {\n                onUpdate: (target: Vec3, ratio: number) => {\n                    Utils.rotate3DAroundByPositionRotaion(this._drawCardNode, pos, rotaionEuler, point, target, true)\n                }\n            })\n            .start();\n    }\n\n    showdownCard() {\n        let duration = 0.3;\n        for (let i = 0; i < this._mjList.length; i++) {\n            let rotaionEuler = new Vec3(this._mjList[i].eulerAngles);\n            let pos = new Vec3(this._mjList[i].getPosition());\n            let point = new Vec3(pos.x, 0,\n                0);\n            let tweenTargetVec3 = new Vec3(0, 0, 0);\n            let tw = new Tween(tweenTargetVec3)\n                .by(duration, new Vec3(-90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(this._mjList[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .start();\n        }\n        if(this._drawCardNode){\n            this.showdownDrawCard();\n        }\n    }\n\n    cardAddTouchEvent(handNode?:Node){\n        handNode.off(Node.EventType.TOUCH_END);\n        handNode.off(Node.EventType.TOUCH_START);\n        handNode.on(Node.EventType.TOUCH_START, (event) => {\n            console.log(\"event______________\")\n            this._touchNode = event.target\n            this.touchNodePos = this._touchNode.getPosition();\n        }, this);\n        handNode.on(Node.EventType.TOUCH_END, (event) => {\n            console.log(\"handNode____________________\");\n            this._touchNode.setPosition(this.touchNodePos);\n            this.playSelectAnim(event.target);\n        }, this);\n    }\n\n    onTouchStart(event: EventTouch) {\n        this._isTouched = true;\n        let location = event.getLocation();\n        this.startPosition = new Vec3(location.x,location.y,0)\n    }\n\n    onTouchMove(event: EventTouch) {\n        this._isTouched = true;\n        if(this._touchNode === null){\n            return;\n        }\n        let pos = this._touchNode.getPosition();\n        let location = event.getDelta();\n        Vec3.add(pos,pos,new Vec3(location.x,location.y,0));\n        this._touchNode.setPosition(pos);\n        let endPos = this._touchNode.getPosition();\n        this.moveDistance = endPos.subtract(this.touchNodePos).length();\n    }\n    onTouchEnd(event: EventTouch) {\n        console.log(\"onTouchEnd____________________\");\n    }\n\n    onTouchCancel(event: EventTouch) {\n        console.log(\"onTouchCancel____________________\");\n        if (this.moveDistance  > this.thresholdDistance && GCache.Desk.turnMe) {\n            // 出牌\n            console.log('出牌');\n            let byte:number = this._touchNode.getComponent(NodeCardCtr).byte;\n            this.onSendCard(byte);\n        } else {\n            // 放回原处\n            console.log(\"放回原处________\")\n            if(this._touchNode){\n                this._touchNode.setPosition(this.touchNodePos);\n            }\n        }\n        this._touchNode = null;\n        this._isTouched = false;\n        this.moveDistance = 0;\n    }\n\n    //将抓上来的牌打出去\n    playDrawCard( cb?: any){\n        let toOutCard = this._drawCardNode;\n        toOutCard.removeFromParent();\n        this._drawCardNode = null;        \n    }\n\tplayCardFromHandAnim(index: number,rmDraw?:boolean,cb?: any):boolean {\n\t\tthis._slotIndex = index;\n\n        let toOutCard = this._mjList[index]\n        if (Utils.isNotNull(toOutCard) && rmDraw === false){\n            this._mjList[index] = null\n            toOutCard.removeFromParent();\n            return true;\n        }else if(Utils.isNotNull(this._drawCardNode) || rmDraw === true){\n            this._drawCardNode.removeFromParent();\n            this._drawCardNode = null;   \n            return false;\n        }\n\t}\n\t\n\t//从手牌移除指定位置的一张或者多张牌，并且出牌之后，如果抓牌未移除，需要把抓的牌放到手牌中，抓牌为空\n    removeHandCard(indexList: number[], updateCard: boolean = false) {\n\t\tindexList.sort((a, b) => b - a)\n\t\t\n\t\tfor (let index of indexList) { \n            if (index < this._mjList.length) {  \n                let removeNode = this._mjList.splice(index, 1);\n                removeNode[0].removeFromParent();\n            } \n            else {\n                console.log(\"索引大于等于当前渲染手牌的数量请检查逻辑\", index)\n                return;\n            }\n        }   \n\n        if (updateCard)\n        {\n            this.updateHandPositionAndName()\n        }\n\n\t}\n\n\tmakeSlotAnim(index: number)\n    {\n        if (this._slotIndex == -1 || this._mjList[this._slotIndex] != null)\n        {\n            console.log(\"当前没有空的手牌位置,无法空出对应的索引位置\", this._slotIndex, index)\n\n            return;\n        }\n\n        if (this._slotIndex < index) // 2空  4\n        {\n\t\t\tfor (let i = this._slotIndex + 1; i <= index; i++)\n            {\n                let ac = new AnimationClip()\n                ac.duration = 0.2\n                let track = new animation.VectorTrack();\n                track.componentsCount = 3;\n                track.path = new animation.TrackPath().toProperty(\"position\")\n                let [x, _, z] = track.channels();\n                let mjNode = this._mjList[i];\n                let startPos = mjNode.getPosition() ;\n                let endPos = this.getHandPosition(i - 1);\n                \n                x.curve.assignSorted([\n                    [0, {value: startPos.x}],\n                    [0.2, {value: endPos.x}]\n                ])\n\n                z.curve.assignSorted([\n                    [0, {value: startPos.z}],\n                    [0.2, {value: endPos.z}]\n                ])\n\n                let animCom = mjNode.addComponent(Animation)\n                ac.addTrack(track)\n                animCom.defaultClip = ac\n                animCom.play(); \n            }\n\n            for (let i = this._slotIndex; i < index; i++)\n            {\n                this._mjList[i] = this._mjList[i + 1] // 同步平移在列表内的位置\n            }\n        }\n        else if(index < this._slotIndex) // 2  4空\n        {\n\n\t\t\tfor (let i = index; i < this._slotIndex; i++)\n            {\n                let ac = new AnimationClip() \n                ac.duration = 0.2\n                let track = new animation.VectorTrack();\n                track.componentsCount = 3;\n                track.path = new animation.TrackPath().toProperty(\"position\")\n                let [x, _, z] = track.channels();\n                let mjNode = this._mjList[i];\n                let startPos = mjNode.getPosition() ;\n                let endPos = this.getHandPosition(i + 1);\n\n                x.curve.assignSorted([\n                    [0, {value: startPos.x}], \n                    [0.2, {value: endPos.x}]\n                ])\n\n                z.curve.assignSorted([\n                    [0, {value: startPos.z}],\n                    [0.2, {value: endPos.z}]\n                ])\n\n                let animCom = mjNode.addComponent(Animation)\n                ac.addTrack(track)\n                animCom.defaultClip = ac\n                animCom.play(); \n            }\n\n            for (let i = this._slotIndex; i > index; i--)\n            {\n                this._mjList[i] = this._mjList[i - 1] // 同步平移在列表内的位置\n            }\n        }  \n        this._mjList[index] = null //平移后空出来的列表位置\n        this._slotIndex = index\n    }\n\n\t\n\tdrawCardToSlot(cb?: any){\n\t\tif (this._drawCardNode == null)\n        {\n            console.log(\"没有渲染抽牌节点, 抽牌到手牌动画失败\")\n            return;\n        }\n\n\t\tthis._mjList[this._slotIndex] = this._drawCardNode\n        this._drawCardNode = null\n        let startPos = this._mjList[this._slotIndex].getPosition()\n        let endPos = this.getHandPosition(this._slotIndex)\n\n        const ac = new AnimationClip();  \n\n        ac.duration = 0.5\n        \n        const track = new animation.VectorTrack();\n        track.componentsCount = 3;\n        track.path = new animation.TrackPath().toProperty(\"position\")\n        const [posx, posy, posz] = (track as animation.VectorTrack).channels();\n        posx.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.x}], \n            [0.1, {easingMethod : 2, value: startPos.x}], \n            [0.4, {easingMethod : 2, value: endPos.x}],\n            [0.5, {easingMethod : 2, value: endPos.x}]\n        ]);\n        posy.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y + 20}], \n            [0.4, {easingMethod : 2, value: startPos.y + 20}], \n            [0.5, {easingMethod : 2, value: endPos.y}]\n        ]);\n        posz.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.z}], \n            [0.1, {easingMethod : 2, value: startPos.z - 3.5}], \n            [0.4,{easingMethod : 2, value:  startPos.z - 3.5}],\n            [0.5,{easingMethod : 2, value:  endPos.z}]\n        ]);\n\n        let animCom: Animation;\n\n        if (this._mjList[this._slotIndex].getComponent(Animation) == null)\n        {\n            animCom = this._mjList[this._slotIndex].addComponent(Animation)\n        }\n        else\n        {\n            animCom = this._mjList[this._slotIndex].getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        if(cb)\n        {\n            animCom.on(Animation.EventType.FINISHED, cb, this)\n            this._playHandCardCb = cb\n        }\n\n        ac.addTrack(track)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t\t\n\t}\n\n\n\tgetListBytes():number[]{\n\t\tlet bytes:number[] = [];\n\t\tfor (let i = 0; i < this._mjList.length; i++) {\n\t\t\tlet node_byte: number = this._mjList[i].getComponent(NodeCardCtr).byte;\n\t\t\tbytes.push(node_byte);\n\t\t}\n\t\treturn bytes;\n\t}\n\n\tuseByteFindIndexs(bytes:number[]):number[]{\n\t\tlet indexs:number[] = [];\n\n\t\tbytes.forEach((byte) => {\n\t\t\tfor (let i = 0; i < this._mjList.length; i++) {\n\t\t\t\tlet node_byte: number = this._mjList[i].getComponent(NodeCardCtr).byte;\n\t\t\t\tif(byte === node_byte){\n\t\t\t\t\tindexs.push(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn indexs;\n\t}\n\n\tgetNodeIndex(node: Node)\n    {\n        return this._mjList.findIndex(theNode => theNode == node, this);\n    }\n\n\taddHandCards(valueList: number[], active: boolean, stackCount?: number, hasDrawCard: boolean = false)\n    {\n\t\tlet handCardCount =  valueList.length;\n        \n        if (hasDrawCard)\n        {\n            handCardCount = valueList.length - 1\n        }\n\n\t\tfor (let i = 0; i < handCardCount; i++)\n        { \n\t\t\tlet mjNode = instantiate(this.nodeCardTemplate)\n\t\t\tlet cardValue = valueList[i]\n\t\t\tmjNode.getComponent(NodeCardCtr).setCardByte(cardValue);\n\t\t\tmjNode.active = true;\n\t\t\tthis._mjList.push(mjNode);\n\t\t\tthis.node.addChild(mjNode);\n\t\t}\n\t\tthis.updateHandPositionAndName(true);\n\t\tif (hasDrawCard)\n        {\n            this.drawCard(valueList[handCardCount],true)\n            this._drawCardNode.active = active\n        }\n\n\t}\n\n\tgetHandPosition(index: number){\n\t\treturn new Vec3(MjSize.width / 2 + MjSize.width * index, 0, 0)\n\t}\n\n\t\n    getLastPosition():number{\n\t\treturn MjSize.width / 2 + MjSize.width * (this._mjList.length - 1);\n\t}\n\n\tplaySelectAnim(node: Node){\n\t\tif(this.selectedNode){\n\t\t\tthis.playUnselectAnim(this.selectedNode);\n\t\t\tif(this.selectedNode == node){\n\t\t\t\tthis.selectedNode = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedNode = node\n        let startPos = this.selectedNode.getPosition()\n        \n        const ac = new AnimationClip();  \n\n        ac.duration = 0.1\n\n        const trackPos = new animation.VectorTrack();\n        trackPos.componentsCount = 3;\n        trackPos.path = new animation.TrackPath().toProperty(\"position\")\n        const [x, y, z] = (trackPos as animation.VectorTrack).channels();\n        x.curve.assignSorted([\n            [0, {easingMethod : 2, value: this.touchNodePos.x}], \n            [0.1, {easingMethod : 2, value: this.touchNodePos.x}]\n        ]);\n        y.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y + 20}]\n        ]);\n        // z.curve.assignSorted([\n        //     [0, {easingMethod : 2, value: startPos.z}], \n        //     [0.1,{easingMethod : 2, value:  startPos.z - 0.8}]\n        // ]);\n\n        let animCom: Animation;\n\n        if (this.selectedNode.getComponent(Animation) == null)\n        {\n            animCom = this.selectedNode.addComponent(Animation)\n        }\n        else\n        {\n            animCom = this.selectedNode.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n            if(GCache.Desk.turnMe){\n\t\t\t\tlet byte:number = this.selectedNode.getComponent(NodeCardCtr).byte;\n\t\t\t\tthis.onSendCard(byte);\n\t\t\t}\n        }\n\n        ac.addTrack(trackPos)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t}\n\tplayUnselectAnim(node: Node){\n        let startPos = this.selectedNode.getPosition()\n\t\tconst ac = new AnimationClip();  \n\n        ac.duration = 0.1 \n \n        const trackPos = new animation.VectorTrack();\n        trackPos.componentsCount = 3;\n        trackPos.path = new animation.TrackPath().toProperty(\"position\")\n        const [x, y, z] = (trackPos as animation.VectorTrack).channels();\n        x.curve.assignSorted([\n            [0, {easingMethod : 2, value: this.touchNodePos.x}], \n            [0.1, {easingMethod : 2, value: this.touchNodePos.x}]\n        ]);\n        y.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: 0}]\n        ]);\n        // z.curve.assignSorted([ \n        //     [0, {easingMethod : 2, value: startPos.z}], \n        //     [0.1,{easingMethod : 2, value:  startPos.z + 0.8}]\n        // ]); \n\n        let animCom: Animation;\n\n        if (node.getComponent(Animation) == null)\n        {\n            animCom = node.addComponent(Animation)\n        }\n        else\n        {\n            animCom = node.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        ac.addTrack(trackPos)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t}\n\n\t//出牌\n\tonSendCard(byte:number){\n        PlayerMgr.getInstance().dumpMyHands();\n\t\tlet index:number = OperationMgr.getInstance().getSendCardIndex(byte);\n        console.log(\"onSendCard______\",index,byte,CardUtil.getMajiangValue(byte));\n        let req: Game.ISendOperation = {\n            opCard:byte,\n\t\t\topCode:OPCode.OPE_OUT_CARD,\n\t\t\topCards:[byte],\n\t\t\tseatId:OperationMgr.getInstance().seatId,\n\t\t\tuserId:OperationMgr.getInstance().userId\n            \n        }\n        EventManager.dispatch(GameEvent.CLOSE_OPRATION_INFO);\n        EventManager.dispatch(GameEvent.SEND_PLAYER_OPERATION, req);\n\t}\n\n\t//游戏开始或结束，清空手牌区，包括抓牌，保持初始状态\n    resetView() {\n        this.node.removeAllChildren();\n        this._mjList = [];\n        this._drawCardNode = null;\n        // this.initNodePos();\n    }\n}\n\n"]}