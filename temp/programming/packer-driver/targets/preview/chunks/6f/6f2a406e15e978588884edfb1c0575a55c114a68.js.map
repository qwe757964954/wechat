{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeNormalAnimCtr.ts"],"names":["Vec3","_decorator","tween","Utils","EventManager","BaseComponent","FXJConstant","FXJEvent","FXJRes","FXJSound","NodeUserCtr","NodeUserPrefabCtr","ccclass","property","NodeNormalAnimCtr","tooltip","type","_prepareFeiji","onInitModuleEvent","addModelListener","VIEW_DESK_ANI_PLAY","startPlayAnim","onLoad","console","log","node","active","start","event","animType","pData","AnimNormal","HudongProp","__showHuDongDaoju","allUserNode","children","length","table_verify","animConf","HuDongPropConf","anim","number_valueOf","fromNode","toNode","fromPos","toPos","i","userNode","getComponent","UID","PosID","startPos","getPosition","endPos","direction","aniNameStart","string_format","self","startPlayerAnim","actionName","aniName","aniNode","create_2DNode","addChild","setPosition","param","resConf","Spine_Hddj","parentNode","trackIndex","isLoop","callStartFunc","to","position","x","y","z","call","dispatch","SYS_PLAY_EFFECT","bundle","InteractProp","path","SYS_ANI_PLAY","aniNameEnd","onDestroy"],"mappings":"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","sourcesContent":["\nimport { Node, Vec3, _decorator, tween } from 'cc';\nimport { inf_SpineAniCreate } from '../../../framework/InterfaceDefines';\nimport { Utils } from '../../../framework/Utils';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { FXJConstant } from '../common/FXJConstant';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { FXJRes } from '../common/FXJRes';\nimport { FXJSound } from '../common/FXJSound';\nimport { NodeUserCtr } from './NodeUserCtr';\nimport { NodeUserPrefabCtr } from './NodeUserPrefabCtr';\nconst { ccclass, property } = _decorator;\n\n@ccclass('NodeNormalAnimCtr')\nexport class NodeNormalAnimCtr extends BaseComponent {\n\n    //玩家节点\n    @property({ tooltip: \"玩家节点\", type: NodeUserCtr })\n    private allUserNode: NodeUserCtr | null = null;\n\n    /** 飞机预备 */\n    private _prepareFeiji: Node = null;\n\n    protected onInitModuleEvent() {\n        //播放动画\n        this.addModelListener(FXJEvent.VIEW_DESK_ANI_PLAY, this.startPlayAnim);\n\n        // // 显示角色技能动画和声音\n        // this.addModelListener(FXJEvent.VIEW_PLAYER_USE_ROLE_SKILL, this.playRoleSkillAnim);\n        // // 显示玩家出牌动画\n        // this.addModelListener(FXJEvent.VIEW_PLAYER_OUT_CARD_ANI, this.playerOutCardAni);\n\n        // this.addModelListener(FXJEvent.GAME_HAND_CARDS_RECORD_UPDATE, this.prepareFeiji);\n\n    }\n\n    onLoad() {\n        console.log(\"动画节点出现了\")\n        this.node.active = true;\n    };\n\n    start() {\n\n    };\n    /** 开始播放动画 */\n    startPlayAnim(event, animType, pData) {\n        switch (animType) {\n            case FXJConstant.AnimNormal.HudongProp:\n                this.__showHuDongDaoju(pData);\n                break;\n            // case FXJConstant.AnimNormal.ZhadanTip:   // 炸弹提示\n            //     this.showBombTip(pData);\n            //     break;\n            default:\n                break;\n        }\n    }\n    /** 显示互动道具 */\n    __showHuDongDaoju(pData) {\n        console.log(\"动画节点出现了:__showHuDongDaoju\")\n        //uid: 10086089, prop_id: 3, to_uid: 10086845\n        if (this.allUserNode.node.children.length == 0) {\n            return;\n        }\n        pData = Utils.table_verify(pData);\n        \n        let animConf = FXJConstant.HuDongPropConf.anim[Utils.number_valueOf(pData[\"prop_id\"], -1)];\n        if (!animConf) {\n            return;\n        }\n        let fromNode: Node = null;\n        let toNode: Node = null;\n        let fromPos = null;\n        let toPos = null;\n\n        for (let i = 0; i < this.allUserNode.node.children.length; i++) {\n            let userNode = this.allUserNode.node.children[i];\n            let NodeUserCtr = userNode.getComponent(NodeUserPrefabCtr);\n            if (NodeUserCtr.UID == pData[\"uid\"]) {\n                fromNode = userNode;\n                fromPos = NodeUserCtr.PosID;\n            }\n            if (NodeUserCtr.UID == pData[\"to_uid\"]) {\n                toNode = userNode;\n                toPos = NodeUserCtr.PosID;\n            }\n        }\n        if (fromNode && toNode && fromNode != toNode) {\n            let startPos = fromNode.getPosition();\n            let endPos = toNode.getPosition();\n\n            let direction = FXJConstant.HuDongPropConf[\"direction\"][toPos];\n            let aniNameStart = Utils.string_format(animConf[\"action\"], direction);\n            let self = this;\n            let startPlayerAnim = function (actionName, aniName, toPos: Vec3) {\n                let aniNode = Utils.create_2DNode(\"HuDongPropAni\");\n                self.node.addChild(aniNode);\n                aniNode.setPosition(toPos);\n                let param: inf_SpineAniCreate = {   \n                    resConf: FXJRes.Spine_Hddj,\n                    aniName: aniName,\n                    parentNode: aniNode,\n                    trackIndex: 0,\n                    isLoop: false, \n                    callStartFunc: () => {\n                        if (actionName == \"action\") {\n                            tween(aniNode)\n                                .to(animConf[\"time\"], { position: new Vec3(endPos.x, endPos.y + 110, endPos.z), })\n                                .call(() => {\n                                    // -- 音效\n                                    EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, { bundle: FXJSound.InteractProp.bundle, path: Utils.string_format(FXJSound.InteractProp.path, pData[\"prop_id\"]) });\n                                })\n                                .start();\n                        }\n                    }\n                }\n                EventManager.dispatch(FXJEvent.SYS_ANI_PLAY, param);\n               \n            }\n            console.log(\"开始位置：===\", startPos, endPos)\n            startPlayerAnim(\"action\", aniNameStart, new Vec3(startPos.x, startPos.y + 150, startPos.z))\n            if (animConf[\"action_end\"]) {\n                let aniNameEnd = Utils.string_format(animConf[\"action_end\"], direction);\n                startPlayerAnim(\"action_end\", aniNameEnd, new Vec3(endPos.x, endPos.y + 150, endPos.z))\n            }\n        }\n    }\n\n    //销毁\n    onDestroy() {\n\n    };\n\n}\n\n"]}