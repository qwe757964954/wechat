{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeClockCtr.ts"],"names":["MeshRenderer","Node","Texture2D","_decorator","GCache","Utils","BaseComponent","RoomMgr","GameStatus","FXJRes","ccclass","property","NodeClockCtr","tooltip","type","constructor","_nodeLight","_nodeLightConfig","_nodeLightDir","_hostDir","_timeCount","firstRunLoadSuccess","preloadRes","forEach","value1","index1","array1","value2","index2","array2","path","string_format","Picture_Game_Desk_Light","getPreLoaderRes","bundle","res","i","Picture_Game_Desk_Timer","onInitModuleEvent","onLoad","initData","initView","start","nodeLightDong","nodeLightNan","nodeLightXi","nodeLightBei","resetView","getInstance","mySeatId","updateViewTimerDir","node","setRotationFromEuler","updateViewLight","dir","value","index","array","config","tex","getComponent","material","setProperty","updateViewTime","time","nodeTimer","active","onSetClock","log","unschedule","onScheduleEvent","isNotNull","schedule","onGameStart","OnChangedSeat","hostDir","onOperationStart","data","timeOut","getTimeOut","PLAY_CARD","bankSeatId","onOperationSelect","OPERATION","seatId","onTakeCard","onGameOver","onReconnect","isNull","operationSeatId","operationTimePass","onDestroy","args","console"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,U,OAAAA,U;;AAC/BC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;8BAGaS,Y,WADZF,OAAO,CAAC,cAAD,C,UAGHC,QAAQ,CAAC;AAAEE,QAAAA,OAAO,EAAE,eAAX;AAA4BC,QAAAA,IAAI,EAAEb;AAAlC,OAAD,C,UAIRU,QAAQ,CAAC;AAAEE,QAAAA,OAAO,EAAE,eAAX;AAA4BC,QAAAA,IAAI,EAAEb;AAAlC,OAAD,C,UAIRU,QAAQ,CAAC;AAAEE,QAAAA,OAAO,EAAE,eAAX;AAA4BC,QAAAA,IAAI,EAAEb;AAAlC,OAAD,C,UAIRU,QAAQ,CAAC;AAAEE,QAAAA,OAAO,EAAE,eAAX;AAA4BC,QAAAA,IAAI,EAAEb;AAAlC,OAAD,C,UAIRU,QAAQ,CAAC;AAAEE,QAAAA,OAAO,EAAE,UAAX;AAAuBC,QAAAA,IAAI,EAAEb;AAA7B,OAAD,C,2BAnBb,MACaW,YADb;AAAA;AAAA,0CACgD;AAC5C;;AAIA;;AAIA;;AAIA;;AAIA;;AAIA;;AAGA;;AAQA;;AAGA;;AAGA;AAGAG,QAAAA,WAAW,GAAG;AACV;;AADU;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAnBNC,UAmBM,GAnBe,IAmBf;AAAA,eAhBNC,gBAgBM,GAhByB,CACnC,CAAC,QAAD,EAAW,QAAX,CADmC,EAEnC,CAAC,OAAD,EAAU,OAAV,CAFmC,EAGnC,CAAC,MAAD,EAAS,MAAT,CAHmC,EAInC,CAAC,OAAD,EAAU,OAAV,CAJmC,CAgBzB;AAAA,eARNC,aAQM,GARkB,CAAC,CAQnB;AAAA,eALNC,QAKM,GALa,CAKb;AAAA,eAFNC,UAEM,GAFe,CAEf;;AAEV,cAAI,CAAC;AAAA;AAAA,gCAAOC,mBAAZ,EAAiC;AAC7B;AACH;;AACD,eAAKC,UAAL;AACH;AAED;;;AACAA,QAAAA,UAAU,GAAG;AACT,eAAKL,gBAAL,CAAsBM,OAAtB,CAA8B,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,KAA4B;AACtDF,YAAAA,MAAM,CAACD,OAAP,CAAe,CAACI,MAAD,EAASC,MAAT,EAAiBC,MAAjB,KAA4B;AACvC,kBAAIC,IAAI,GAAG;AAAA;AAAA,kCAAMC,aAAN,CAAoB;AAAA;AAAA,oCAAOC,uBAAP,CAA+BF,IAAnD,EAAyDH,MAAzD,CAAX;AACA,mBAAKM,eAAL,CAAqB;AAAA;AAAA,oCAAOD,uBAAP,CAA+BE,MAApD,EAA4DJ,IAA5D,EAAkE5B,SAAlE,EAA8EiC,GAAD,IAAS,CACrF,CADD;AAEH,aAJD;AAKH,WAND;;AAQA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,gBAAIN,IAAI,GAAG;AAAA;AAAA,gCAAMC,aAAN,CAAoB;AAAA;AAAA,kCAAOM,uBAAP,CAA+BP,IAAnD,EAAyDM,CAAzD,CAAX;AACA,iBAAKH,eAAL,CAAqB;AAAA;AAAA,kCAAOI,uBAAP,CAA+BH,MAApD,EAA4DJ,IAA5D,EAAkE5B,SAAlE,EAA8EiC,GAAD,IAAS,CACrF,CADD;AAEH;AAEJ;AAGD;;;AACUG,QAAAA,iBAAiB,GAAG,CAC7B;;AAEDC,QAAAA,MAAM,GAAG;AACL,eAAKC,QAAL;AACA,eAAKC,QAAL;AACH;;AAGDC,QAAAA,KAAK,GAAG,CAEP;;AAEDF,QAAAA,QAAQ,GAAG,CAEV;;AAEDC,QAAAA,QAAQ,GAAG;AACP;AACA,eAAKzB,UAAL,GAAkB,CACd,KAAK2B,aADS,EAEd,KAAKC,YAFS,EAGd,KAAKC,WAHS,EAId,KAAKC,YAJS,CAAlB;AAMH;;AAEDC,QAAAA,SAAS,GAAG;AACR,eAAK5B,QAAL,GAAgB;AAAA;AAAA,kCAAQ6B,WAAR,GAAsBC,QAAtB,GAAiC,CAAjD;AACA,eAAKC,kBAAL;AACH;AAED;;;AACQA,QAAAA,kBAAkB,GAAG;AACzB,eAAKC,IAAL,CAAUC,oBAAV,CAA+B,CAA/B,EAAkC,KAAK,KAAKjC,QAA5C,EAAsD,CAAtD;AACH;;AAEOkC,QAAAA,eAAe,CAACC,GAAD,EAAmB;AAAA,cAAlBA,GAAkB;AAAlBA,YAAAA,GAAkB,GAAJ,CAAC,CAAG;AAAA;;AACtC,cAAI,KAAKpC,aAAL,IAAsBoC,GAA1B,EAA+B;AAC3B;AACH;;AAED,eAAKtC,UAAL,CAAgBO,OAAhB,CAAwB,CAACgC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAC7C,gBAAIC,MAAM,GAAG,KAAKzC,gBAAL,CAAsBuC,KAAtB,CAAb;AACA,gBAAI1B,IAAI,GAAG;AAAA;AAAA,gCAAMC,aAAN,CAAoB;AAAA;AAAA,kCAAOC,uBAAP,CAA+BF,IAAnD,EAAyDwB,GAAG,IAAIE,KAAP,GAAeE,MAAM,CAAC,CAAD,CAArB,GAA2BA,MAAM,CAAC,CAAD,CAA1F,CAAX;AACA,iBAAKzB,eAAL,CAAqB;AAAA;AAAA,kCAAOD,uBAAP,CAA+BE,MAApD,EAA4DJ,IAA5D,EAAkE5B,SAAlE,EAA8EyD,GAAD,IAAS;AAClF,kBAAIA,GAAJ,EAAS;AACLJ,gBAAAA,KAAK,CAACK,YAAN,CAAmB5D,YAAnB,EAAkC6D,QAAlC,CAA4CC,WAA5C,CAAwD,WAAxD,EAAqEH,GAArE;AACH;AACJ,aAJD;AAMH,WATD;;AAWA,eAAKzC,aAAL,GAAqBoC,GAArB;AACH;;AAEOS,QAAAA,cAAc,CAACC,IAAD,EAAoB;AAAA,cAAnBA,IAAmB;AAAnBA,YAAAA,IAAmB,GAAJ,CAAC,CAAG;AAAA;;AACtC,cAAIA,IAAI,IAAI,CAAZ,EAAe;AACX,iBAAKC,SAAL,CAAeC,MAAf,GAAwB,IAAxB;AACA,gBAAIpC,IAAI,GAAG;AAAA;AAAA,gCAAMC,aAAN,CAAoB;AAAA;AAAA,kCAAOM,uBAAP,CAA+BP,IAAnD,EAAyDkC,IAAzD,CAAX;AACA,iBAAK/B,eAAL,CAAqB;AAAA;AAAA,kCAAOI,uBAAP,CAA+BH,MAApD,EAA4DJ,IAA5D,EAAkE5B,SAAlE,EAA8EyD,GAAD,IAAS;AAClF,kBAAIA,GAAJ,EAAS;AACL,qBAAKM,SAAL,CAAeL,YAAf,CAA4B5D,YAA5B,EAA2C6D,QAA3C,CAAqDC,WAArD,CAAiE,WAAjE,EAA8EH,GAA9E;AACH;AACJ,aAJD;AAKH,WARD,MAQO;AACH,iBAAKM,SAAL,CAAeC,MAAf,GAAwB,KAAxB;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACIC,QAAAA,UAAU,CAACb,GAAD,EAAmBU,IAAnB,EAAsC;AAAA,cAArCV,GAAqC;AAArCA,YAAAA,GAAqC,GAAvB,CAAC,CAAsB;AAAA;;AAAA,cAAnBU,IAAmB;AAAnBA,YAAAA,IAAmB,GAAJ,CAAC,CAAG;AAAA;;AAC5C,eAAKI,GAAL,CAAS,yBAAT,EAAoC,OAApC,EAA6C,KAA7C,EAAoDd,GAApD,EAAyD,MAAzD,EAAiEU,IAAjE;AACA,eAAKK,UAAL,CAAgB,KAAKC,eAArB;AACA,eAAKjB,eAAL,CAAqBC,GAArB;AACA,eAAKS,cAAL,CAAoBC,IAApB,EAJ4C,CAM5C;;AACA,cAAI;AAAA;AAAA,8BAAMO,SAAN,CAAgBP,IAAhB,KAAyBA,IAAI,GAAG,CAApC,EAAuC;AACnC,iBAAK5C,UAAL,GAAkB4C,IAAlB;AACA,iBAAKQ,QAAL,CAAc,KAAKF,eAAnB,EAAoC,CAApC;AACH;AAEJ;AAED;;;AACQA,QAAAA,eAAe,GAAG;AACtB,eAAKlD,UAAL,GADsB,CAEtB;;AAEA,cAAI,KAAKA,UAAL,GAAkB,CAAtB,EAAyB;AACrB,iBAAKiD,UAAL,CAAgB,KAAKC,eAArB;AACH,WAFD,MAEO;AACH,iBAAKP,cAAL,CAAoB,KAAK3C,UAAzB;AACH;AACJ;AAED;;;AACAqD,QAAAA,WAAW,GAAG;AACV,eAAK1B,SAAL;AACH;AAED;;;AACA2B,QAAAA,aAAa,CAACC,OAAD,EAAkB;AAC3B,eAAKxD,QAAL,GAAgBwD,OAAhB;AACA,eAAKzB,kBAAL,GAF2B,CAEA;AAC9B;AAED;;;AACA0B,QAAAA,gBAAgB,CAACC,IAAD,EAAwB;AACpC;AACA,cAAIC,OAAO,GAAG;AAAA;AAAA,kCAAQ9B,WAAR,GAAsB+B,UAAtB,CAAiC;AAAA;AAAA,wCAAWC,SAA5C,CAAd;AACA,cAAI1B,GAAG,GAAGuB,IAAI,CAACI,UAAL,GAAkB,CAA5B;AACA,eAAKd,UAAL,CAAgBb,GAAhB,EAAqBwB,OAArB;AACH;AAED;;;AACAI,QAAAA,iBAAiB,CAACL,IAAD,EAAwB;AACrC;AACA,cAAIC,OAAO,GAAG;AAAA;AAAA,kCAAQ9B,WAAR,GAAsB+B,UAAtB,CAAiC;AAAA;AAAA,wCAAWI,SAA5C,CAAd;AACA,cAAI7B,GAAG,GAAGuB,IAAI,CAACO,MAAL,GAAc,CAAxB;AACA,eAAKjB,UAAL,CAAgBb,GAAhB,EAAqBwB,OAArB;AACH;AAED;;;AACAO,QAAAA,UAAU,CAACR,IAAD,EAAY;AAClB;AACA,cAAIC,OAAO,GAAG;AAAA;AAAA,kCAAQ9B,WAAR,GAAsB+B,UAAtB,CAAiC;AAAA;AAAA,wCAAWC,SAA5C,CAAd;AACA,cAAI1B,GAAG,GAAGuB,IAAI,CAACO,MAAL,GAAc,CAAxB;AACA,eAAKjB,UAAL,CAAgBb,GAAhB,EAAqBwB,OAArB;AACH;AAED;;;AACAQ,QAAAA,UAAU,CAACT,IAAD,EAAwB;AAC9B;AACA,eAAKV,UAAL,CAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB;AACH;AAED;;;AACAoB,QAAAA,WAAW,CAACV,IAAD,EAAuC;AAC9C,eAAK9B,SAAL;;AAEA,cAAI;AAAA;AAAA,8BAAMyC,MAAN,CAAaX,IAAI,CAACY,eAAlB,KAAsCZ,IAAI,CAACY,eAAL,GAAuB,CAA7D,IAAkEZ,IAAI,CAACY,eAAL,GAAuB,CAA7F,EAAgG;AAC5F,iBAAKrB,GAAL,CAAS,0BAAT,EAAqC,OAArC,EAA8CS,IAAI,CAACY,eAAnD;AACA;AACH;;AAED,cAAI;AAAA;AAAA,8BAAMD,MAAN,CAAaX,IAAI,CAACa,iBAAlB,CAAJ,EAA0C;AACtC,iBAAKtB,GAAL,CAAS,0BAAT,EAAqC,QAArC,EAA+CS,IAAI,CAACa,iBAApD;AACA;AACH,WAX6C,CAa9C;;;AACA,cAAIZ,OAAO,GAAGD,IAAI,CAACa,iBAAnB;AACA,cAAIpC,GAAG,GAAGuB,IAAI,CAACY,eAAL,GAAuB,CAAjC;AACA,eAAKtB,UAAL,CAAgBb,GAAhB,EAAqBwB,OAArB;AACH,SArO2C,CAuO5C;;;AACAa,QAAAA,SAAS,GAAG,CACX;;AAEDvB,QAAAA,GAAG,GAAiB;AAAA,4CAAbwB,IAAa;AAAbA,YAAAA,IAAa;AAAA;;AAChBC,UAAAA,OAAO,CAACzB,GAAR,CAAYwB,IAAZ;AACH;;AA7O2C,O;;;;;iBAGd,I;;;;;;;iBAID,I;;;;;;;iBAID,I;;;;;;;iBAIC,I;;;;;;;iBAIH,I","sourcesContent":["\nimport { MeshRenderer, Node, Texture2D, _decorator } from 'cc';\nimport { GCache } from '../../../cache/GCache';\nimport { Utils } from '../../../framework/Utils';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { GameStatus } from '../common/FXJConfig';\nimport { FXJRes } from '../common/FXJRes';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeClockCtr\n * URL = db://assets/package/game/scripts/NodeClockCtr.ts\n * Time = Mon Aug 14 2023 10:42:21 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('NodeClockCtr')\nexport class NodeClockCtr extends BaseComponent {\n    /** 麻将桌东指示灯节点 - 东 */\n    @property({ tooltip: \"麻将桌东指示灯节点 - 东\", type: Node })\n    private nodeLightDong: Node = null;\n\n    /** 麻将桌东指示灯节点 - 南 */\n    @property({ tooltip: \"麻将桌东指示灯节点 - 南\", type: Node })\n    private nodeLightNan: Node = null;\n\n    /** 麻将桌东指示灯节点 - 西 */\n    @property({ tooltip: \"麻将桌东指示灯节点 - 西\", type: Node })\n    private nodeLightXi: Node = null;\n\n    /** 麻将桌东指示灯节点 - 北 */\n    @property({ tooltip: \"麻将桌东指示灯节点 - 北\", type: Node })\n    private nodeLightBei: Node = null;\n\n    /** 麻将桌倒计时节点 */\n    @property({ tooltip: \"麻将桌倒计时节点\", type: Node })\n    private nodeTimer: Node = null;\n\n    /** 指示灯节点 */\n    private _nodeLight: Node[] = null;\n\n    /** 指示灯节点配置 */\n    private _nodeLightConfig: string[][] = [\n        [\"dong_1\", \"dong_2\"],\n        [\"nan_1\", \"nan_2\"],\n        [\"xi_1\", \"xi_2\"],\n        [\"bei_1\", \"bei_2\"],\n    ];\n\n    /** 指示灯方向 */\n    private _nodeLightDir: number = -1;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n\n    /** 计时 */\n    private _timeCount: number = 0;\n\n    constructor() {\n        super();\n        if (!GCache.firstRunLoadSuccess) {\n            return;\n        }\n        this.preloadRes();\n    }\n\n    /** 预加载 */\n    preloadRes() {\n        this._nodeLightConfig.forEach((value1, index1, array1) => {\n            value1.forEach((value2, index2, array2) => {\n                let path = Utils.string_format(FXJRes.Picture_Game_Desk_Light.path, value2);\n                this.getPreLoaderRes(FXJRes.Picture_Game_Desk_Light.bundle, path, Texture2D, (res) => {\n                });\n            })\n        });\n\n        for (let i = 0; i <= 20; i++) {\n            let path = Utils.string_format(FXJRes.Picture_Game_Desk_Timer.path, i);\n            this.getPreLoaderRes(FXJRes.Picture_Game_Desk_Timer.bundle, path, Texture2D, (res) => {\n            });\n        }\n\n    }\n\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    }\n\n    initData() {\n\n    }\n\n    initView() {\n        // 东南西北指示灯\n        this._nodeLight = [\n            this.nodeLightDong,\n            this.nodeLightNan,\n            this.nodeLightXi,\n            this.nodeLightBei,\n        ]\n    }\n\n    resetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n        this.updateViewTimerDir();\n    }\n\n    /** 更新倒计时方位 */\n    private updateViewTimerDir() {\n        this.node.setRotationFromEuler(0, 90 * this._hostDir, 0);\n    }\n\n    private updateViewLight(dir: number = -1) {\n        if (this._nodeLightDir == dir) {\n            return;\n        }\n\n        this._nodeLight.forEach((value, index, array) => {\n            let config = this._nodeLightConfig[index];\n            let path = Utils.string_format(FXJRes.Picture_Game_Desk_Light.path, dir == index ? config[1] : config[0]);\n            this.getPreLoaderRes(FXJRes.Picture_Game_Desk_Light.bundle, path, Texture2D, (tex) => {\n                if (tex) {\n                    value.getComponent(MeshRenderer)!.material!.setProperty('albedoMap', tex);\n                }\n            })\n\n        });\n\n        this._nodeLightDir = dir;\n    }\n\n    private updateViewTime(time: number = -1) {\n        if (time >= 0) {\n            this.nodeTimer.active = true;\n            let path = Utils.string_format(FXJRes.Picture_Game_Desk_Timer.path, time);\n            this.getPreLoaderRes(FXJRes.Picture_Game_Desk_Timer.bundle, path, Texture2D, (tex) => {\n                if (tex) {\n                    this.nodeTimer.getComponent(MeshRenderer)!.material!.setProperty('albedoMap', tex);\n                }\n            })\n        } else {\n            this.nodeTimer.active = false;\n        }\n    }\n\n    /** \n     * 设置闹钟\n     * @param dir 闹钟方向, 为空关闭闹钟\n     * @param time 闹钟时间\n     *  */\n    onSetClock(dir: number = -1, time: number = -1) {\n        this.log(\"NodeClockCtr.onSetClock\", \"倒计时开始\", \"dir\", dir, \"time\", time)\n        this.unschedule(this.onScheduleEvent)\n        this.updateViewLight(dir);\n        this.updateViewTime(time);\n\n        // 启动计时\n        if (Utils.isNotNull(time) && time > 0) {\n            this._timeCount = time;\n            this.schedule(this.onScheduleEvent, 1)\n        }\n\n    }\n\n    /** 计时回调 */\n    private onScheduleEvent() {\n        this._timeCount--;\n        // this.log(\"NodeClockCtr.onScheduleEvent\", this._timeCount)\n\n        if (this._timeCount < 0) {\n            this.unschedule(this.onScheduleEvent);\n        } else {\n            this.updateViewTime(this._timeCount);\n        }\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir;\n        this.updateViewTimerDir(); // 换位需要重置色子节点方向\n    }\n\n    /** 操作开始 */\n    onOperationStart(data: Game.IFixBanker) {\n        // 获取出牌时间\n        let timeOut = RoomMgr.getInstance().getTimeOut(GameStatus.PLAY_CARD);\n        let dir = data.bankSeatId - 1;\n        this.onSetClock(dir, timeOut);\n    }\n\n    /** 操作选项 */\n    onOperationSelect(data: Game.IOperation) {\n        // 获取操作时间\n        let timeOut = RoomMgr.getInstance().getTimeOut(GameStatus.OPERATION);\n        let dir = data.seatId - 1\n        this.onSetClock(dir, timeOut);\n    }\n\n    /** 抓牌 */\n    onTakeCard(data: any) {\n        // 获取出牌时间\n        let timeOut = RoomMgr.getInstance().getTimeOut(GameStatus.PLAY_CARD);\n        let dir = data.seatId - 1;\n        this.onSetClock(dir, timeOut);\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n        // 胡牌关闭时间和指示灯\n        this.onSetClock(-1, -1);\n    }\n\n    /** 重连 */\n    onReconnect(data: GameViewConfig.ReconnectConfig) {\n        this.resetView();\n\n        if (Utils.isNull(data.operationSeatId) || data.operationSeatId < 1 || data.operationSeatId > 4) {\n            this.log(\"NodeClockCtr.onReconnect\", \"座位号异常\", data.operationSeatId)\n            return;\n        }\n\n        if (Utils.isNull(data.operationTimePass)) {\n            this.log(\"NodeClockCtr.onReconnect\", \"操作时间异常\", data.operationTimePass)\n            return;\n        }\n\n        // 获取出牌时间\n        let timeOut = data.operationTimePass;\n        let dir = data.operationSeatId - 1;\n        this.onSetClock(dir, timeOut);\n    }\n\n    //销毁\n    onDestroy() {\n    };\n\n    log(...args: any[]) {\n        console.log(args);\n    }\n}\n\n\n"]}