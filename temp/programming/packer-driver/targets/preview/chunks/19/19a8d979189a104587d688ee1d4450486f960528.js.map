{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/Players/CardPlayManeger.ts"],"names":["Node","_decorator","EventManager","BaseComponent","OperationMgr","OperationResultMgr","PlayerMgr","RoomMgr","OPCode","GameEvent","MajiangUtil","CardUtil","MyPlayerCard","ccclass","property","CardPlayManeger","tooltip","type","pengArr","OPE_PENG","OPE_QIANG_PENG","chiArr","OPE_RIGHT_CHI","OPE_MIDDLE_CHI","OPE_LEFT_CHI","onInitModuleEvent","addModelListener","VIEW_BROADCAST_DEAL_CARD","onDealCard","RECEIVE_DEAL_CARD","receiveDealCard","DRAW_MY_CARD","drawMyCard","UPDATE_OPERATION_RESULT","onPlayerOpResult","VIEW_BROADCAST_GAME_OVER","onBroadcastGameOver","myHand","nodeCardView","getComponent","node","active","event","cardsList","getInstance","getDrawCardList","length","drawByte","drawCard","resp","isDealer","cards","addHandCards","playAnimOfShow","getMyhands","isChiInRange","num","onOutCard","dumpMyHands","indexs","getOpIndexs","opCards","removed","playCardFromHandAnim","insertIndex","getIndexByHandCards","opCard","makeSlotAnim","drawCardToSlot","console","log","outCardList","myOpCode","updateMyhands","getMyHandCardResult","updateHandPositionAndName","onPengGangCard","deleteHasInList","stackAnim","getIndexByCards","insertCard","myCards","sortFeiXiaoJiCards","index","onAnGangCard","isGrab","indexOf","removeDrawCard","onBuGangCard","onChiCard","cancelOpcardTouch","filter","item","playerMySelfCard","opCode","OPE_OUT_CARD","updateOpcardTouch","OPE_AN_GANG","OPE_GANG","OPE_BU_GANG","dispatch","UPDATE_USER_OPERATION_RESULT","seatId","mySeatId","resetView"],"mappings":"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","sourcesContent":["\nimport { Node, _decorator } from 'cc';\nimport { EventManager } from '../../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../cache/OperationMgr';\nimport { OperationResultMgr } from '../../cache/OperationResultMgr';\nimport { PlayerMgr } from '../../cache/PlayerMgr';\nimport { RoomMgr } from '../../cache/RoomMgr';\nimport { OPCode } from '../../common/FXJConfig';\nimport { GameEvent } from '../../common/GameEvent';\nimport { Game } from '../../common/idl/Game';\nimport { MajiangUtil } from '../../common/MajiangUtil';\nimport { CardUtil } from '../../util/CardUtil';\nimport { MyPlayerCard } from './MyPlayerCard';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = MyPlayer\n * URL = db://assets/package/game/scripts/MyPlayer.ts\n * Time = Fri Aug 11 2023 11:08:16 GMT+0800 (中国标准时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('CardPlayManeger')\nexport class CardPlayManeger extends BaseComponent {\n\t// 手牌节点\n\t@property({ tooltip: \"手牌节点\", type: Node })\n\tprivate nodeCardView: Node | null = null;\n    \n    private pengArr:number[] = [OPCode.OPE_PENG,OPCode.OPE_QIANG_PENG];\n    private chiArr:number[] = [OPCode.OPE_RIGHT_CHI,OPCode.OPE_MIDDLE_CHI,OPCode.OPE_LEFT_CHI];\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n        this.addModelListener(GameEvent.VIEW_BROADCAST_DEAL_CARD, this.onDealCard);\n        this.addModelListener(GameEvent.RECEIVE_DEAL_CARD, this.receiveDealCard);\n\t\tthis.addModelListener(GameEvent.DRAW_MY_CARD, this.drawMyCard);\n\t\tthis.addModelListener(GameEvent.UPDATE_OPERATION_RESULT, this.onPlayerOpResult);\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GAME_OVER, this.onBroadcastGameOver);\n\t};\n    onBroadcastGameOver(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.node.active = false;\n        // myHand.showdownCard();\n    }\n\n    //自己抓牌\n    drawMyCard(event:null){\n\t\tlet cardsList: number[] = OperationMgr.getInstance().getDrawCardList();\n\t\tif(cardsList.length === 0){\n\t\t\treturn;\n\t\t}\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.drawByte = cardsList[0];\n\t\t//自己抓牌\n\t\tmyHand.drawCard(myHand.drawByte);\n\t}\n    //分牌\n    onDealCard(event, resp:Game.IDealCard) {\n\t\tlet myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        //自己是庄家        \n        let isDealer:boolean = resp.cards.length === 14;\n        myHand.addHandCards(resp.cards,isDealer,null,isDealer);\n        myHand.node.active = true;\n        myHand.playAnimOfShow();\n\t}\n    //重连分牌\n    receiveDealCard(event){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.node.active = true;\n        myHand.addHandCards(PlayerMgr.getInstance().getMyhands(),false,null,false);\n        myHand.playAnimOfShow();\n    }\n\n    isChiInRange(num: number): boolean {\n        return num >= 1001 && num <= 1003;\n    }\n\n    //自己出牌\n    onOutCard() {\n\t\tlet myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        PlayerMgr.getInstance().dumpMyHands();\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        let removed:boolean = myHand.playCardFromHandAnim(indexs[0],indexs.length === 0);\n        if(removed){\n            let insertIndex:number = PlayerMgr.getInstance().getIndexByHandCards(myHand.drawByte,OperationResultMgr.getInstance().opCard);        \n            myHand.makeSlotAnim(insertIndex);\n            myHand.drawCardToSlot();\n        }\n        console.log(\"onOutCard_____________________2\",OperationMgr.getInstance().outCardList);\n        if(this.isChiInRange(OperationMgr.getInstance().myOpCode)){\n            PlayerMgr.getInstance().updateMyhands(OperationMgr.getInstance().outCardList)\n        }else{\n            OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n        }\n        // OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n        // PlayerMgr.getInstance().dumpMyHands();\n        myHand.updateHandPositionAndName();\n        // PlayerMgr.getInstance().dumpMyHands();\n        OperationMgr.getInstance().myOpCode = 0;\n\t}\n    //自己碰杠\n    onPengGangCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        MajiangUtil.deleteHasInList(PlayerMgr.getInstance().getMyhands(),OperationResultMgr.getInstance().opCards);\n        myHand.stackAnim(indexs);\n        // myHand.updateHandPositionAndName();\n    }\n\n    getIndexByCards(insertCard: number): number {\n        let myCards = PlayerMgr.getInstance().getMyhands();\n        let cards = [...myCards];\n        cards = CardUtil.sortFeiXiaoJiCards(cards);\n        for (let index = 0; index < cards.length; index++) {\n            if (cards[index] == insertCard) {\n                // console.log(\"=getIndexByCards=\", cards, insertCard, insertCard.toString(16), index)\n                return index\n            }\n        }\n        return 0;\n    }\n\n    //暗杠\n    onAnGangCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        let isGrab = OperationResultMgr.getInstance().opCards.indexOf(myHand.drawByte) !== -1;\n        if(isGrab){\n            myHand.removeDrawCard();\n            myHand.stackAnim(indexs);\n            OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n        }else{\n            let index = OperationMgr.getInstance().getIndexByCards(myHand.drawByte);\n            OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n            myHand.stackAnim(indexs,myHand.drawByte,index);\n        }\n    }\n    //补杠\n    onBuGangCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.removeDrawCard();\n    }\n\n     //自己吃\n     onChiCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        myHand.cancelOpcardTouch(OperationResultMgr.getInstance().opCard);\n        OperationResultMgr.getInstance().opCards = OperationResultMgr.getInstance().opCards.filter(item => item !== OperationResultMgr.getInstance().opCard);\n        MajiangUtil.deleteHasInList(PlayerMgr.getInstance().getMyhands(),OperationResultMgr.getInstance().opCards);\n        myHand.stackAnim(indexs);\n        // myHand.updateHandPositionAndName();\n    }\n\n    playerMySelfCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        switch (OperationResultMgr.getInstance().opCode) {\n            case OPCode.OPE_OUT_CARD:\n                myHand.updateOpcardTouch();\n                //自己出牌\n                this.onOutCard();\n                break;\n            case OPCode.OPE_PENG:\n                //自己碰\n                this.onPengGangCard();\n                break;\n            case OPCode.OPE_AN_GANG:\n                //自己暗杠\n                this.onAnGangCard();\n                break;\n            case OPCode.OPE_GANG:\n                //自己杠\n                this.onPengGangCard();\n                break;\n            case OPCode.OPE_BU_GANG:\n                //自己补杠\n                this.onBuGangCard();\n                break;\n            case OPCode.OPE_LEFT_CHI:\n                //自己左吃\n                this.onChiCard();\n                break;\n            case OPCode.OPE_MIDDLE_CHI:\n                //自己中吃\n                this.onChiCard();\n                break;\n            case OPCode.OPE_RIGHT_CHI:\n                //自己右吃\n                this.onChiCard();\n                break;\n        }\n    }\n\n    //操作\n\tonPlayerOpResult(event,resp:Game.IOperationResult){\n        EventManager.dispatch(GameEvent.UPDATE_USER_OPERATION_RESULT,resp);\n        //我自己\n        if(OperationResultMgr.getInstance().seatId === RoomMgr.getInstance().mySeatId){\n            this.playerMySelfCard();\n            // console.log(\"减去我自己出的牌操作\",resp);\n            \n            \n        }else{\n            console.log(\"其他玩家操作\",resp);\n        }\n\t}\n    \n    resetView() {\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.resetView();\n\t}\n    \n}\n\n"]}