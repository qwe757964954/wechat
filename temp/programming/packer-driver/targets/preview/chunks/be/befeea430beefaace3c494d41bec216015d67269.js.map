{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/Players/MyPlayerCard.ts"],"names":["animation","Animation","AnimationClip","instantiate","Node","Tween","Vec3","_decorator","GCache","EventManager","Utils","BaseComponent","OperationMgr","PlayerMgr","OPCode","GameEvent","CardUtil","NodeCardCtr","drawCardDisRatio","MjSize","ccclass","property","MyPlayerCard","tooltip","type","selectedNode","_drawCardNode","_mjList","myHandCardY","_slotIndex","_drawByte","_playHandCardCb","_isTouched","_touchNode","moveDistance","thresholdDistance","startPosition","touchNodePos","drawByte","newValue","onInitModuleEvent","onLoad","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","stackAnim","indexList","tByte","insertIndex","cb","pos","length","removeHandCard","getPosition","setPosition","removeDrawCard","addHandCard","pop","getInstance","getLastMyhands","startPosDraw","endPosDraw","x","width","y","z","acDraw","duration","trackDraw","VectorTrack","componentsCount","path","TrackPath","toProperty","drawX","channels","curve","assignSorted","value","animDrawCom","getComponent","addComponent","removeAll","FINISHED","addTrack","defaultClip","play","removeFromParent","console","log","index","insertNode","nodeCardTemplate","cardValue","setCardByte","active","name","addChild","splice","updateHandPositionAndName","drawCard","hiden","cardAddTouchEvent","getLastPosition","filter","item","undefined","i","handNode","getHandCardByIndex","setRotationFromEuler","playAnimOfShow","rotaionEuler","eulerAngles","point","tweenTargetVec3","tw","by","onUpdate","target","ratio","rotate3DAroundByPositionRotaion","start","off","event","playSelectAnim","location","getLocation","getDelta","add","endPos","subtract","Desk","turnMe","byte","onSendCard","playDrawCard","toOutCard","playCardFromHandAnim","rmDraw","isNotNull","updateCard","sort","a","b","removeNode","makeSlotAnim","ac","track","_","mjNode","startPos","getHandPosition","animCom","drawCardToSlot","posx","posy","posz","easingMethod","getListBytes","bytes","node_byte","push","useByteFindIndexs","indexs","forEach","getNodeIndex","findIndex","theNode","addHandCards","valueList","stackCount","hasDrawCard","handCardCount","playUnselectAnim","trackPos","dumpMyHands","getSendCardIndex","getMajiangValue","req","opCard","opCode","OPE_OUT_CARD","opCards","seatId","userId","dispatch","CLOSE_OPRATION_INFO","SEND_PLAYER_OPERATION","resetView","removeAllChildren"],"mappings":"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","sourcesContent":["\nimport { animation, Animation, AnimationClip, EventTouch, instantiate, Node, Tween, Vec3, _decorator } from 'cc';\nimport { GCache } from '../../../../cache/GCache';\nimport { EventManager } from '../../../../framework/manager/EventManager';\nimport { Utils } from '../../../../framework/Utils';\nimport { BaseComponent } from '../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../cache/OperationMgr';\nimport { PlayerMgr } from '../../cache/PlayerMgr';\nimport { OPCode } from '../../common/FXJConfig';\nimport { GameEvent } from '../../common/GameEvent';\nimport { Game } from '../../common/idl/Game';\nimport { CardUtil } from '../../util/CardUtil';\nimport { NodeCardCtr } from '../NodeCardCtr';\nimport { drawCardDisRatio, MjSize } from './CardConfigs';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = MyPlayer\n * URL = db://assets/package/game/scripts/MyPlayer.ts\n * Time = Fri Aug 11 2023 11:08:16 GMT+0800 (中国标准时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('MyPlayerCard')\nexport class MyPlayerCard extends BaseComponent {\n\tpublic selectedNode: Node | null = null;\n\t\n    public _drawCardNode: Node | null = null;\n\n\tpublic\t_mjList:Node[] = [];\n\t\n\tprivate myHandCardY: number = 0;\n\n\t// 手牌模板\n\t@property({ tooltip: \"手牌模板\", type: Node })\n\tprivate nodeCardTemplate: Node | null = null;\n\n\t_slotIndex: number;\n\tprivate _drawByte: number;\n\n\t_playHandCardCb: any;\n\n    private _isTouched: boolean;\n\n    public _touchNode: Node | null = null;\n\n    private moveDistance: number = 0; // 阈值距离，用于判断是否出牌\n    private thresholdDistance: number = 0.5; // 阈值距离，用于判断是否出牌\n    private startPosition = new Vec3(); // 初始点击位置\n    private touchNodePos = new Vec3();\n\tget drawByte(): number {\n\t\treturn this._drawByte;\n\t}\n\n\tset drawByte(newValue: number) {\n\t\tthis._drawByte = newValue;\n\t}\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n    onLoad() {\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        // this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n   \n\t//移除对应的索引的牌去构成stack, 刷新整体node的位置\n\tstackAnim(indexList: number[], tByte?: number, insertIndex?: number, cb?:any) {\n\t\tlet pos = new Vec3();\n\t\tif(indexList.length === 2){\n            this.removeHandCard(indexList);\n\t\t\t//碰牌直接移除两张牌, 刷新位置\n\t\t\tpos = this.node.getPosition();\n\t\t\t// Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n\t\t\tthis.node.setPosition(pos);\n\t\t}else if (indexList.length == 3){\n            this.removeHandCard(indexList);\n\t\t\t//杠牌直接移除三张牌, 刷新位置\n\t\t\tpos = this.node.getPosition();\n            // Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n            this.node.setPosition(pos);\n            return\n\t\t}else if (indexList.length == 4 && insertIndex!==null){\n            insertIndex = insertIndex - indexList.length;\n            this.removeHandCard(indexList);\n\t\t\tthis.removeDrawCard();\n            this.addHandCard(tByte, insertIndex);\n            pos = this.node.getPosition();\n            // Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n            this.node.setPosition(pos);\n            return\n\t\t}\n        /*\n\t\t//吃碰时候移除两张,平移一张到抽牌区 \n        let startPos = pos;\n        let endPos = new Vec3();\n        Vec3.add(endPos, startPos, startPos) \n        \n        let ac = new AnimationClip()\n        ac.duration = 0.1\n        let track = new animation.VectorTrack();\n        track.componentsCount = 3;\n        track.path = new animation.TrackPath().toProperty(\"position\")\n        let [x] = track.channels();\n       \n        x.curve.assignSorted([\n            [0, {value: startPos.x}],\n            [0.1, {value: endPos.x}]\n        ])\n\n        let animCom: Animation;\n\n        if (this.node.getComponent(Animation) == null)\n        {\n            animCom = this.node.addComponent(Animation)\n        }\n        else\n        {\n            animCom = this.node.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        } \n\n        if(cb)\n        {\n            animCom.on(Animation.EventType.FINISHED, cb, this)\n            // this._stackCb = cb\n        }\n\n        ac.addTrack(track)\n        animCom.defaultClip = ac\n        animCom.play(); \n        */\n\n        \n        this._drawCardNode = this._mjList.pop();\n        this.drawByte =  PlayerMgr.getInstance().getLastMyhands();\n        \n        let startPosDraw = this._drawCardNode.getPosition();\n        let endPosDraw = new Vec3(startPosDraw.x + MjSize.width, startPosDraw.y, startPosDraw.z)\n        this._drawCardNode.setPosition(endPosDraw);\n        \n        let acDraw = new AnimationClip()\n        acDraw.duration = 0.1\n        let trackDraw = new animation.VectorTrack();\n        trackDraw.componentsCount = 3;\n        trackDraw.path = new animation.TrackPath().toProperty(\"position\")\n        let [drawX] = trackDraw.channels();\n       \n        drawX.curve.assignSorted([\n            [0, {value: startPosDraw.x}],\n            [0.1, {value: endPosDraw.x}]\n        ])\n        \n        let animDrawCom: Animation;\n\n        if (this._drawCardNode.getComponent(Animation) == null)\n        {\n            animDrawCom = this._drawCardNode.addComponent(Animation)\n        }\n        else\n        {\n            animDrawCom = this._drawCardNode.getComponent(Animation)\n            animDrawCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        if(cb)\n        {  \n            animDrawCom.on(Animation.EventType.FINISHED, cb, this)\n            // this._stackCb = cb\n        }\n\n        acDraw.addTrack(trackDraw)\n        animDrawCom.defaultClip = acDraw\n        animDrawCom.play(); \n        \n\t}\n\n\t//移除一张手牌, 没有动画时的接口, 未来会使用动画接口出牌\n    removeDrawCard() {\n        if (this._drawCardNode) {\n            this._drawCardNode.removeFromParent();\n            this._drawCardNode = null;\n        }\n        else {\n            console.log(\"当前没有渲染牌,无法移除\")\n        }\n    }\n\t//添加一张牌到手牌的指定位置\n\taddHandCard(tByte: number, index: number) {\n\n        if (index > this._mjList.length) {\n            console.log(\"索引大于当前渲染手牌的数量请检查逻辑\", index)\n            return;\n        }\n\n        if (this._mjList.length >= 13) {\n            console.log(\"当前渲染手牌数量已满--> 13\", index)\n            return;\n        } \n\n\t\tlet insertNode = instantiate(this.nodeCardTemplate)\n\t\tlet cardValue = tByte;\n\t\tinsertNode.getComponent(NodeCardCtr).setCardByte(cardValue);\n\t\tinsertNode.active = true;        \n        insertNode.name = \"MJBlock\" + index\n\n        this.node.addChild(insertNode)\n\t\tthis._mjList.splice(index, 0, insertNode); // 在指定索引处插入对象\n\n        this.updateHandPositionAndName()\n    }\n\n\t//抓一张牌\n    drawCard(tByte: number,hiden?:boolean) {\n\t\tthis.drawByte = tByte;\n\t\tthis._drawCardNode = instantiate(this.nodeCardTemplate)\n\t\tthis._drawCardNode.getComponent(NodeCardCtr).setCardByte(tByte);\n\t\tthis._drawCardNode.active = true;\n\t\tthis.node.addChild(this._drawCardNode);\n        this.cardAddTouchEvent(this._drawCardNode);\n\t\tthis._drawCardNode.setPosition(this.getLastPosition() + drawCardDisRatio * MjSize.width, 0, 0)\n\t}\n\n\tupdateHandPositionAndName(hiden?:boolean){\n        this._mjList = this._mjList.filter(item => item !== null && item !== undefined);\n\t\tfor (let i = 0; i < this._mjList.length; i++) {\n            let handNode = this._mjList[i]\n            handNode.name = \"MJBlock\" + i;\n            handNode.getComponent(NodeCardCtr).setCardByte(PlayerMgr.getInstance().getHandCardByIndex(i));\n            this.cardAddTouchEvent(handNode);\n            handNode.setPosition(MjSize.width / 2 + MjSize.width * i, 0, 0);\n            if(hiden){\n                handNode.setRotationFromEuler(90, 0, 0);\n            }\n        }\n\t}\n    \n    playAnimOfShow() {\n        let duration = 0.3;\n        for (let i = 0; i < this._mjList.length; i++) {\n            let rotaionEuler = new Vec3(this._mjList[i].eulerAngles);\n            let pos = new Vec3(this._mjList[i].getPosition());\n            let point = new Vec3(pos.x, 0,\n                0);\n\n            let tweenTargetVec3 = new Vec3(0, 0, 0);\n            let tw = new Tween(tweenTargetVec3)\n                .by(duration, new Vec3(0, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(this._mjList[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .by(duration, new Vec3(-90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(this._mjList[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .start();\n        }\n\n    }\n\n    cardAddTouchEvent(handNode?:Node){\n        handNode.off(Node.EventType.TOUCH_END);\n        handNode.off(Node.EventType.TOUCH_START);\n        handNode.on(Node.EventType.TOUCH_START, (event) => {\n            console.log(\"event______________\")\n            this._touchNode = event.target\n            this.touchNodePos = this._touchNode.getPosition();\n        }, this);\n        handNode.on(Node.EventType.TOUCH_END, (event) => {\n            console.log(\"handNode____________________\");\n            this._touchNode.setPosition(this.touchNodePos);\n            this.playSelectAnim(event.target);\n        }, this);\n    }\n\n    onTouchStart(event: EventTouch) {\n        this._isTouched = true;\n        let location = event.getLocation();\n        this.startPosition = new Vec3(location.x,location.y,0)\n    }\n\n    onTouchMove(event: EventTouch) {\n        this._isTouched = true;\n        if(this._touchNode === null){\n            return;\n        }\n        let pos = this._touchNode.getPosition();\n        let location = event.getDelta();\n        Vec3.add(pos,pos,new Vec3(location.x,location.y,0));\n        this._touchNode.setPosition(pos);\n        let endPos = this._touchNode.getPosition();\n        this.moveDistance = endPos.subtract(this.touchNodePos).length();\n    }\n    onTouchEnd(event: EventTouch) {\n        if (this.moveDistance  > this.thresholdDistance && GCache.Desk.turnMe) {\n            // 出牌\n            console.log('出牌');\n            let byte:number = this._touchNode.getComponent(NodeCardCtr).byte;\n            this.onSendCard(byte);\n        } else {\n            // 放回原处\n            console.log(\"放回原处________\")\n            if(this._touchNode){\n                this._touchNode.setPosition(this.touchNodePos);\n            }\n        }\n        this._touchNode = null;\n        this._isTouched = false;\n        this.moveDistance = 0;\n    }\n\n    //将抓上来的牌打出去\n    playDrawCard( cb?: any){\n        let toOutCard = this._drawCardNode;\n        toOutCard.removeFromParent();\n        this._drawCardNode = null;        \n    }\n\tplayCardFromHandAnim(index: number,rmDraw?:boolean,cb?: any):boolean {\n\t\tthis._slotIndex = index;\n\n        let toOutCard = this._mjList[index]\n        if (Utils.isNotNull(toOutCard) && rmDraw === false){\n            this._mjList[index] = null\n            toOutCard.removeFromParent();\n            return true;\n        }else if(Utils.isNotNull(this._drawCardNode) || rmDraw === true){\n            this._drawCardNode.removeFromParent();\n            this._drawCardNode = null;   \n            return false;\n        }\n\t}\n\t\n\t//从手牌移除指定位置的一张或者多张牌，并且出牌之后，如果抓牌未移除，需要把抓的牌放到手牌中，抓牌为空\n    removeHandCard(indexList: number[], updateCard: boolean = false) {\n\t\tindexList.sort((a, b) => b - a)\n\t\t\n\t\tfor (let index of indexList) { \n            if (index < this._mjList.length) {  \n                let removeNode = this._mjList.splice(index, 1);\n                removeNode[0].removeFromParent();\n            } \n            else {\n                console.log(\"索引大于等于当前渲染手牌的数量请检查逻辑\", index)\n                return;\n            }\n        }   \n\n        if (updateCard)\n        {\n            this.updateHandPositionAndName()\n        }\n\n\t}\n\n\tmakeSlotAnim(index: number)\n    {\n        if (this._slotIndex == -1 || this._mjList[this._slotIndex] != null)\n        {\n            console.log(\"当前没有空的手牌位置,无法空出对应的索引位置\", this._slotIndex, index)\n\n            return;\n        }\n\n        if (this._slotIndex < index) // 2空  4\n        {\n\t\t\tfor (let i = this._slotIndex + 1; i <= index; i++)\n            {\n                let ac = new AnimationClip()\n                ac.duration = 0.2\n                let track = new animation.VectorTrack();\n                track.componentsCount = 3;\n                track.path = new animation.TrackPath().toProperty(\"position\")\n                let [x, _, z] = track.channels();\n                let mjNode = this._mjList[i];\n                let startPos = mjNode.getPosition() ;\n                let endPos = this.getHandPosition(i - 1);\n                \n                x.curve.assignSorted([\n                    [0, {value: startPos.x}],\n                    [0.2, {value: endPos.x}]\n                ])\n\n                z.curve.assignSorted([\n                    [0, {value: startPos.z}],\n                    [0.2, {value: endPos.z}]\n                ])\n\n                let animCom = mjNode.addComponent(Animation)\n                ac.addTrack(track)\n                animCom.defaultClip = ac\n                animCom.play(); \n            }\n\n            for (let i = this._slotIndex; i < index; i++)\n            {\n                this._mjList[i] = this._mjList[i + 1] // 同步平移在列表内的位置\n            }\n        }\n        else if(index < this._slotIndex) // 2  4空\n        {\n\n\t\t\tfor (let i = index; i < this._slotIndex; i++)\n            {\n                let ac = new AnimationClip() \n                ac.duration = 0.2\n                let track = new animation.VectorTrack();\n                track.componentsCount = 3;\n                track.path = new animation.TrackPath().toProperty(\"position\")\n                let [x, _, z] = track.channels();\n                let mjNode = this._mjList[i];\n                let startPos = mjNode.getPosition() ;\n                let endPos = this.getHandPosition(i + 1);\n\n                x.curve.assignSorted([\n                    [0, {value: startPos.x}], \n                    [0.2, {value: endPos.x}]\n                ])\n\n                z.curve.assignSorted([\n                    [0, {value: startPos.z}],\n                    [0.2, {value: endPos.z}]\n                ])\n\n                let animCom = mjNode.addComponent(Animation)\n                ac.addTrack(track)\n                animCom.defaultClip = ac\n                animCom.play(); \n            }\n\n            for (let i = this._slotIndex; i > index; i--)\n            {\n                this._mjList[i] = this._mjList[i - 1] // 同步平移在列表内的位置\n            }\n        }  \n        this._mjList[index] = null //平移后空出来的列表位置\n        this._slotIndex = index\n    }\n\n\t\n\tdrawCardToSlot(cb?: any){\n\t\tif (this._drawCardNode == null)\n        {\n            console.log(\"没有渲染抽牌节点, 抽牌到手牌动画失败\")\n            return;\n        }\n\n\t\tthis._mjList[this._slotIndex] = this._drawCardNode\n        this._drawCardNode = null\n        let startPos = this._mjList[this._slotIndex].getPosition()\n        let endPos = this.getHandPosition(this._slotIndex)\n\n        const ac = new AnimationClip();  \n\n        ac.duration = 0.5\n        \n        const track = new animation.VectorTrack();\n        track.componentsCount = 3;\n        track.path = new animation.TrackPath().toProperty(\"position\")\n        const [posx, posy, posz] = (track as animation.VectorTrack).channels();\n        posx.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.x}], \n            [0.1, {easingMethod : 2, value: startPos.x}], \n            [0.4, {easingMethod : 2, value: endPos.x}],\n            [0.5, {easingMethod : 2, value: endPos.x}]\n        ]);\n        posy.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y + 20}], \n            [0.4, {easingMethod : 2, value: startPos.y + 20}], \n            [0.5, {easingMethod : 2, value: endPos.y}]\n        ]);\n        posz.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.z}], \n            [0.1, {easingMethod : 2, value: startPos.z - 3.5}], \n            [0.4,{easingMethod : 2, value:  startPos.z - 3.5}],\n            [0.5,{easingMethod : 2, value:  endPos.z}]\n        ]);\n\n        let animCom: Animation;\n\n        if (this._mjList[this._slotIndex].getComponent(Animation) == null)\n        {\n            animCom = this._mjList[this._slotIndex].addComponent(Animation)\n        }\n        else\n        {\n            animCom = this._mjList[this._slotIndex].getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        if(cb)\n        {\n            animCom.on(Animation.EventType.FINISHED, cb, this)\n            this._playHandCardCb = cb\n        }\n\n        ac.addTrack(track)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t\t\n\t}\n\n\n\tgetListBytes():number[]{\n\t\tlet bytes:number[] = [];\n\t\tfor (let i = 0; i < this._mjList.length; i++) {\n\t\t\tlet node_byte: number = this._mjList[i].getComponent(NodeCardCtr).byte;\n\t\t\tbytes.push(node_byte);\n\t\t}\n\t\treturn bytes;\n\t}\n\n\tuseByteFindIndexs(bytes:number[]):number[]{\n\t\tlet indexs:number[] = [];\n\n\t\tbytes.forEach((byte) => {\n\t\t\tfor (let i = 0; i < this._mjList.length; i++) {\n\t\t\t\tlet node_byte: number = this._mjList[i].getComponent(NodeCardCtr).byte;\n\t\t\t\tif(byte === node_byte){\n\t\t\t\t\tindexs.push(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn indexs;\n\t}\n\n\tgetNodeIndex(node: Node)\n    {\n        return this._mjList.findIndex(theNode => theNode == node, this);\n    }\n\n\taddHandCards(valueList: number[], active: boolean, stackCount?: number, hasDrawCard: boolean = false)\n    {\n\t\tlet handCardCount =  valueList.length;\n        \n        if (hasDrawCard)\n        {\n            handCardCount = valueList.length - 1\n        }\n\n\t\tfor (let i = 0; i < handCardCount; i++)\n        { \n\t\t\tlet mjNode = instantiate(this.nodeCardTemplate)\n\t\t\tlet cardValue = valueList[i]\n\t\t\tmjNode.getComponent(NodeCardCtr).setCardByte(cardValue);\n\t\t\tmjNode.active = true;\n\t\t\tthis._mjList.push(mjNode);\n\t\t\tthis.node.addChild(mjNode);\n\t\t}\n\t\tthis.updateHandPositionAndName(true);\n\t\tif (hasDrawCard)\n        {\n            this.drawCard(valueList[handCardCount])\n            this._drawCardNode.active = active\n        }\n\n\t}\n\n\tgetHandPosition(index: number){\n\t\treturn new Vec3(MjSize.width / 2 + MjSize.width * index, 0, 0)\n\t}\n\n\t\n    getLastPosition():number{\n\t\treturn MjSize.width / 2 + MjSize.width * (this._mjList.length - 1);\n\t}\n\n\tplaySelectAnim(node: Node){\n\t\tif(this.selectedNode){\n\t\t\tthis.playUnselectAnim(this.selectedNode);\n\t\t\tif(this.selectedNode == node){\n\t\t\t\tthis.selectedNode = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedNode = node\n        let startPos = this.selectedNode.getPosition()\n        \n        const ac = new AnimationClip();  \n\n        ac.duration = 0.1\n\n        const trackPos = new animation.VectorTrack();\n        trackPos.componentsCount = 3;\n        trackPos.path = new animation.TrackPath().toProperty(\"position\")\n        const [x, y, z] = (trackPos as animation.VectorTrack).channels();\n        x.curve.assignSorted([\n            [0, {easingMethod : 2, value: this.touchNodePos.x}], \n            [0.1, {easingMethod : 2, value: this.touchNodePos.x}]\n        ]);\n        y.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y + 20}]\n        ]);\n        // z.curve.assignSorted([\n        //     [0, {easingMethod : 2, value: startPos.z}], \n        //     [0.1,{easingMethod : 2, value:  startPos.z - 0.8}]\n        // ]);\n\n        let animCom: Animation;\n\n        if (this.selectedNode.getComponent(Animation) == null)\n        {\n            animCom = this.selectedNode.addComponent(Animation)\n        }\n        else\n        {\n            animCom = this.selectedNode.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n            if(GCache.Desk.turnMe){\n\t\t\t\tlet byte:number = this.selectedNode.getComponent(NodeCardCtr).byte;\n\t\t\t\tthis.onSendCard(byte);\n\t\t\t}\n        }\n\n        ac.addTrack(trackPos)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t}\n\tplayUnselectAnim(node: Node){\n        let startPos = this.selectedNode.getPosition()\n\t\tconst ac = new AnimationClip();  \n\n        ac.duration = 0.1 \n \n        const trackPos = new animation.VectorTrack();\n        trackPos.componentsCount = 3;\n        trackPos.path = new animation.TrackPath().toProperty(\"position\")\n        const [x, y, z] = (trackPos as animation.VectorTrack).channels();\n        x.curve.assignSorted([\n            [0, {easingMethod : 2, value: this.touchNodePos.x}], \n            [0.1, {easingMethod : 2, value: this.touchNodePos.x}]\n        ]);\n        y.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: 0}]\n        ]);\n        // z.curve.assignSorted([ \n        //     [0, {easingMethod : 2, value: startPos.z}], \n        //     [0.1,{easingMethod : 2, value:  startPos.z + 0.8}]\n        // ]); \n\n        let animCom: Animation;\n\n        if (node.getComponent(Animation) == null)\n        {\n            animCom = node.addComponent(Animation)\n        }\n        else\n        {\n            animCom = node.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        ac.addTrack(trackPos)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t}\n\n\t//出牌\n\tonSendCard(byte:number){\n        PlayerMgr.getInstance().dumpMyHands();\n\t\tlet index:number = OperationMgr.getInstance().getSendCardIndex(byte);\n        console.log(\"onSendCard______\",index,byte,CardUtil.getMajiangValue(byte));\n        let req: Game.ISendOperation = {\n            opCard:byte,\n\t\t\topCode:OPCode.OPE_OUT_CARD,\n\t\t\topCards:[byte],\n\t\t\tseatId:OperationMgr.getInstance().seatId,\n\t\t\tuserId:OperationMgr.getInstance().userId\n            \n        }\n        EventManager.dispatch(GameEvent.CLOSE_OPRATION_INFO);\n        EventManager.dispatch(GameEvent.SEND_PLAYER_OPERATION, req);\n\t}\n\n\t//游戏开始或结束，清空手牌区，包括抓牌，保持初始状态\n    resetView() {\n        this.node.removeAllChildren();\n        this._mjList = [];\n        this._drawCardNode = null;\n        // this.initNodePos();\n    }\n}\n\n"]}