{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/vc/BaseController.ts"],"names":["BaseControll","sys","Logger","EventManager","SchedulerManager","Utils","constructor","name","_className","_Eventlistener","_schedulerHandler","_schedulerHandlerOnce","print","args","logModel","dump","arg1","args2","platform","Platform","DESKTOP_BROWSER","console","table","onInitModuleEvent","addSchedulerOnce","time","callback","onSchedulerUpdate","content","handler","schedulerTimeout","dt","call","stopSchedulerOnce","unscheduleTimeout","addScheduler","schedulerInterval","_handler","stopScheduler","unscheduleInterval","stopAllScheduler","Object","prototype","hasOwnProperty","Number","addModelListener","removeModelListener","addListener","removeListener","removeAllModelListener","event","clear"],"mappings":"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","sourcesContent":["/**\n * Name = BaseControll\n * URL = db://assets/framework/vc/BaseControll.ts\n * Time = Mon Apr 18 2022 10:23:29 GMT+0800 (中国标准时间)\n * Author = xueya\n *\n */\n\nimport { sys } from \"cc\";\nimport { Logger } from \"../log/Logger\";\nimport { EventManager } from \"../manager/EventManager\";\nimport { SchedulerManager } from \"../manager/SchedulerManager\";\nimport { Utils } from \"../Utils\";\n\n\nexport class BaseControll {\n\tprotected _className = \"BaseControll\";\n\n\tprotected _Eventlistener = {};\n\tprotected _schedulerHandler = {};\n\tprotected _schedulerHandlerOnce = {};\n\t//实例化\n\tconstructor(name: string) {\n\t\tthis._className = name;\n\t\tLogger.logModel(5, `${this._className}初始化...`)\n\t\tthis.onInitModuleEvent()\n\t};\n\n\t/**\n\t * 添加一个延时\n\t * @param time 时间 单位:秒\n\t * @param callback 更新函数(默认为:onSchedulerUpdate) \n\t * @param return 定时器句柄number\n\t */\n\tpublic addSchedulerOnce(time: number = 0, callback: Function = this.onSchedulerUpdate): number {\n\t\tconst content = this\n\t\tlet handler = SchedulerManager.schedulerTimeout((dt: number) => {\n\t\t\tcallback.call(content, dt, handler);\n\t\t\tcontent.stopSchedulerOnce(handler);\n\t\t}, time)\n\t\tthis._schedulerHandlerOnce[handler] = true;\n\t\treturn handler\n\t}\n\t/** 停止延时定时器 */\n\tpublic stopSchedulerOnce(handler: number) {\n\t\tSchedulerManager.unscheduleTimeout(handler);\n\t\tif (handler != null && this._schedulerHandlerOnce[handler] == true) {\n\t\t\tthis._schedulerHandlerOnce[handler] = null;\n\t\t}\n\t}\n\n\t/**\n\t * 添加一个定时器\n\t * @param time 时间 单位:秒\n\t * @param callback 更新函数(默认为:onSchedulerUpdate) \n\t * @param return 定时器句柄number\n\t */\n\tpublic addScheduler(time: number = 0, callback: Function = this.onSchedulerUpdate): number {\n\t\tconst content = this\n\t\tlet handler = SchedulerManager.schedulerInterval((dt: number, _handler) => {\n\t\t\tcallback.call(content, dt, handler);\n\t\t}, time)\n\t\tthis._schedulerHandler[handler] = true;\n\t\treturn handler\n\t}\n\t/** 停止定时器 */\n\tpublic stopScheduler(handler: number) {\n\t\tSchedulerManager.unscheduleInterval(handler);\n\t\tif (handler != null && this._schedulerHandler[handler] == true) {\n\t\t\tthis._schedulerHandler[handler] = null;\n\t\t}\n\t}\n\t/** 停止所有定时器 */\n\tpublic stopAllScheduler() {\n\t\tfor (let handler in this._schedulerHandler) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this._schedulerHandler, handler)) {\n\t\t\t\tthis.stopScheduler(Number(handler));\n\t\t\t}\n\t\t}\n\t\tfor (let handler in this._schedulerHandlerOnce) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this._schedulerHandlerOnce, handler)) {\n\t\t\t\tthis.stopSchedulerOnce(Number(handler));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**override 定时器的回调更新，子类需重写该方法 */\n\tprotected onSchedulerUpdate(dt?: number) {\n\n\t}\n\t/**override 初始化模块事件，子类需重写该方法 */\n\tprotected onInitModuleEvent() {\n\n\t}\n\t/**\n\t * 添加事件绑定\n\t * @param name 事件名称\n\t * @param callback 回调函数\n\t */\n\tpublic addModelListener(name: string, callback: Function) {\n\t\tthis.removeModelListener(name);\n\t\tthis._Eventlistener[name] = name\n\t\tEventManager.addListener(name, callback, this)\n\t}\n\n\t/**\n\t * 移除事件\n\t * @param name \n\t */\n\tpublic removeModelListener(name: string) {\n\t\tif (this._Eventlistener[name]) {\n\t\t\tEventManager.removeListener(name, this)\n\t\t\tthis._Eventlistener[name] = null;\n\t\t}\n\n\t}\n\t/**\n\t * 移除所有事件\n\t * @param name \n\t */\n\tpublic removeAllModelListener() {\n\t\tfor (const event in this._Eventlistener) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this._Eventlistener, event)) {\n\t\t\t\tthis.removeModelListener(event)\n\t\t\t}\n\t\t}\n\t\tthis._Eventlistener = {}\n\t}\n\t/**清理所有 */\n\tpublic clear() {\n\t\tthis.stopAllScheduler()\n\t\tthis.removeAllModelListener()\n\t}\n\n\t//当前类日志输出\n\tprotected print = function (...args: any[]) {\n\t\tLogger.logModel(5, ...args);\n\t}\n\t//当前类日志输出\n\tpublic dump = function (arg1, args2 = null) {\n\t\tif (!args2) {\n\t\t\targs2 = \"打印输出 :\"\n\t\t}\n\t\tLogger.logModel(5, args2);\n\n\t\tif (sys.platform == sys.Platform.DESKTOP_BROWSER) {\n\t\t\tconsole.table(arg1);\n\t\t} else {\n\t\t\tUtils.dump(arg1);\n\t\t}\n\t}\n\n}\n\n"]}