{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/servers/ShareServers.ts"],"names":["ShareServers","GCache","AppEvent","ClientInfo","GameConfig","GConstants","UIID","Encrypt","Md5","EventManager","HttpRequest","Utils","BaseControll","getInstance","_instance","constructor","name","init","clear","onInitModuleEvent","addModelListener","NET_REQ_SHARE_CONFIG","reqShareConfig","NET_RESP_SHARE_CONFIG","respShareConfig","NET_REQ_SHARE_AWARD","reqShareAward","NET_RESP_SHARE_AWARD","respShareAward","NET_REQ_ADS_AWARD","reqADSAWard","NET_RESP_ADS_AWARD","respADSAWard","event","http","data","action","ReqUrl","shopShareUrl","ssid","User","getDataUser","appid","PlatFormAppID","post","instance","AppUrlConf","Web","JSON","stringify","receiveData","_resultData","nullToDefault","JsonDecode","result","ShareInfo","updateConfig","isSuccess","table_isEmpty","respData","reqData","print","shareID","type","isShop","console","log","_md5","getUserMid","shareCBUrl","mid","mark","table_verify","dispatch","toastData","SYS_TOAST_TIP","content","reward","VIEW_UI_OPEN","GongXiHuoDePrefab","forEach","item","_type","Number","res","table_keyof","PropertyType","count","curentRich","getUserMoneyByID","updateUserMoneyByID","NET_CMD_REQ_USER_BACKPACK","ShopInfo","onUpdateGoods","goods_id","shareSuccessTimeAdd"],"mappings":"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","sourcesContent":["/**\n * Name = ShareServers\n * URL = db://assets/proj/servers/ShareServers.ts\n * Time = Wed 2022 09.28 19:03:18 GMT+0800 (中国标准时间)\n * Author = xueya\n * 分享相关服务\n */\n\nimport { GCache } from \"../../cache/GCache\";\nimport { AppEvent } from \"../../config/AppEvent\";\nimport { ClientInfo, GameConfig } from \"../../config/GameConfig\";\nimport { GConstants } from \"../../config/GameConstant\";\nimport { UIID } from \"../../config/UIConfig\";\nimport { Encrypt } from \"../../framework/crypto/Encrypto\";\nimport { Md5 } from \"../../framework/crypto/Md5\";\nimport { EventManager } from \"../../framework/manager/EventManager\";\nimport { HttpRequest } from \"../../framework/network/HttpRequest\";\nimport { Utils } from \"../../framework/Utils\";\nimport { BaseControll } from \"../../framework/vc/BaseController\";\n\nexport class ShareServers extends BaseControll {\n    private static _instance = null;\n    public static getInstance(): ShareServers {\n        if (!this._instance || this._instance == null) {\n            this._instance = new ShareServers(\"ShareServers\");\n        }\n        return this._instance;\n    }\n    //实例化\n    constructor(name: string) {\n        super(name)\n    };\n    public static init(): ShareServers {\n        if (this._instance) {\n            this._instance.clear()\n        }\n        this._instance = null\n        ShareServers.getInstance();\n        return\n    }\n\n    /**初始化添加事件绑定 */\n    protected onInitModuleEvent(): void {\n        /** 请求获取分享配置 */\n        this.addModelListener(AppEvent.NET_REQ_SHARE_CONFIG, this.reqShareConfig);\n        /** 请求获取分享配置返回 */\n        this.addModelListener(AppEvent.NET_RESP_SHARE_CONFIG, this.respShareConfig);\n        /** 请求分享领奖 */\n        this.addModelListener(AppEvent.NET_REQ_SHARE_AWARD, this.reqShareAward);\n        /** 请求分享领奖返回 */\n        this.addModelListener(AppEvent.NET_RESP_SHARE_AWARD, this.respShareAward)\n        //请求看视频发奖\n        this.addModelListener(AppEvent.NET_REQ_ADS_AWARD, this.reqADSAWard)\n        /** 请求看视频领奖返回 */\n        this.addModelListener(AppEvent.NET_RESP_ADS_AWARD, this.respADSAWard);\n    }\n    /** 请求获取所有分享配置 */\n    reqShareConfig(event = null) {\n        let http = new HttpRequest();\n        let data = {\n            action: GConstants.ReqUrl.shopShareUrl,\n            ssid: GCache.User.getDataUser(\"ssid\", \"\"),\n            appid: ClientInfo.PlatFormAppID,\n        }\n        http.post(GameConfig.instance.AppUrlConf.Web, JSON.stringify(data), (receiveData) => {\n            let _resultData = Utils.nullToDefault(Encrypt.JsonDecode(receiveData), { result: {} });\n            //更新数据之后通知数据返回\n            GCache.ShareInfo.updateConfig(_resultData.result);\n            let isSuccess = !Utils.table_isEmpty(_resultData)\n        })\n    }\n    /** 请求分享配置返回 */\n    respShareConfig(event, isSuccess, respData, reqData) {\n        this.print(\"请求分享配置返回\", isSuccess, respData)\n    }\n    /**\n     * 请求分享领奖\n     * @param event  \n     * @param isShop //是否未商城分享\n     * @param shareID \n     * @param type 分享类型类型 1-商城视频，商城分享 2-其他分享\n     */\n    reqShareAward(event, shareID, type, isShop: boolean = false) {\n        console.log('执行请求分享领奖')\n        if (shareID == null) {\n            return;\n        }\n        let http = new HttpRequest();\n        let _md5 = '123!@#*&908byaa' + type + shareID + ClientInfo.PlatFormAppID + GCache.User.getUserMid()\n        let data = {\n            action: GConstants.ReqUrl.shareCBUrl,\n            appid: ClientInfo.PlatFormAppID,\n            mid: GCache.User.getUserMid(),\n            ssid: GCache.User.getDataUser(\"ssid\", \"\"),\n            type: type,\n            mark: Md5(_md5),\n        }\n        if (isShop) {\n            data[\"goods_id\"] = shareID;\n        } else {\n            data[\"share_id\"] = shareID;\n        }\n        http.post(GameConfig.instance.AppUrlConf.Web, JSON.stringify(data), (receiveData) => {\n            let _resultData = Encrypt.JsonDecode(receiveData)//JSON.parse(receiveData || '{result:{}}')\n            _resultData = Utils.table_verify(_resultData);\n            let isSuccess = (!Utils.table_isEmpty(_resultData.result));\n            console.log('请求分享领奖返回值', receiveData, isSuccess, _resultData)\n            EventManager.dispatch(AppEvent.NET_RESP_SHARE_AWARD, isSuccess, _resultData, data);\n        })\n\n    }\n    /** 请求分享领奖返回 */\n    respShareAward(event, isSuccess, respData, reqData) {\n        if (isSuccess == false) {\n            let toastData = respData['error'] ? respData['error'] : '分享失败请联系客服'\n            this.print('请求分享失败', isSuccess, toastData)\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: toastData });\n            return;\n        }\n        respData.result = Utils.table_verify(respData.result);\n        respData.result.reward = Utils.table_verify(respData.result.reward, true);\n        this.print('请求分享成功返回', reqData, respData.result)\n        // 打开获得成功页面\n        EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.GongXiHuoDePrefab, respData.result.reward)\n        //更新资产 PropertyType\n        respData['result']['reward'].forEach(item => {\n            let _type = Number(item['type'])\n            let res = Utils.table_keyof(GConstants.PropertyType, _type)\n            let count = 0\n            if (res != null) {\n                let curentRich = GCache.User.getUserMoneyByID(_type)\n                GCache.User.updateUserMoneyByID(_type, curentRich + Number(item[\"num\"]))\n            } else {\n                count = count + 1;\n            }\n            if (count > 0) {\n                EventManager.dispatch(AppEvent.NET_CMD_REQ_USER_BACKPACK);\n            }\n        })\n\n        //分享成功后根据id去查找商品(期望服务端能返回当前类别和gid)\n        GCache.ShopInfo.onUpdateGoods(reqData.goods_id, respData.result);\n        //分享成功之后开始计时\n        GCache.ShareInfo.shareSuccessTimeAdd(reqData['goods_id'])\n    }\n    /** 请求看视频领奖 */\n    reqADSAWard(event, shareID, type, isShop: boolean = false) {\n        if (shareID == null) {\n            return;\n        }\n        let http = new HttpRequest();\n        let _md5 = '123!@#*&908byaa' + type + shareID + ClientInfo.PlatFormAppID + GCache.User.getUserMid()\n        let data = {\n            action: GConstants.ReqUrl.shareCBUrl,\n            appid: ClientInfo.PlatFormAppID,\n            mid: GCache.User.getUserMid(),\n            ssid: GCache.User.getDataUser(\"ssid\", \"\"),\n            type: type,\n            mark: Md5(_md5),\n        }\n        if (isShop) {\n            data[\"goods_id\"] = shareID;\n        } else {\n            data[\"share_id\"] = shareID;\n        }\n        http.post(GameConfig.instance.AppUrlConf.Web, JSON.stringify(data), (receiveData) => {\n            let _resultData = Encrypt.JsonDecode(receiveData)//JSON.parse(receiveData || '{result:{}}')\n            _resultData = Utils.table_verify(_resultData);\n            console.log('请求看视频http', _resultData)\n            let isSuccess = (Utils.table_isEmpty(_resultData.result) != true);\n            EventManager.dispatch(AppEvent.NET_RESP_ADS_AWARD, isSuccess, _resultData, data);\n\n        })\n    }\n    /** 请求看视频领奖返回 */\n    respADSAWard(event, isSuccess, respData, reqData) {\n        console.log('请求看视频数据返回', isSuccess, respData, reqData)\n        if (isSuccess == false) {\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: \"请勿频繁点击\" });\n            return;\n        }\n        // 打开获得成功页面\n        EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.GongXiHuoDePrefab, respData.result.reward)\n        //更新资产 PropertyType\n        respData['result']['reward'].forEach(item => {\n            let _type = Number(item['type'])\n            let res = Utils.table_keyof(GConstants.PropertyType, _type)\n            let count = 0\n            if (res != null) {\n                let curentRich = GCache.User.getUserMoneyByID(_type)\n                GCache.User.updateUserMoneyByID(_type, curentRich + Number(item[\"num\"]))\n            } else {\n                count = count + 1;\n            }\n            if (count > 0) {\n                EventManager.dispatch(AppEvent.NET_CMD_REQ_USER_BACKPACK);\n            }\n        })\n        GCache.ShopInfo.onUpdateGoods(reqData.goods_id, respData.result);\n    }\n\n\n}"]}