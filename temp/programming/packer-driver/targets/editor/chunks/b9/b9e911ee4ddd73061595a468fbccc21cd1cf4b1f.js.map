{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/extend/testFileIO.ts"],"names":["_decorator","ccclass","property","openLocalFile","accept","callback","inputEl","document","getElementById","createElement","id","setAttribute","style","opacity","position","body","appendChild","onchange","event","files","length","file","click","READ_FILE_TYPE","readLocalFile","readType","reader","FileReader","onload","readyState","DONE","result","DATA_URL","readAsDataURL","TEXT","readAsText","BINARY","readAsBinaryString","ARRAYBUFFER","readAsArrayBuffer","testFileIO"],"mappings":"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","sourcesContent":["\nimport { _decorator } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = testFileIO\n * DateTime = Wed May 11 2022 17:56:51 GMT+0800 (中国标准时间)\n * Author = xueya\n * FileBasename = testFileIO.ts\n * FileBasenameNoExtension = testFileIO\n * URL = db://assets/scripts/testFileIO.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\n *\n */\n\nexport module testFileIO {\n\n    // TS\n    // 使用input调起文件选择窗口\n    export function openLocalFile(accept: string, callback: (file: File) => void) {\n        let inputEl: HTMLInputElement = <HTMLInputElement>document.getElementById('file_input');\n        if (!inputEl) {\n            // console.log('xxxxxx createElement input');\n            inputEl = document.createElement('input');\n            inputEl.id = 'file_input';\n            inputEl.setAttribute('id', 'file_input');\n            inputEl.setAttribute('type', 'file');\n            inputEl.setAttribute('class', 'fileToUpload');\n            inputEl.style.opacity = '0';\n            inputEl.style.position = 'absolute';\n            inputEl.setAttribute('left', '-999px');\n            document.body.appendChild(inputEl);\n        }\n\n        accept = accept || \".*\";\n        inputEl.setAttribute('accept', accept);\n\n        // inputEl.addEventListener('change', (event) => {\n        //     console.log('xxx onchange1', event, inputEl.value);\n        // });\n        inputEl.onchange = (event) => {\n            // console.log('xxx onchange2', event, inputEl.files);\n            let files = inputEl.files\n            if (files && files.length > 0) {\n                var file = files[0];\n                if (callback) callback(file);\n            }\n        }\n        inputEl.click();\n    }\n\n    // 读取文件方式\n    export enum READ_FILE_TYPE {\n        DATA_URL,// readAsDataURL, base64\n        TEXT,// readAsText\n        BINARY,// readAsBinaryString\n        ARRAYBUFFER,// readAsArrayBuffer\n    }\n    // 读取本地文件数据\n    export function readLocalFile(file: File, readType: READ_FILE_TYPE, callback: (result: string | ArrayBuffer) => void) {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n            if (callback) {\n                if (reader.readyState == FileReader.DONE) {\n                    // console.log('xxx FileReader', event, reader.result);\n                    callback(reader.result);\n                } else {\n                    callback(null);\n                }\n            }\n        };\n        switch (readType) {\n            case READ_FILE_TYPE.DATA_URL:\n                reader.readAsDataURL(file);\n                break;\n            case READ_FILE_TYPE.TEXT:\n                reader.readAsText(file);   //作为字符串读出\n                //reader.readAsText(file,'gb2312');   //默认是用utf-8格式输出的，想指定输出格式就再添加一个参数，像txt的ANSI格式只能用国标才能显示出来\n                break;\n            case READ_FILE_TYPE.BINARY:\n                reader.readAsBinaryString(file);\n                break;\n            case READ_FILE_TYPE.ARRAYBUFFER:\n                reader.readAsArrayBuffer(file);\n                break;\n        }\n    }\n\n\n    // base64生成Texture2D\n    // export function base64ToTexture2D(base64: string, callback: (this: void, texture: Texture2D) => void) {\n    //     if (base64) {\n    //         var img = new Image();\n    //         img.onload = function () {\n    //             var texture = new Texture2D();\n    //             texture.initWithElement(img);\n    //             texture.handleLoadedTexture();\n    //             if (callback) callback(texture);\n    //         }\n    //         img.onerror = function (err) {\n    //         }\n    //         if ((<any>base64).startsWith !== undefined && (<any>base64).startsWith(\"data:image\")) {\n    //             img.src = base64;\n    //         } else {\n    //             img.src = \"data:image/png;base64,\" + base64;\n    //         }\n    //     } else {\n    //         if (callback) callback(null);\n    //     }\n    // }\n\n    // // base64生成cc.SpriteFrame\n    // export function base64ToSpriteFrame(base64: string, callback: (this: void, spriteFrame: SpriteFrame) => void) {\n    //     base64ToTexture2D(base64, (texture: Texture2D) => {\n    //             if (texture) {\n    //                 var newframe = new SpriteFrame(texture);\n    //                 if (callback) callback(newframe);\n    //             } else {\n    //                 if (callback) callback(null);\n    //             }\n    //         });\n    // }\n\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}