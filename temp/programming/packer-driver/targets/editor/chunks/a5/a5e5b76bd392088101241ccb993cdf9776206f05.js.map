{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeHuCardCtr.ts"],"names":["_decorator","instantiate","Node","tween","BaseComponent","RoomMgr","GameRuleConfig","GameViewConfig","CardUtil","NodeCardCtr","ccclass","property","NodeHuCardCtr","tooltip","type","_hostDir","_seatList","onInitModuleEvent","onLoad","initData","initView","start","Array","dir","length","node","addChild","setRotationFromEuler","updateView","resetView","getInstance","mySeatId","onGameStart","OnChangedSeat","hostDir","onHu","data","seatId","card","opCard","showHuCard","cardNumber","isReconnect","children","CardHuNum","console","log","who","calculatePlayerPosition","delay","call","pushCardB","pushCardA","row","Math","floor","col","distance","CardConfig","CenterToHuCard","nodeCard","x","CenterToHuCardX","Width","SpaceHuCard","y","GroundToCard","Thickness","setPosition","active","getComponent","setCardByte","showHuAnim","Height","cardNode","getWho","dirOut","a","b","onGameOver","onReconnect","onDestroy","args","name"],"mappings":"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","sourcesContent":["\nimport { _decorator, instantiate, Node, tween } from 'cc';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { GameRuleConfig } from '../common/GameRuleConfig';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { CardUtil } from '../util/CardUtil';\nimport { NodeCardCtr } from './NodeCardCtr';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeHuCardCtr\n * URL = db://assets/package/game/scripts/NodeHuCardCtr.ts\n * Time = Tue Aug 15 2023 18:54:40 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('NodeHuCardCtr')\nexport class NodeHuCardCtr extends BaseComponent {\n\t/** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n    /** 麻将位置列表 */\n    private _seatList: Node[] = null;\n    \n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n\t\n\tonLoad () {\n        this.initData()\n        this.initView()\n\t};\n\n\n\tstart () {\n\n\t};\n\n    initData() {\n        \n    }\n\t\n\tinitView () {\n        this._seatList = new Array(4);\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let node = new Node();\n            this.node.addChild(node);\n            node.setRotationFromEuler(0, 90*dir, 0);\n            this._seatList[dir] = node;\n        }\n\t};\n\t\n\tupdateView () {\n\n\t};\n\t\n\tresetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir;\n    }\n\n    /** 胡牌 */\n    onHu(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n        let card = data.opCard;\n        this.showHuCard(dir, card, false);\n    }\n\n    private showHuCard(dir: number, cardNumber: number, isReconnect: boolean) {\n        let node = this._seatList[dir];\n        if (node.children.length >= GameRuleConfig.CardHuNum) {\n            console.log(\"NodeHuCardCtr.showHuCard\", \"胡牌数量超过最大限制\", node.children.length, GameRuleConfig.CardHuNum);\n            return;\n        }\n\n        let who = CardUtil.calculatePlayerPosition(this._hostDir + 1, dir + 1);\n        if (who == \"上家\" || who == \"下家\") { // 上下家\n            tween(this.node)\n                .delay(isReconnect ? 0 : 0.5)\n                .call(() => {\n                    this.pushCardB(dir, cardNumber, isReconnect);\n                })\n                .start();\n        } else {\n            tween(this.node)\n                .delay(isReconnect ? 0 : 0.5)\n                .call(() => {\n                    this.pushCardA(dir, cardNumber, isReconnect);\n                })\n                .start();\n\n        }\n    }\n\n    // 共一排，一层4个\n    private pushCardA(dir: number, cardNumber: number, isReconnect: boolean) {\n        let length = this._seatList[dir].children.length;\n        let row = Math.floor( length / 4);\n        let col = length % 4 + 1;\n        let distance = GameViewConfig.CardConfig.CenterToHuCard;\n        let card = instantiate(this.nodeCard);\n        let x = GameViewConfig.CardConfig.CenterToHuCardX + (GameViewConfig.CardConfig.Width + GameViewConfig.CardConfig.SpaceHuCard) * col;\n        let y = GameViewConfig.CardConfig.GroundToCard + row * GameViewConfig.CardConfig.Thickness;\n        card.setPosition(x, y, distance);\n        card.setRotationFromEuler(0, 0, 0);\n        card.active = true;\n        card.getComponent(NodeCardCtr).setCardByte(cardNumber);\n        this._seatList[dir].addChild(card);\n\n        this.showHuAnim(dir, card, isReconnect);\n\n    }\n\n    // 共2排，1排2个，1层4个\n    private pushCardB(dir: number, cardNumber: number, isReconnect: boolean) {\n        let length = this._seatList[dir].children.length;\n        let row = Math.floor( length / 4);\n        let col = length % 4 + 1;\n        let distance = GameViewConfig.CardConfig.CenterToHuCard;\n        let card = instantiate(this.nodeCard);\n        let y = GameViewConfig.CardConfig.GroundToCard + row * GameViewConfig.CardConfig.Thickness;\n        let who = CardUtil.calculatePlayerPosition(this._hostDir + 1, dir + 1);\n        if (who == \"下家\") {\n            distance += 10;\n        }\n\n        if (col == 1 || col == 2) {\n            let x = GameViewConfig.CardConfig.CenterToHuCardX + (GameViewConfig.CardConfig.Width + GameViewConfig.CardConfig.SpaceHuCard) * col;\n            card.setPosition(x, y, distance);\n        } else {\n            let x = GameViewConfig.CardConfig.CenterToHuCardX + (GameViewConfig.CardConfig.Width + GameViewConfig.CardConfig.SpaceHuCard) * (col - 2);\n            card.setPosition(x, y, distance + GameViewConfig.CardConfig.Height);\n        }\n\n        card.setRotationFromEuler(0, 0, 0);\n        card.active = true;\n        card.getComponent(NodeCardCtr).setCardByte(cardNumber);\n        this._seatList[dir].addChild(card);\n\n        this.showHuAnim(dir, card, isReconnect);\n    }\n\n    private showHuAnim(dir: number, cardNode: Node, isReconnect: boolean) {\n        if (!isReconnect) {\n            // mark\n        }\n    }\n\n    private getWho(dir: number, dirOut: number) {\n        let a = dir; // 自己位置\n        let b = dirOut; // 待查位置\n        let x = ((b + 4) - a) % 4\n        return x;\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n        \n    }\n\n    /** 重连 */\n    onReconnect() {\n        this.resetView();\n    }\n\n    //销毁\n    onDestroy() {\n    };\n\n    log(...args: any[]) {\n        console.log(this.name, args);\n    }\n\n}\n\n"]}