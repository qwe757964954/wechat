{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/Players/CardPlayManeger.ts"],"names":["Node","_decorator","EventManager","BaseComponent","OperationMgr","OperationResultMgr","PlayerMgr","RoomMgr","OPCode","GameEvent","MajiangUtil","CardUtil","MyPlayerCard","ccclass","property","CardPlayManeger","tooltip","type","pengArr","OPE_PENG","OPE_QIANG_PENG","chiArr","OPE_RIGHT_CHI","OPE_MIDDLE_CHI","OPE_LEFT_CHI","onInitModuleEvent","addModelListener","VIEW_BROADCAST_DEAL_CARD","onDealCard","RECEIVE_DEAL_CARD","receiveDealCard","DRAW_MY_CARD","drawMyCard","UPDATE_OPERATION_RESULT","onPlayerOpResult","event","cardsList","getInstance","getDrawCardList","length","myHand","nodeCardView","getComponent","drawByte","console","log","getMajiangValue","drawCard","resp","isDealer","cards","addHandCards","getMyhands","onOutCard","indexs","getOpIndexs","opCards","myOpCode","opCode","getMajiangValues","playDrawCard","getMyHandCardResult","updateHandPositionAndName","indexOf","playCardFromHandAnim","insertIndex","getIndexByHandCards","opCard","makeSlotAnim","drawCardToSlot","onPengGangCard","stackAnim","deleteHasInList","getIndexByCards","insertCard","myCards","sortFeiXiaoJiCards","index","onAnGangCard","isGrab","removeDrawCard","onBuGangCard","onChiCard","playerMySelfCard","OPE_OUT_CARD","OPE_AN_GANG","OPE_GANG","OPE_BU_GANG","dispatch","UPDATE_USER_OPERATION_RESULT","seatId","mySeatId","resetView"],"mappings":"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","sourcesContent":["\nimport { Node, _decorator } from 'cc';\nimport { EventManager } from '../../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../cache/OperationMgr';\nimport { OperationResultMgr } from '../../cache/OperationResultMgr';\nimport { PlayerMgr } from '../../cache/PlayerMgr';\nimport { RoomMgr } from '../../cache/RoomMgr';\nimport { OPCode } from '../../common/FXJConfig';\nimport { GameEvent } from '../../common/GameEvent';\nimport { Game } from '../../common/idl/Game';\nimport { MajiangUtil } from '../../common/MajiangUtil';\nimport { CardUtil } from '../../util/CardUtil';\nimport { MyPlayerCard } from './MyPlayerCard';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = MyPlayer\n * URL = db://assets/package/game/scripts/MyPlayer.ts\n * Time = Fri Aug 11 2023 11:08:16 GMT+0800 (中国标准时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('CardPlayManeger')\nexport class CardPlayManeger extends BaseComponent {\n\t// 手牌节点\n\t@property({ tooltip: \"手牌节点\", type: Node })\n\tprivate nodeCardView: Node | null = null;\n    \n    private pengArr:number[] = [OPCode.OPE_PENG,OPCode.OPE_QIANG_PENG];\n    private chiArr:number[] = [OPCode.OPE_RIGHT_CHI,OPCode.OPE_MIDDLE_CHI,OPCode.OPE_LEFT_CHI];\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n        this.addModelListener(GameEvent.VIEW_BROADCAST_DEAL_CARD, this.onDealCard);\n        this.addModelListener(GameEvent.RECEIVE_DEAL_CARD, this.receiveDealCard);\n\t\tthis.addModelListener(GameEvent.DRAW_MY_CARD, this.drawMyCard);\n\t\tthis.addModelListener(GameEvent.UPDATE_OPERATION_RESULT, this.onPlayerOpResult);\n\t};\n    //自己抓牌\n    drawMyCard(event:null){\n\t\tlet cardsList: number[] = OperationMgr.getInstance().getDrawCardList();\n\t\tif(cardsList.length === 0){\n\t\t\treturn;\n\t\t}\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.drawByte = cardsList[0];\n        console.log(\"自己抓牌\", CardUtil.getMajiangValue(myHand.drawByte),myHand.drawByte);\n\t\t//自己抓牌\n\t\tmyHand.drawCard(myHand.drawByte);\n\t}\n    //分牌\n    onDealCard(event, resp:Game.IDealCard) {\n\t\tlet myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        //自己是庄家        \n        let isDealer:boolean = resp.cards.length === 14;\n        myHand.addHandCards(resp.cards,isDealer,null,isDealer);\n\t}\n    //重连分牌\n    receiveDealCard(event){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.addHandCards(PlayerMgr.getInstance().getMyhands(),false,null,false);\n    }\n    //自己出牌\n    onOutCard() {\n\t\tlet myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        console.log(\"onOutCard______\",OperationMgr.getInstance().myOpCode,OperationResultMgr.getInstance().opCode,OperationResultMgr.getInstance().opCards,indexs,CardUtil.getMajiangValues(OperationResultMgr.getInstance().opCards));\n        if(indexs.length === 0){\n            myHand.playDrawCard();\n            OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n            myHand.updateHandPositionAndName();\n            return;\n        }\n        if (this.pengArr.indexOf(OperationMgr.getInstance().myOpCode) !== -1) {\n            myHand.playCardFromHandAnim(indexs[0],true);\n            let insertIndex:number = PlayerMgr.getInstance().getIndexByHandCards(myHand.drawByte,OperationResultMgr.getInstance().opCard);\n            myHand.makeSlotAnim(insertIndex);\n            myHand.drawCardToSlot();\n        }else if(this.chiArr.indexOf(OperationMgr.getInstance().myOpCode) !== -1) {\n            myHand.playCardFromHandAnim(indexs[0],true);\n            let insertIndex:number = PlayerMgr.getInstance().getIndexByHandCards(myHand.drawByte,OperationResultMgr.getInstance().opCard);\n            myHand.makeSlotAnim(insertIndex);\n            myHand.drawCardToSlot();\n        }else{\n            myHand.playCardFromHandAnim(indexs[0]);\n            let insertIndex:number = PlayerMgr.getInstance().getIndexByHandCards(myHand.drawByte,OperationResultMgr.getInstance().opCard);\n            myHand.makeSlotAnim(insertIndex);\n            myHand.drawCardToSlot();\n        }\n        OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n        myHand.updateHandPositionAndName();\n        OperationMgr.getInstance().myOpCode = 0;\n\t}\n    //自己碰杠\n    onPengGangCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        myHand.stackAnim(indexs);\n        MajiangUtil.deleteHasInList(PlayerMgr.getInstance().getMyhands(),OperationResultMgr.getInstance().opCards);\n        // myHand.updateHandPositionAndName();\n    }\n\n    getIndexByCards(insertCard: number): number {\n        let myCards = PlayerMgr.getInstance().getMyhands();\n        let cards = [...myCards];\n        cards = CardUtil.sortFeiXiaoJiCards(cards);\n        for (let index = 0; index < cards.length; index++) {\n            if (cards[index] == insertCard) {\n                // console.log(\"=getIndexByCards=\", cards, insertCard, insertCard.toString(16), index)\n                return index\n            }\n        }\n        return 0;\n    }\n\n    //暗杠\n    onAnGangCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        let isGrab = OperationResultMgr.getInstance().opCards.indexOf(myHand.drawByte) !== -1;\n        if(isGrab){\n            myHand.removeDrawCard();\n            myHand.stackAnim(indexs);\n            OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n        }else{\n            let index = OperationMgr.getInstance().getIndexByCards(myHand.drawByte);\n            OperationMgr.getInstance().getMyHandCardResult(OperationResultMgr.getInstance().opCards);\n            myHand.stackAnim(indexs,myHand.drawByte,index);\n        }\n    }\n    //补杠\n    onBuGangCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.removeDrawCard();\n    }\n\n     //自己吃\n     onChiCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        let indexs:number[] = PlayerMgr.getInstance().getOpIndexs(OperationResultMgr.getInstance().opCards);\n        myHand.stackAnim(indexs);\n        MajiangUtil.deleteHasInList(PlayerMgr.getInstance().getMyhands(),OperationResultMgr.getInstance().opCards);\n        // myHand.updateHandPositionAndName();\n    }\n\n    playerMySelfCard(){\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        switch (OperationResultMgr.getInstance().opCode) {\n            case OPCode.OPE_OUT_CARD:\n                //自己出牌\n                this.onOutCard();\n                break;\n            case OPCode.OPE_PENG:\n                //自己碰\n                this.onPengGangCard();\n                break;\n            case OPCode.OPE_AN_GANG:\n                //自己暗杠\n                this.onAnGangCard();\n                break;\n            case OPCode.OPE_GANG:\n                //自己杠\n                this.onPengGangCard();\n                break;\n            case OPCode.OPE_BU_GANG:\n                //自己补杠\n                this.onBuGangCard();\n                break;\n            case OPCode.OPE_LEFT_CHI:\n                //自己左吃\n                this.onChiCard();\n                break;\n            case OPCode.OPE_MIDDLE_CHI:\n                //自己中吃\n                this.onChiCard();\n                break;\n            case OPCode.OPE_RIGHT_CHI:\n                //自己右吃\n                this.onChiCard();\n                break;\n        }\n    }\n\n    //操作\n\tonPlayerOpResult(event,resp:Game.IOperationResult){\n        EventManager.dispatch(GameEvent.UPDATE_USER_OPERATION_RESULT,resp);\n        //我自己\n        if(OperationResultMgr.getInstance().seatId === RoomMgr.getInstance().mySeatId){\n            this.playerMySelfCard();\n            // console.log(\"减去我自己出的牌操作\",resp);\n            \n            \n        }else{\n            console.log(\"其他玩家操作\",resp);\n        }\n\t}\n    \n    resetView() {\n        let myHand:MyPlayerCard = this.nodeCardView.getComponent(MyPlayerCard)\n        myHand.resetView();\n\t}\n    \n}\n\n"]}