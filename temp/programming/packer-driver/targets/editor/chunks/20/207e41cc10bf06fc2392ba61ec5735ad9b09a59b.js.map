{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/module/opInfo/src/Carditem.ts"],"names":["instantiate","Layout","Node","Prefab","UITransform","_decorator","EventManager","BaseComponent","OperationMgr","GameEvent","Card","ccclass","property","Carditem","tooltip","type","onInitModuleEvent","updateCardItemProp","opTypes","opNode","node","removeAllChildren","console","log","length","rowNum","i","item","itemPrefab","opType","cardList","getInstance","getOprationCardList","code","idx","cardInfo","cards","getOprationListNumber","forEach","cardValue","CardPrefab","getComponent","setCardByte","transform","setContentSize","addChild","off","EventType","TOUCH_END","on","opClick","cardLayout","Type","GRID","resizeMode","ResizeMode","CONTAINER","startAxis","AxisDirection","VERTICAL","spacingX","spacingY","verticalDirection","VerticalDirection","BOTTOM_TO_TOP","horizontalDirection","HorizontalDirection","RIGHT_TO_LEFT","updateLayout","opCode","index","req","opCard","getPassNumber","opCards","seatId","userId","dispatch","SEND_PLAYER_OPERATION","CLOSE_OPRATION_INFO","myOpCode"],"mappings":"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","sourcesContent":["\nimport { instantiate, Layout, Node, Prefab, UITransform, _decorator } from 'cc';\nimport { EventManager } from '../../../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../../cache/OperationMgr';\nimport { GameEvent } from '../../../common/GameEvent';\nimport { Common } from '../../../common/idl/Common';\nimport { Game } from '../../../common/idl/Game';\nimport { Card } from '../../card/src/Card';\nimport { OpType } from './OpInfo';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = Carditem\n * URL = db://assets/package/game/module/opInfo/src/Carditem.ts\n * Time = Fri Aug 18 2023 15:19:38 GMT-0700 (北美太平洋夏令时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('Carditem')\nexport class Carditem extends BaseComponent {\n\t@property({ tooltip: \"手牌预制体\", type: Prefab })\n\tprivate CardPrefab: Prefab | null = null;\n\t@property(Prefab)\n\tprivate itemPrefab: Prefab | null = null;\n\t@property(Layout)\n\tprivate opCards: Layout | null = null;\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n\n\tpublic updateCardItemProp(opTypes:OpType[]){\n\t\tlet opNode = opTypes[0].node;\n\t\t// let childrens = opNode.node.children;\n\t\t// console.log(childrens)\n\t\t// childrens.forEach(child => {\n\t\t// \tif(child.name !== \"sk\"){\n\t\t// \t\tchild.removeFromParent();\n\t\t// \t}\n\t\t// });\n\t\tthis.node.removeAllChildren();\n\t\tconsole.log(\"opTypes__________\",opTypes,opTypes.length)\n\t\tlet rowNum = 0;\n\t\tfor (let i = 0;i<opTypes.length;i++){\n\t\t\tlet item = instantiate(this.itemPrefab);\n\t\t\tlet opType:OpType = opTypes[i];\n\t\t\tlet cardList:Common.ICards[] = OperationMgr.getInstance().getOprationCardList(opType.code);\n\t\t\tfor (let idx = 0; idx < cardList.length; idx++) {\n\t\t\t\tlet cardInfo:Common.ICards = cardList[idx];\n\t\t\t\tlet cards:number[] = OperationMgr.getInstance().getOprationListNumber(opType.code,idx);\n\t\t\t\tcards.forEach(cardValue => {\n\t\t\t\t\tlet node = instantiate(this.CardPrefab);\n\t\t\t\t\tnode.getComponent(Card).setCardByte(cardValue);\n\t\t\t\t\tlet transform = node.getComponent(UITransform);\n\t\t\t\t\ttransform.setContentSize(53, 86);\n\t\t\t\t\titem.addChild(node);\n\t\t\t\t});\n\t\t\t\titem.off(Node.EventType.TOUCH_END);\n\t\t\t\titem.on(Node.EventType.TOUCH_END, () => {\n\t\t\t\t\tthis.opClick(opType.code,idx);\n\t\t\t\t}, this);\n\t\t\t\trowNum++;\n\t\t\t\tthis.node.addChild(item);\n\t\t\t}\n\t\t}\n\t\tlet cardLayout:Layout = this.node.getComponent(Layout);\n\t\t\n\t\tcardLayout.type = Layout.Type.GRID;\n\t\tcardLayout.resizeMode = Layout.ResizeMode.CONTAINER;\n\t\tcardLayout.startAxis = Layout.AxisDirection.VERTICAL;\n\t\tcardLayout.spacingX = 15;\n\t\tcardLayout.spacingY = 15; \n\t\tcardLayout.verticalDirection = Layout.VerticalDirection.BOTTOM_TO_TOP;\n\t\tcardLayout.horizontalDirection = Layout.HorizontalDirection.RIGHT_TO_LEFT;\n\t\t// cardLayout.constraint = Layout.Constraint.FIXED_ROW;\n\t\t// cardLayout.constraintNum = rowNum;\n\t\t            \n\t\tcardLayout.updateLayout();\n\t\t// let transform = this.node.getComponent(UITransform);\n\t\t// transform.height = 100;\n\t\topNode.node.addChild(this.node);\n\t}\n\n\tpublic opClick(opCode?:number,index?:number){\n\t\tlet req: Game.ISendOperation = {\n            opCard:OperationMgr.getInstance().getPassNumber(),\n\t\t\topCode:opCode,\n\t\t\topCards:OperationMgr.getInstance().getOprationListNumber(opCode,index),\n\t\t\tseatId:OperationMgr.getInstance().seatId,\n\t\t\tuserId:OperationMgr.getInstance().userId\n        }\n\t\tEventManager.dispatch(GameEvent.SEND_PLAYER_OPERATION, req);\n\t\tEventManager.dispatch(GameEvent.CLOSE_OPRATION_INFO);\n        OperationMgr.getInstance().myOpCode = opCode;\n\t}\n}\n\n"]}