{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/util/CardUtil.ts"],"names":["CardUtil","MahjongMap","sortFeiXiaoJiCards","array","result","sort","a","b","i","length","getCardValue","element","splice","unshift","addLeadingZero","num","toString","toHex","hex","value","mahjongValue","ret","getMajiangValue","cardStr","get","getMajiangValues","values","strArr","forEach","push","calculatePlayerPosition","mySeatId","playerSeatId","seatDifference","calculatePlayerSeat","sortPlayersBySeatId","playerList","sortedPlayers","myPlayer","find","player","seatId","p"],"mappings":"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","sourcesContent":["/*\n麻将编码如下\n=============================================\n0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x08 0x09\n一万 二万 三万 四万 五万 六万 七万 八万 九万\n=============================================\n0x11 0x12 0x13 0x14 0x15 0x16 0x17 0x18 0x19\n一筒 二筒 三筒 四筒 五筒 六筒 七筒 八筒 九筒\n=============================================\n0x21 0x22 0x23 0x24 0x25 0x26 0x27 0x28 0x29\n一条 二条 三条 四条 五条 六条 七条 八条 九条\n=============================================\n0x31 0x32 0x33 0x34\n东风 南风 西风 北风\n=============================================\n0x41 0x42 0x43\n红中 发财 白板\n=============================================\n0x51 0x52 0x53 0x54 0x55 0x56 0x57 0x58\n春   夏   秋   冬   梅   兰   菊   竹\n*/\n\nimport { MahjongMap } from \"../common/FXJConfig\";\n\nexport class CardUtil {\n  \n\n\n    public static sortFeiXiaoJiCards(array: number[]): number[] {\n        const result = [...array].sort((a, b) => a - b); // 创建数组副本\n        for (let i = 0; i < result.length; i++) {\n          if (CardUtil.getCardValue(result[i]) === \"0x21\") {\n            const element = result.splice(i, 1)[0];\n            result.unshift(element);\n          }\n        }\n        return result;\n    }\n\n    public static addLeadingZero(num: number): string {\n        if (num < 10) {\n          return \"0\" + num;\n        }\n        return num.toString();\n    }\n    public static toHex(num: number): string {\n        const hex = num.toString(16);\n        return hex.length === 1 ? \"0\" + hex : hex;\n    }\n    /**\n     * 获取牌的value\n     * @param key 键\n     */\n    public static getCardValue(value: number): string {\n        let mahjongValue = value >> 8;\n        let ret: string | null = null;\n        ret = `0x${CardUtil.toHex(mahjongValue)}`;\n        return ret\n    }\n\n    public static getMajiangValue(value: number): string {\n        let cardStr = CardUtil.getCardValue(value);\n        return MahjongMap.get(cardStr);\n    }\n\n    public static getMajiangValues(values: number[]): string[] {\n      let strArr:string[] = []\n      values.forEach(value => {\n          let cardStr = CardUtil.getCardValue(value);\n          strArr.push(MahjongMap.get(cardStr));\n      });\n      \n      return strArr;\n  }\n\n    //计算麻将玩家位置\n    public static calculatePlayerPosition(mySeatId: number, playerSeatId: number): string {\n        const seatDifference = (playerSeatId - mySeatId + 4) % 4;\n        switch (seatDifference) {\n          case 1:\n            return \"下家\";\n          case 2:\n            return \"对家\";\n          case 3:\n            return \"上家\";\n          default:\n            return \"自己\";\n        }\n    }\n    \n     //计算麻将玩家位置\n    public static calculatePlayerSeat(mySeatId: number, playerSeatId: number): number {\n        const seatDifference = (playerSeatId - mySeatId + 4) % 4;\n        return seatDifference;\n    }\n\n    public static sortPlayersBySeatId(playerList: any[], mySeatId: number): any[] {\n        const sortedPlayers: any[] = [];\n        const myPlayer = playerList.find((player) => player.seatId === mySeatId);\n      \n        if (myPlayer) {\n          sortedPlayers.push(myPlayer);\n      \n          for (let i = 1; i <= 3; i++) {\n              const player = playerList.find((p) => (p.seatId - mySeatId + 4) % 4 === i);\n              if (player) {\n                sortedPlayers.push(player);\n              }\n          }\n        }\n        return sortedPlayers;\n    } \n}\n\n\n"]}