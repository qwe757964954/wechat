{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeHandCardCtr.ts"],"names":["Node","Tween","Vec3","_decorator","instantiate","tween","Utils","EventManager","BaseComponent","RoomMgr","OPCode","FXJEvent","FXJSound","GameViewConfig","NodeCardCtr","ccclass","property","NodeHandCardCtr","tooltip","type","_hostDir","_numList","_seatList","_seatListTarget","_cardStart","_spaceLast","_width","_height","_thickness","_groundToCard","_cardStatus","HandCardStatus","Idle","onInitModuleEvent","onLoad","initData","initView","start","Array","num","scale","CardConfig","ScaleHandCard","width","Width","height","Height","thickness","Thickness","groundToCard","GroundToHandCard","spaceLast","dir","nodeSeat","setRotationFromEuler","node","addChild","i","leftToRight","card","nodeCard","setScale","x","y","z","setPosition","CenterToHandCard","push","resetView","getInstance","mySeatId","length","targets","stopAllByTarget","cards","active","pos","getPosition","onGameStart","OnChangedSeat","hostDir","onDealCard","data","dealCard","cardsCount","playAnimOfSort","countList","isNull","console","log","adjustPosition","offset","turnToMe","cardNum","t1","t2","playAnimOfSortByDir","Sort","delay","call","dispatch","SYS_PLAY_EFFECT","GameAdjust","rotaionEuler","eulerAngles","point","GroundToCard","tweenTargetVec3","tw","by","onUpdate","target","ratio","rotate3DAroundByPositionRotaion","onTakeCard","seatId","takeCard","onOutCard","outCardAny","count","luckyNum","Math","floor","random","simpleOutCardAny","normalOutCardAny","a","b","min","removeNodeList","splice","forEach","value","index","array","to","position","onPengGang","opCode","OPE_PENG","OPE_QIANG_PENG","OPE_AN_GANG","OPE_GANG","OPE_BU_GANG","onHu","cardSeatId","onGameOver","handCards","nodes","j","getComponent","setCardByte","playAnimOfShow","duration","Show","Over","onReconnect","playerList","onDestroy"],"mappings":"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","sourcesContent":["\nimport { Node, Tween, Vec3, _decorator, instantiate, tween } from 'cc';\nimport { Utils } from '../../../framework/Utils';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { OPCode } from '../common/FXJConfig';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { FXJSound } from '../common/FXJSound';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { NodeCardCtr } from './NodeCardCtr';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeHandCardCtr\n * URL = db://assets/package/game/scripts/NodeHandCardCtr.ts\n * Time = Mon Aug 14 2023 12:07:20 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('NodeHandCardCtr')\nexport class NodeHandCardCtr extends BaseComponent {\n    /** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n    /** 麻将数量列表 */\n    private _numList: number[] = null;\n    /** 麻将位置列表 */\n    private _seatList: Node[][] = null;\n    /** 麻将动画Target列表 */\n    private _seatListTarget: Vec3[][] = null;\n    /** 手牌开始位置 */\n    private _cardStart: number = 0;\n    /** 最后一张手牌间隔 */\n    private _spaceLast: number = 0;\n    /** 手牌宽度 */\n    private _width: number = 0;\n    /** 手牌高度 */\n    private _height: number = 0;\n    /** 手牌厚度 */\n    private _thickness: number = 0;\n    /** 手牌与桌子的距离 */\n    private _groundToCard: number = 0;\n\n    /** 手牌状态 */\n    private _cardStatus: GameViewConfig.HandCardStatus = GameViewConfig.HandCardStatus.Idle;\n\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    }\n\n    initData() {\n        this._numList = [0, 0, 0, 0];\n        this._seatList = new Array(4);\n        this._seatListTarget = [[], [], [], []];\n    }\n\n    initView() {\n        let num = 14;\n        let scale = GameViewConfig.CardConfig.ScaleHandCard;\n        let width = GameViewConfig.CardConfig.Width * scale;\n        let height = GameViewConfig.CardConfig.Height * scale;\n        let thickness = GameViewConfig.CardConfig.Thickness * scale;\n        let groundToCard = GameViewConfig.CardConfig.GroundToHandCard * scale;\n        let spaceLast = width * 0.5; // 行牌玩家新拿的一张牌，放在最右侧，并与其他牌保持一定距离\n        let start = (width * num) / 2 + spaceLast - width / 2;\n\n        this._cardStart = start;\n        this._spaceLast = spaceLast;\n        this._width = width;\n        this._height = height;\n        this._thickness = thickness;\n        this._groundToCard = groundToCard;\n\n        for (let dir = 0; dir < 4; dir++) {\n            // 每个方向的手牌设定一个父节点，方便管理\n            let nodeSeat = new Node();\n            nodeSeat.setRotationFromEuler(0, 90 * dir, 0);\n            this.node.addChild(nodeSeat);\n\n            // 四个方向的手牌都以东方向为基础方向，旋转父节点分别对应到四个方向\n            // 以东为基础方向后，二维坐标系，向右为x轴正方向，向上为y轴正方向\n            this._seatList[dir] = [];\n            for (let i = 0; i < num; i++) {\n                let leftToRight = -start + i * width;\n                if (i == num) {\n                    leftToRight += spaceLast;\n                }\n                let card = instantiate(this.nodeCard);\n                card.setScale(card.scale.x * scale, card.scale.y * scale, card.scale.z * scale);\n                card.setPosition(leftToRight, groundToCard, GameViewConfig.CardConfig.CenterToHandCard);\n                card.setRotationFromEuler(90, 0, 0);\n                nodeSeat.addChild(card);\n                this._seatList[dir].push(card);\n            }\n        }\n    }\n\n    resetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n\n        for (let dir = 0; dir < this._seatListTarget.length; dir++) {\n            let targets = this._seatListTarget[dir];\n            for (let i = 0; i < targets.length; i++) {\n                Tween.stopAllByTarget(targets[i]);\n            }\n        }\n\n        // 清空所有手牌\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let cards = this._seatList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                cards[i].active = false;\n                Tween.stopAllByTarget(cards[i]);\n\n                cards[i].setRotationFromEuler(90, 0, 0);\n                let pos = cards[i].getPosition();\n                cards[i].setPosition(pos.x, this._groundToCard, GameViewConfig.CardConfig.CenterToHandCard)\n            }\n        }\n\n        this._numList = [0, 0, 0, 0];\n\n        this._seatListTarget = [[], [], [], []];\n\n        this._cardStatus = GameViewConfig.HandCardStatus.Idle;\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir; // 换位需要重置手牌（本家不显示手牌）\n    }\n\n    /** 发牌 */\n    onDealCard(data: Game.IDealCard) {\n        this.dealCard(data.cardsCount);\n        this.playAnimOfSort();\n    }\n\n    /** 发牌处理 */\n    private dealCard(countList: number[]) {\n        if (Utils.isNull(this._hostDir) || this._hostDir < 0 || this._hostDir >= 4) {\n            console.log(\"NodeHandCardCtr.dealCard\", \"本家座位号无效\");\n            return;\n        }\n\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let num = countList[dir];\n            let cards = this._seatList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                if (dir == this._hostDir) {\n                    cards[i].active = false;\n                } else {\n                    cards[i].active = (i + 1) <= num;\n                }\n            }\n            this._numList[dir] = dir == this._hostDir ? 0 : num;\n            this.adjustPosition(dir)\n        }\n    }\n\n    /** 调整手牌的位置 */\n    private adjustPosition(dir: number, offset: number = 0) {\n        let num = this._numList[dir];\n        let cards = this._seatList[dir];\n        for (let i = 0; i < num; i++) {\n            let leftToRight = -this._cardStart + i * this._width;\n            if (i == (num - 1) && this.turnToMe(num)) {\n                leftToRight += this._spaceLast;\n            }\n            let card = cards[i];\n            let pos = card.getPosition();\n            card.setPosition(leftToRight, this._groundToCard, GameViewConfig.CardConfig.CenterToHandCard + offset);\n        }\n    }\n\n    /** 是否轮到我出牌 */\n    private turnToMe(cardNum: number) {\n        return cardNum % 3 == 2\n    }\n\n    /** 触发手牌排序动画 */\n    private playAnimOfSort() {\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n        let t1 = 0.25;\n        let t2 = 0.25;\n\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            this.playAnimOfSortByDir(dir, t1, t2)\n        }\n        this._cardStatus = GameViewConfig.HandCardStatus.Sort;\n        tween(this.node)\n            .delay(t1 + t2 + 0.01)\n            .call(() => {\n                this._cardStatus = GameViewConfig.HandCardStatus.Idle;\n                for (let dir = 0; dir < this._seatList.length; dir++) {\n                    let cards = this._seatList[dir];\n                    for (let i = 0; i < cards.length; i++) {\n                        cards[i].setRotationFromEuler(90, 0, 0);\n                    }\n                }\n            })\n            .start();\n        EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, FXJSound.GameAdjust);\n    }\n\n    /** 播放整理牌的动画 */\n    private playAnimOfSortByDir(dir: number, t1: number, t2: number) {\n        let targets = this._seatListTarget[dir];\n        for (let i = 0; i < targets.length; i++) {\n            Tween.stopAllByTarget(targets[i]);\n        }\n        this._seatListTarget[dir] = [];\n\n        let num = this._numList[dir];\n        let cards = this._seatList[dir];\n        for (let i = 0; i < cards.length; i++) {\n            if ((i + 1) > num) {\n                break;\n            }\n            // 沿麻将牌面下边缘旋转，转到牌面向下后再转回原位置\n            let rotaionEuler = new Vec3(cards[i].eulerAngles);\n            let pos = new Vec3(cards[i].getPosition());\n            let point = new Vec3(pos.x, 0,\n                pos.z + this._thickness - GameViewConfig.CardConfig.GroundToCard);\n\n            let tweenTargetVec3 = new Vec3(0, 0, 0);\n            let tw = new Tween(tweenTargetVec3)\n                .by(t1, new Vec3(90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(cards[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .by(t2, new Vec3(-90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(cards[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .start();\n\n            this._seatListTarget[dir].push(tweenTargetVec3);\n        }\n    }\n\n    /** 抓牌 */\n    onTakeCard(data: any) {\n        if (Utils.isNull(data.seatId) || data.seatId < 1 || data.seatId > 4) {\n            console.log(\"NodeHandCardCtr.onTakeCard\", \"座位号错误\");\n            return;\n        }\n\n\n        let dir = data.seatId - 1;\n        this.takeCard(dir);\n    }\n\n    /** 抓牌 */\n    private takeCard(dir: number) {\n\n        if (this._hostDir == dir) {\n            return;\n        }\n\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n\n        if (this.turnToMe(this._numList[dir])) {\n            console.log(\"NodeHandCardCtr.takeCard\", \"手牌数量异常，可能未正常移除\", \"dir\", dir);\n        }\n\n        let cards = this._seatList[dir];\n        let num = this._numList[dir] + 1;\n        console.log(\"NodeHandCardCtr.takeCard\", \"dir\", dir, \"num\", num);\n        if (num > cards.length) {\n            console.log(\"NodeHandCardCtr.takeCard\", \"手牌数量太多\", \"dir\", dir);\n            return;\n        }\n        cards[num - 1].active = true;\n        this._numList[dir] = num;\n        this.adjustPosition(dir);\n    }\n\n    /** 出牌 */\n    onOutCard(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n\n        if (!this.turnToMe(this._numList[dir])) {\n            console.log(\"NodeHandCardCtr.takeCard\", \"手牌数量异常，可能未正常拿牌\", \"dir\", dir);\n            this.adjustPosition(dir);\n            return;\n        }\n\n        this.outCardAny(dir, 1)\n    }\n\n    /** 出牌或碰杠(一般用于正常出牌、碰或杠) */\n    private outCardAny(dir: number, count: number) {\n        console.log(\"NodeHandCardCtr.outCardAny\", \"dir\", dir, \"count\", count);\n        console.log(\"NodeHandCardCtr.outCardAny\", \"numList\", this._numList);\n        if (this._hostDir == dir) {\n            return;\n        }\n\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n\n        this.adjustPosition(dir);\n\n        let luckyNum = Math.floor(Math.random() * 100);\n        if (luckyNum % 2 == 1) {\n            this.simpleOutCardAny(dir, count);\n        } else {\n            this.normalOutCardAny(dir, count);\n        }\n\n    }\n\n    /** 简单出牌，直接丢出最右侧的牌 */\n    private simpleOutCardAny(dir: number, count: number) {\n        console.log(\"NodeHandCardCtr.simpleOutCardAny\");\n        let num = this._numList[dir];\n        if (num < count) {\n            return;\n        }\n\n        let cards = this._seatList[dir];\n        for (let i = 0; i < count; i++) {\n            cards[num - 1].active = false;\n            num--;\n        }\n        this._numList[dir] = num;\n    }\n\n    /** \n     * 模拟真实出牌，从中间打出一张，然后将最右侧的牌插入到空槽 \n     * 1. [已实现] 直接打出新拿的牌，无需整理\n     * 2. [已实现] 从手牌中抽出一张打出，然后空槽右侧牌全部向左推，整理完成\n     * 3. [未实现] 从手牌中抽出一张打出，最右侧新拿的牌直接插入空槽，整理完成\n     * 4. [未实现] 从手牌中抽出一张打出，中间一部分牌向左或向右移动，产生另一个空槽，再将最右侧新拿的牌插入空槽，整理完成\n     * */\n    private normalOutCardAny(dir: number, count: number) {\n        console.log(\"NodeHandCardCtr.normalOutCardAny begin\", this._numList[dir]);\n        let num = this._numList[dir];\n        if (num < count) {\n            return;\n        }\n\n        let a = count;\n        let b = num - 1;\n        let luckyNum = Math.min(Math.floor(Math.random() * (b + 1 - a) + a), b);\n\n        let cards = this._seatList[dir];\n\n        let removeNodeList = cards.splice(luckyNum - count, count);\n        removeNodeList.forEach((value, index, array) => {\n            value.active = false;\n        });\n\n        for (let i = 0; i < removeNodeList.length; i++) {\n            cards.push(removeNodeList[i]);\n        }\n\n        num -= count;\n        this._numList[dir] = num;\n\n        console.log(\"NodeHandCardCtr.normalOutCardAny end\", this._numList[dir]);\n        //\n        for (let i = 0; i < num; i++) {\n            let pos = cards[i].getPosition();\n            // 使用动画移动到目标位置\n            let x = - this._cardStart + i * this._width;\n            if (i == (num - 1) && (num % 3 == 2)) {\n                x += this._spaceLast;\n            }\n            tween(cards[i])\n                .to(0.06 * count, { position: new Vec3(x, pos.y, pos.z) })\n                .start();\n        }\n    }\n\n    /** 碰杠 */\n    onPengGang(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n        switch (data.opCode) {\n            case OPCode.OPE_PENG: // 碰\n            case OPCode.OPE_QIANG_PENG: // 抢碰\n                this.outCardAny(dir, 2);\n                break;\n            case OPCode.OPE_AN_GANG: // 暗杠\n                this.outCardAny(dir, 1);\n                break;\n            case OPCode.OPE_GANG: // 杠\n                this.outCardAny(dir, 3);\n                break;\n            case OPCode.OPE_BU_GANG: // 补杠\n                this.outCardAny(dir, 4);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** 胡牌 */\n    onHu(data: Game.IOperationResult) {\n        let dir = data.cardSeatId - 1;\n\n        if (!this.turnToMe(this._numList[dir])) {\n            // 手里是否有一张未打出的牌，有则移除\n            return;\n        }\n        this.outCardAny(dir, 1);\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n        for (let i = 0; i < data.handCards.length; i++) {\n            let dir = i;\n            let cards = data.handCards[i].handCards;\n            if (cards.length > 14) {\n                console.log(\"NodeHandCardCtr.onGameOver\", \"手牌数据异常\", cards);\n                return;\n            }\n\n            // 重置手牌数据\n            this._numList[dir] = cards.length;\n            let nodes = this._seatList[dir];\n            for (let j = 0; j < nodes.length; j++) {\n                if (j < cards.length) {\n                    nodes[j].active = true;\n                    nodes[j].getComponent(NodeCardCtr).setCardByte(cards[j]);\n                } else {\n                    nodes[j].active = false;\n                }\n            }\n            this.adjustPosition(dir, this._thickness * 0.5)\n\n            if (this.turnToMe(this._numList[dir])) {\n                this.simpleOutCardAny(dir, 1);\n            }\n        }\n\n        this.playAnimOfShow()\n    }\n\n    /** 触发亮牌动画 */\n    private playAnimOfShow() {\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n\n        let duration = 0.3;\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let cards = this._seatList[dir];\n            let num = this._numList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                if (i + 1 > num) {\n                    break;\n                }\n\n                let rotaionEuler = new Vec3(cards[i].eulerAngles);\n                let pos = new Vec3(cards[i].getPosition());\n                let point = new Vec3(pos.x, 0,\n                    pos.z - GameViewConfig.CardConfig.GroundToCard);\n\n                let tweenTargetVec3 = new Vec3(0, 0, 0);\n                let tw = new Tween(tweenTargetVec3)\n                    .by(duration, new Vec3(-90, 0, 0), {\n                        onUpdate: (target: Vec3, ratio: number) => {\n                            Utils.rotate3DAroundByPositionRotaion(cards[i], pos, rotaionEuler, point, target, true)\n                        }\n                    })\n                    .start();\n\n                this._seatListTarget[dir].push(tweenTargetVec3)\n            }\n        }\n\n        this._cardStatus = GameViewConfig.HandCardStatus.Show;\n        tween(this.node)\n            .delay(duration + 0.01)\n            .call(() => {\n                this._cardStatus = GameViewConfig.HandCardStatus.Over;\n            })\n            .start();\n    }\n\n    /** 重连 */\n    onReconnect(data: GameViewConfig.ReconnectConfig) {\n        this.resetView();\n\n        let cardsCount = [0, 0, 0, 0];\n        data.playerList.forEach((value, index, array) => {\n            cardsCount[value.seatId - 1] = value.handCards.length;\n        })\n\n        this.dealCard(cardsCount);\n\n        for (let dir = 0; dir < this._seatList.length; dir++) { \n            this.adjustPosition(dir)\n        }\n    }\n\n    //销毁\n    onDestroy() {\n        this.resetView()\n    };\n}\n\n\n"]}