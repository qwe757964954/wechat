{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/servers/TaskServer.ts"],"names":["TaskServers","GCache","AppEvent","ClientInfo","UIID","Md5","EventManager","BaseControll","GlobalCMD","getInstance","_instance","constructor","name","init","clear","onInitModuleEvent","addModelListener","NET_CMD_REQ_TASK_ACT_CONFIG","reqAtyCenterConfig","NET_CMD_RESP_TASK_ACT_CONFIG","respAtyCenterConfig","NET_REQ_ADDDESK_AWARD","reqAddDeskAWard","NET_RESP_ADDDESK_AWARD","respAddDeskAWard","event","sendMsg","cmd","PHP_ACTIVITY_TASK_CONFIG","body","dispatch","NET_SEND_MSG","print","isSuccess","respData","reqData","TaskInfo","updateActivityCenterData","activity_id","_mark","PlatFormAppID","User","getUserMid","PHP_ADD_DESK_AWARD","mark","console","log","_add_desk_reward","forEach","item","push","icon","num","VIEW_UI_OPEN","GongXiHuoDePrefab"],"mappings":"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","sourcesContent":["/**\n * Name = TaskServers\n * URL = db://assets/proj/servers/TaskService.ts\n * Time = (中国标准时间)\n * Author = dongchuangW\n * 任务、抽奖相关服务\n */\nimport { GCache } from \"../../cache/GCache\";\nimport { AppEvent } from \"../../config/AppEvent\";\nimport { ClientInfo } from \"../../config/GameConfig\";\nimport { UIID } from \"../../config/UIConfig\";\nimport { Md5 } from \"../../framework/crypto/Md5\";\nimport { EventManager } from \"../../framework/manager/EventManager\";\nimport { BaseControll } from \"../../framework/vc/BaseController\";\nimport { GlobalCMD } from \"../gnet/GlobalCMD\";\nexport class TaskServers extends BaseControll {\n    private static _instance = null;\n    public static getInstance(): TaskServers {\n        if (!this._instance || this._instance == null) {\n            this._instance = new TaskServers(\"TaskServers\");\n        }\n        return this._instance;\n    }\n    //实例化\n    constructor(name: string) {\n        super(name)\n    };\n    public static init(): TaskServers {\n        if (this._instance) {\n            this._instance.clear()\n        }\n        this._instance = null\n        TaskServers.getInstance();\n        return\n    }\n    /**初始化添加事件绑定 */\n    protected onInitModuleEvent(): void {\n        //获取活动中心配置数据\n        this.addModelListener(AppEvent.NET_CMD_REQ_TASK_ACT_CONFIG, this.reqAtyCenterConfig)\n        //获取活动中心配置数据返回\n        this.addModelListener(AppEvent.NET_CMD_RESP_TASK_ACT_CONFIG, this.respAtyCenterConfig)\n        //请求添加桌面领奖\n        this.addModelListener(AppEvent.NET_REQ_ADDDESK_AWARD, this.reqAddDeskAWard)\n        /** 请求添加桌面领奖领奖返回 */\n        this.addModelListener(AppEvent.NET_RESP_ADDDESK_AWARD, this.respAddDeskAWard);\n    }\n    /** 获取活动中心配置数据 */\n    reqAtyCenterConfig(event = null) {\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_ACTIVITY_TASK_CONFIG,\n            body: {},\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n        this.print(\"请求活动中心配置\")\n    }\n    /**获取活动中心配置数据返回 */\n    respAtyCenterConfig(event, isSuccess, respData, reqData) {\n        this.print(\"获取活动中心配置返回\", isSuccess, respData, reqData)\n        if (isSuccess && respData) {\n            GCache.TaskInfo.updateActivityCenterData(respData)\n        }\n    }\n    /** 请求添加桌面领奖 */\n    reqAddDeskAWard(event, activity_id) {\n        let _mark = \"123!@#*&908byaa\" + activity_id + ClientInfo.PlatFormAppID + GCache.User.getUserMid()\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_ADD_DESK_AWARD,\n            body: {\n                activity_id: activity_id,\n                mark: Md5(_mark)\n            },\n        }\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n    /** 请求添加桌面领奖返回*/\n    respAddDeskAWard(event, isSuccess, respData, reqData) {\n        console.log('进入大厅添加应用到桌面奖励返回', isSuccess, respData)\n        if (!isSuccess) {\n            console.log('进入大厅发奖失败', respData)\n            return\n        }\n        let _add_desk_reward = []\n        respData['reward'].forEach(item => {\n            _add_desk_reward.push(\n                {\n                    name: item.name,\n                    icon: item.icon,\n                    num: item.num,\n                }\n            )\n        })\n        EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.GongXiHuoDePrefab, _add_desk_reward)\n    }\n\n}"]}