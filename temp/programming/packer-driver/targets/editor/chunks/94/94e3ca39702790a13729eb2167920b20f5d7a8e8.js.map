{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/module/opInfo/src/OpInfo.ts"],"names":["instantiate","Layout","Node","Prefab","sp","_decorator","EventManager","Utils","BaseComponent","OperationMgr","RoomMgr","GameStatus","OPCode","GameEvent","Card","Carditem","ccclass","property","OpInfo","tooltip","type","btnCodeMap","Map","btnSkelMap","opTypeArr","_handlerTimeUpdate","getShowBtn","code","opCode","btn","onInitModuleEvent","addModelListener","CLOSE_OPRATION_INFO","closeOpInfo","onLoad","updateCodeMap","set","OPE_PASS","guoLayout","OPE_RIGHT_CHI","chiLayout","OPE_MIDDLE_CHI","OPE_LEFT_CHI","OPE_PENG","pengLayout","OPE_QIANG_PENG","OPE_HU","huLayout","OPE_ZI_MO","zimoLayout","OPE_AN_GANG","gangLayout","OPE_GANG","OPE_BU_GANG","startOperationTime","stopSchedulerOnce","timeOut","getInstance","getTimeOut","OPERATION","addSchedulerOnce","handler","resetView","opClick","opInfo","req","opCard","getPassNumber","opCards","getOprationListNumber","seatId","userId","dispatch","SEND_PLAYER_OPERATION","myOpCode","updateOpration","resp","opGroups","length","console","log","forEach","layout","node","active","info","push","card","getChildByName","getComponent","setCardByte","opNode","skel","Skeleton","changeSkin","off","EventType","TOUCH_END","on","findOpTypesWithSameNodeAndCode","opcode","resLoader","load","FXJRes","Spine_op","bundle","spineConfig","path","SkeletonData","err","spineAsset","player","skeletonData","ani","setAnimation","opTypes","opTypesMap","opType","key","name","has","get","opMap","isMoreOpration","group","CardItemPrefab","cardItem","updateCardItemProp","opBtns","updateLayout","ganghuaLayout"],"mappings":"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","sourcesContent":["import { instantiate, Layout, Node, Prefab, sp, _decorator } from 'cc';\nimport { EventManager } from '../../../../../framework/manager/EventManager';\nimport { Utils } from '../../../../../framework/Utils';\nimport { BaseComponent } from '../../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../../cache/OperationMgr';\nimport { RoomMgr } from '../../../cache/RoomMgr';\nimport { GameStatus, OPCode } from '../../../common/FXJConfig';\nimport { GameEvent } from '../../../common/GameEvent';\nimport { Common } from '../../../common/idl/Common';\nimport { Game } from '../../../common/idl/Game';\nimport { Card } from '../../card/src/Card';\nimport { Carditem } from './Carditem';\nconst { ccclass, property } = _decorator;\n\nexport interface OpType {\n    node?: Layout | null;\n    code?: number | null;\n}\n\n@ccclass('OpInfo')\nexport class OpInfo extends BaseComponent {\n    @property(Node)\n    public opBtns: Node | null = null;\n\n    @property(Layout)\n    public guoLayout: Layout | null = null;\n\n    @property(Layout)\n    public huLayout: Layout | null = null;\n\n    @property(Layout)\n    public gangLayout: Layout | null = null;\n\n    @property(Layout)\n    public pengLayout: Layout | null = null;\n\n    @property(Layout)\n    public chiLayout: Layout | null = null;\n\n    @property(Layout)\n    public zimoLayout: Layout | null = null;\n\n    @property(Layout)\n    public ganghuaLayout: Layout | null = null;\n\n    // 手牌节点\n\t@property({ tooltip: \"手牌预制体\", type: Prefab })\n\tprivate CardItemPrefab: Prefab | null = null;\n    //可以显示响应按钮的opCode\n    btnCodeMap = new Map<number, Layout>();\n\n    //可以显示响应按钮的opCode\n    btnSkelMap = new Map<number, string>();\n\n    opTypeArr:OpType[] = [];\n\n    /** 时间更新句柄 */\n\t_handlerTimeUpdate = null;\n\n    protected onInitModuleEvent() {\n        this.addModelListener(GameEvent.CLOSE_OPRATION_INFO, this.closeOpInfo);\n\t\t\n\t};\n\n    onLoad () {\n        this.updateCodeMap();\n\t};\n\n    updateCodeMap(){\n        this.btnCodeMap.set(OPCode.OPE_PASS, this.guoLayout);\n        this.btnCodeMap.set(OPCode.OPE_RIGHT_CHI, this.chiLayout);\n        this.btnCodeMap.set(OPCode.OPE_MIDDLE_CHI, this.chiLayout);\n        this.btnCodeMap.set(OPCode.OPE_LEFT_CHI, this.chiLayout);\n        this.btnCodeMap.set(OPCode.OPE_PENG, this.pengLayout);\n        this.btnCodeMap.set(OPCode.OPE_QIANG_PENG, this.pengLayout);\n        this.btnCodeMap.set(OPCode.OPE_HU, this.huLayout);\n        this.btnCodeMap.set(OPCode.OPE_ZI_MO, this.zimoLayout);\n        this.btnCodeMap.set(OPCode.OPE_AN_GANG, this.gangLayout);\n        this.btnCodeMap.set(OPCode.OPE_GANG, this.gangLayout);\n        this.btnCodeMap.set(OPCode.OPE_BU_GANG, this.gangLayout);\n\n\n        this.btnSkelMap.set(OPCode.OPE_PASS, \"icon_guo\");\n        this.btnSkelMap.set(OPCode.OPE_RIGHT_CHI, \"icon_chi\");\n        this.btnSkelMap.set(OPCode.OPE_MIDDLE_CHI, \"icon_chi\");\n        this.btnSkelMap.set(OPCode.OPE_LEFT_CHI, \"icon_chi\");\n        this.btnSkelMap.set(OPCode.OPE_PENG, \"icon_peng\");\n        this.btnSkelMap.set(OPCode.OPE_QIANG_PENG, \"icon_peng\");\n        this.btnSkelMap.set(OPCode.OPE_HU, \"icon_hu\");\n        this.btnSkelMap.set(OPCode.OPE_ZI_MO, \"icon_zimo\");\n        this.btnSkelMap.set(OPCode.OPE_AN_GANG, \"icon_gang\");\n        this.btnSkelMap.set(OPCode.OPE_GANG, \"icon_gang\");\n        this.btnSkelMap.set(OPCode.OPE_BU_GANG, \"icon_gang\");\n    }\n\n\t/** 开始更新时间 */\n\tstartOperationTime() {\n        this.stopSchedulerOnce(this._handlerTimeUpdate);\n\t\tthis._handlerTimeUpdate = null;\n        let timeOut:number = RoomMgr.getInstance().getTimeOut(GameStatus.OPERATION);\n        this._handlerTimeUpdate = this.addSchedulerOnce(timeOut, Utils.handler(this, this.resetView))\n\t}\n    \n\n    //点击操作,发送操作code  碰/杠/胡/过\n    opClick(opInfo:Common.IOpGroup) {\n        let req: Game.ISendOperation = {\n            opCard:OperationMgr.getInstance().getPassNumber(),\n\t\t\topCode:opInfo.opCode,\n\t\t\topCards:OperationMgr.getInstance().getOprationListNumber(opInfo.opCode,0),\n\t\t\tseatId:OperationMgr.getInstance().seatId,\n\t\t\tuserId:OperationMgr.getInstance().userId\n        } \n        EventManager.dispatch(GameEvent.SEND_PLAYER_OPERATION, req);\n        OperationMgr.getInstance().myOpCode = opInfo.opCode;\n        this.resetView();\n    }\n\n    closeOpInfo(){\n        this.resetView();\n    }\n\n    getShowBtn = function (code: number): Layout {\n        for (let [opCode, btn] of this.btnCodeMap) {\n            if (code == opCode) {\n                return btn;\n            }\n        }\n        return null;\n    }\n\n    \n\n    updateOpration(resp:Game.IOperation){\n        this.resetView();\n        //抓牌\n        if(resp.opGroups.length === 1){\n            return;\n        }\n        console.log(\"updateOpration______________\",resp.opGroups);\n        this.opTypeArr = [];\n        resp.opGroups.forEach((opInfo:Common.IOpGroup) => {\n            let layout = this.getShowBtn(opInfo.opCode);\n            console.log(\"==this.btnCodeMap==\", this.btnCodeMap, opInfo,layout)\n            if (layout) {\n                layout.node.active = true;\n                let info:OpType = {code:opInfo.opCode,node:layout};\n                this.opTypeArr.push(info);\n            }\n            \n            if (layout instanceof Layout) {\n                layout.node.active = true;\n                var card:Node= layout.node.getChildByName(\"Card\")\n                if(card){\n                    card.getComponent(Card).setCardByte(OperationMgr.getInstance().getPassNumber());\n                }\n                let opNode:Node = layout.node.getChildByName(\"op\");\n                let skel = opNode.getChildByName(\"sk\").getComponent(sp.Skeleton);\n                this.changeSkin(opInfo.opCode,skel);\n                opNode.off(Node.EventType.TOUCH_END);\n                opNode.on(Node.EventType.TOUCH_END, () => {\n                    this.opClick(opInfo);\n                }, this);\n            }\n            \n        });\n        this.findOpTypesWithSameNodeAndCode(this.opTypeArr);\n        this.startOperationTime();\n    }\n\n    changeSkin(opcode:number,skel?:sp.Skeleton){\n\t\tresLoader.load(FXJRes.Spine_op.bundle, spineConfig.path, sp.SkeletonData, (err, spineAsset)=> {\n\t\t\tif(err || this.player === null) {\n\t\t\t\tconsole.log(\"Failed to load asset\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// let comp = this.getComponent('sp.Skeleton') as sp.Skeleton;\n\t\t\tthis.player.skeletonData = spineAsset!;\n\t\t\tlet ani = this.player.setAnimation(0, 'idle2', true);\n\t\t\tconsole.log(\"Load Success\");\n\t\t})\n\t}\n\n    findOpTypesWithSameNodeAndCode(opTypes: OpType[]) {\n        const opTypesMap: Map<string, OpType[]> = new Map();\n    \n        // 遍历 opTypes 数组，将具有相同 node 和 code 的 OpType 放入映射中\n        for (const opType of opTypes) {\n            const key = opType.node.name;\n            if (!opTypesMap.has(key)) {\n                opTypesMap.set(key, []);\n            }\n            opTypesMap.get(key)?.push(opType);\n        }\n        var opMap: Map<string, OpType[]> = new Map();\n        for (const [key, opTypes] of opTypesMap) {\n            if(opTypes.length > 1){\n                opMap.set(key, opTypes);\n            }else{\n                if(OperationMgr.getInstance().isMoreOpration(opTypes[0].code)){\n                    opMap.set(key, opTypes);\n                }\n            }\n        }\n        console.log(\"Key_______________________\",opMap);\n        // 从映射中提取所有具有相同 node 和 code 的 OpType 数组\n        for (const [name, group] of opMap) {\n            let node = instantiate(this.CardItemPrefab);\n            let cardItem:Carditem = node.getComponent(Carditem);\n            cardItem.updateCardItemProp(group);\n        }\n        this.opBtns.getComponent(Layout).updateLayout();\n    }\n\n    resetView() {\n        this.guoLayout.node.active = false;\n        this.huLayout.node.active = false;\n        this.zimoLayout.node.active = false;\n        this.ganghuaLayout.node.active = false;\n        this.gangLayout.node.active = false;\n        this.pengLayout.node.active = false;\n        this.chiLayout.node.active = false;\n    }\n}"]}