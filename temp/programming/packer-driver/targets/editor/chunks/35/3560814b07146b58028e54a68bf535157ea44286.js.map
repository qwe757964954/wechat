{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/Players/MyPlayerCard.ts"],"names":["Animation","animation","AnimationClip","instantiate","Node","Vec3","_decorator","GCache","EventManager","BaseComponent","OperationMgr","PlayerMgr","OPCode","GameEvent","CardUtil","NodeCardCtr","drawCardDisRatio","MjSize","ccclass","property","MyPlayerCard","tooltip","type","selectedNode","_drawCardNode","_mjList","myHandCardY","_slotIndex","_drawByte","_playHandCardCb","drawByte","newValue","onInitModuleEvent","stackAnim","indexList","tByte","insertIndex","cb","pos","length","removeHandCard","node","getPosition","setPosition","removeDrawCard","addHandCard","pop","getInstance","getMyhands","startPosDraw","endPosDraw","x","width","y","z","acDraw","duration","trackDraw","VectorTrack","componentsCount","path","TrackPath","toProperty","drawX","channels","curve","assignSorted","value","animDrawCom","getComponent","addComponent","removeAll","EventType","FINISHED","on","addTrack","defaultClip","play","removeFromParent","console","log","index","insertNode","nodeCardTemplate","cardValue","setCardByte","active","name","addChild","splice","updateHandPositionAndName","drawCard","off","TOUCH_END","event","playSelectAnim","target","getLastPosition","filter","item","undefined","i","handNode","getHandCardByIndex","playDrawCard","toOutCard","playCardFromHandAnim","remove","updateCard","sort","a","b","removeNode","makeSlotAnim","ac","track","_","mjNode","startPos","endPos","getHandPosition","animCom","drawCardToSlot","posx","posy","posz","easingMethod","getListBytes","bytes","node_byte","byte","push","useByteFindIndexs","indexs","forEach","getNodeIndex","findIndex","theNode","addHandCards","valueList","stackCount","hasDrawCard","handCardCount","playUnselectAnim","trackPos","Desk","turnMe","onSendCard","dumpMyHands","getSendCardIndex","getMajiangValue","req","opCard","opCode","OPE_OUT_CARD","opCards","seatId","userId","dispatch","CLOSE_OPRATION_INFO","SEND_PLAYER_OPERATION","resetView","removeAllChildren"],"mappings":"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","sourcesContent":["\nimport { Animation, animation, AnimationClip, instantiate, Node, Vec3, _decorator } from 'cc';\nimport { GCache } from '../../../../cache/GCache';\nimport { EventManager } from '../../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../../framework/vc/BaseComponent';\nimport { OperationMgr } from '../../cache/OperationMgr';\nimport { PlayerMgr } from '../../cache/PlayerMgr';\nimport { OPCode } from '../../common/FXJConfig';\nimport { GameEvent } from '../../common/GameEvent';\nimport { Game } from '../../common/idl/Game';\nimport { CardUtil } from '../../util/CardUtil';\nimport { NodeCardCtr } from '../NodeCardCtr';\nimport { drawCardDisRatio, MjSize } from './CardConfigs';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = MyPlayer\n * URL = db://assets/package/game/scripts/MyPlayer.ts\n * Time = Fri Aug 11 2023 11:08:16 GMT+0800 (中国标准时间)\n * Author = qwe757964\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('MyPlayerCard')\nexport class MyPlayerCard extends BaseComponent {\n\tpublic selectedNode: Node | null = null;\n\t\n    public _drawCardNode: Node | null = null;\n\n\tpublic\t_mjList:Node[] = [];\n\t\n\tprivate myHandCardY: number = 0;\n\n\t// 手牌模板\n\t@property({ tooltip: \"手牌模板\", type: Node })\n\tprivate nodeCardTemplate: Node | null = null;\n\n\t_slotIndex: number;\n\tprivate _drawByte: number;\n\n\t_playHandCardCb: any;\n\n\tget drawByte(): number {\n\t\treturn this._drawByte;\n\t}\n\n\tset drawByte(newValue: number) {\n\t\tthis._drawByte = newValue;\n\t}\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n\t//移除对应的索引的牌去构成stack, 刷新整体node的位置\n\tstackAnim(indexList: number[], tByte?: number, insertIndex?: number, cb?:any) {\n\t\tlet pos = new Vec3();\n\t\tif(indexList.length === 2){\n            this.removeHandCard(indexList);\n\t\t\t//碰牌直接移除两张牌, 刷新位置\n\t\t\tpos = this.node.getPosition();\n\t\t\t// Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n\t\t\tthis.node.setPosition(pos);\n\t\t}else if (indexList.length == 3){\n            this.removeHandCard(indexList);\n\t\t\t//杠牌直接移除三张牌, 刷新位置\n\t\t\tpos = this.node.getPosition();\n            // Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n            this.node.setPosition(pos);\n            return\n\t\t}else if (indexList.length == 4 && insertIndex!==null){\n            insertIndex = insertIndex - indexList.length;\n            this.removeHandCard(indexList);\n\t\t\tthis.removeDrawCard();\n            this.addHandCard(tByte, insertIndex);\n            pos = this.node.getPosition();\n            // Vec3.add(pos, new Vec3(0, 0, 0), new Vec3(0, 0, 0));\n            this.node.setPosition(pos);\n            return\n\t\t}\n        /*\n\t\t//吃碰时候移除两张,平移一张到抽牌区 \n        let startPos = pos;\n        let endPos = new Vec3();\n        Vec3.add(endPos, startPos, startPos) \n        \n        let ac = new AnimationClip()\n        ac.duration = 0.1\n        let track = new animation.VectorTrack();\n        track.componentsCount = 3;\n        track.path = new animation.TrackPath().toProperty(\"position\")\n        let [x] = track.channels();\n       \n        x.curve.assignSorted([\n            [0, {value: startPos.x}],\n            [0.1, {value: endPos.x}]\n        ])\n\n        let animCom: Animation;\n\n        if (this.node.getComponent(Animation) == null)\n        {\n            animCom = this.node.addComponent(Animation)\n        }\n        else\n        {\n            animCom = this.node.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        } \n\n        if(cb)\n        {\n            animCom.on(Animation.EventType.FINISHED, cb, this)\n            // this._stackCb = cb\n        }\n\n        ac.addTrack(track)\n        animCom.defaultClip = ac\n        animCom.play(); \n        */\n\n\n        this._drawCardNode = this._mjList.pop();\n        this.drawByte =  PlayerMgr.getInstance().getMyhands().pop();\n        let startPosDraw = this._drawCardNode.getPosition();\n        let endPosDraw = new Vec3(startPosDraw.x + MjSize.width, startPosDraw.y, startPosDraw.z)\n        \n        let acDraw = new AnimationClip()\n        acDraw.duration = 0.1\n        let trackDraw = new animation.VectorTrack();\n        trackDraw.componentsCount = 3;\n        trackDraw.path = new animation.TrackPath().toProperty(\"position\")\n        let [drawX] = trackDraw.channels();\n       \n        drawX.curve.assignSorted([\n            [0, {value: startPosDraw.x}],\n            [0.1, {value: endPosDraw.x}]\n        ])\n\n        let animDrawCom: Animation;\n\n        if (this._drawCardNode.getComponent(Animation) == null)\n        {\n            animDrawCom = this._drawCardNode.addComponent(Animation)\n        }\n        else\n        {\n            animDrawCom = this._drawCardNode.getComponent(Animation)\n            animDrawCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        if(cb)\n        {  \n            animDrawCom.on(Animation.EventType.FINISHED, cb, this)\n            // this._stackCb = cb\n        }\n\n        acDraw.addTrack(trackDraw)\n        animDrawCom.defaultClip = acDraw\n        animDrawCom.play(); \n        \n\t}\n\n\t//移除一张手牌, 没有动画时的接口, 未来会使用动画接口出牌\n    removeDrawCard() {\n        if (this._drawCardNode) {\n            this._drawCardNode.removeFromParent();\n            this._drawCardNode = null;\n        }\n        else {\n            console.log(\"当前没有渲染牌,无法移除\")\n        }\n    }\n\t//添加一张牌到手牌的指定位置\n\taddHandCard(tByte: number, index: number) {\n\n        if (index > this._mjList.length) {\n            console.log(\"索引大于当前渲染手牌的数量请检查逻辑\", index)\n            return;\n        }\n\n        if (this._mjList.length >= 13) {\n            console.log(\"当前渲染手牌数量已满--> 13\", index)\n            return;\n        } \n\n\t\tlet insertNode = instantiate(this.nodeCardTemplate)\n\t\tlet cardValue = tByte;\n\t\tinsertNode.getComponent(NodeCardCtr).setCardByte(cardValue);\n\t\tinsertNode.active = true;        \n        insertNode.name = \"MJBlock\" + index\n\n        this.node.addChild(insertNode)\n\t\tthis._mjList.splice(index, 0, insertNode); // 在指定索引处插入对象\n\n        this.updateHandPositionAndName()\n    }\n\n\t//抓一张牌\n    drawCard(tByte: number) {\n\t\tthis.drawByte = tByte;\n\t\tthis._drawCardNode = instantiate(this.nodeCardTemplate)\n\t\tthis._drawCardNode.getComponent(NodeCardCtr).setCardByte(tByte);\n\t\tthis._drawCardNode.active = true;\n\t\tthis.node.addChild(this._drawCardNode);\n\t\tthis._drawCardNode.off(Node.EventType.TOUCH_END);\n\t\tthis._drawCardNode.on(Node.EventType.TOUCH_END, (event) => {\n\t\t\tthis.playSelectAnim(event.target);\n\t\t}, this);\n\t\tthis._drawCardNode.setPosition(this.getLastPosition() + drawCardDisRatio * MjSize.width, 0, 0)\n\t}\n\n\tupdateHandPositionAndName(){\n        this._mjList = this._mjList.filter(item => item !== null && item !== undefined);\n\t\tfor (let i = 0; i < this._mjList.length; i++) {\n            let handNode = this._mjList[i]\n            handNode.name = \"MJBlock\" + i;\n            handNode.getComponent(NodeCardCtr).setCardByte(PlayerMgr.getInstance().getHandCardByIndex(i));\n\t\t\thandNode.off(Node.EventType.TOUCH_END);\n\t\t\thandNode.on(Node.EventType.TOUCH_END, (event) => {\n\t\t\t\tthis.playSelectAnim(event.target);\n\t\t\t}, this);\n            handNode.setPosition(MjSize.width / 2 + MjSize.width * i, 0, 0)\n        }\n\t}\n\n    \n\n    //将抓上来的牌打出去\n    playDrawCard( cb?: any){\n        let toOutCard = this._drawCardNode;\n        toOutCard.removeFromParent();\n        this._drawCardNode = null;        \n    }\n\tplayCardFromHandAnim(index: number,remove?: boolean,cb?: any) {\n\t\tthis._slotIndex = index;\n\n        let toOutCard = this._mjList[index]\n        if(remove){\n            this._mjList.splice(index, 1);\n        }else{\n            this._mjList[index] = null\n        }\n\t\ttoOutCard.removeFromParent();\n\t}\n\t\n\t//从手牌移除指定位置的一张或者多张牌，并且出牌之后，如果抓牌未移除，需要把抓的牌放到手牌中，抓牌为空\n    removeHandCard(indexList: number[], updateCard: boolean = false) {\n\t\tindexList.sort((a, b) => b - a)\n\t\t\n\t\tfor (let index of indexList) { \n            if (index < this._mjList.length) {  \n                let removeNode = this._mjList.splice(index, 1);\n                removeNode[0].removeFromParent();\n            } \n            else {\n                console.log(\"索引大于等于当前渲染手牌的数量请检查逻辑\", index)\n                return;\n            }\n        }   \n\n        if (updateCard)\n        {\n            this.updateHandPositionAndName()\n        }\n\n\t}\n\n\tmakeSlotAnim(index: number)\n    {\n        if (this._slotIndex == -1 || this._mjList[this._slotIndex] != null)\n        {\n            console.log(\"当前没有空的手牌位置,无法空出对应的索引位置\", this._slotIndex, index)\n\n            return;\n        }\n\n        if (this._slotIndex < index) // 2空  4\n        {\n\t\t\tfor (let i = this._slotIndex + 1; i <= index; i++)\n            {\n                let ac = new AnimationClip()\n                ac.duration = 0.2\n                let track = new animation.VectorTrack();\n                track.componentsCount = 3;\n                track.path = new animation.TrackPath().toProperty(\"position\")\n                let [x, _, z] = track.channels();\n                let mjNode = this._mjList[i];\n                let startPos = mjNode.getPosition() ;\n                let endPos = this.getHandPosition(i - 1);\n                \n                x.curve.assignSorted([\n                    [0, {value: startPos.x}],\n                    [0.2, {value: endPos.x}]\n                ])\n\n                z.curve.assignSorted([\n                    [0, {value: startPos.z}],\n                    [0.2, {value: endPos.z}]\n                ])\n\n                let animCom = mjNode.addComponent(Animation)\n                ac.addTrack(track)\n                animCom.defaultClip = ac\n                animCom.play(); \n            }\n\n            for (let i = this._slotIndex; i < index; i++)\n            {\n                this._mjList[i] = this._mjList[i + 1] // 同步平移在列表内的位置\n            }\n        }\n        else if(index < this._slotIndex) // 2  4空\n        {\n\n\t\t\tfor (let i = index; i < this._slotIndex; i++)\n            {\n                let ac = new AnimationClip() \n                ac.duration = 0.2\n                let track = new animation.VectorTrack();\n                track.componentsCount = 3;\n                track.path = new animation.TrackPath().toProperty(\"position\")\n                let [x, _, z] = track.channels();\n                let mjNode = this._mjList[i];\n                let startPos = mjNode.getPosition() ;\n                let endPos = this.getHandPosition(i + 1);\n\n                x.curve.assignSorted([\n                    [0, {value: startPos.x}], \n                    [0.2, {value: endPos.x}]\n                ])\n\n                z.curve.assignSorted([\n                    [0, {value: startPos.z}],\n                    [0.2, {value: endPos.z}]\n                ])\n\n                let animCom = mjNode.addComponent(Animation)\n                ac.addTrack(track)\n                animCom.defaultClip = ac\n                animCom.play(); \n            }\n\n            for (let i = this._slotIndex; i > index; i--)\n            {\n                this._mjList[i] = this._mjList[i - 1] // 同步平移在列表内的位置\n            }\n        }  \n        this._mjList[index] = null //平移后空出来的列表位置\n        this._slotIndex = index\n    }\n\n\t\n\tdrawCardToSlot(cb?: any){\n\t\tif (this._drawCardNode == null)\n        {\n            console.log(\"没有渲染抽牌节点, 抽牌到手牌动画失败\")\n            return;\n        }\n\n\t\tthis._mjList[this._slotIndex] = this._drawCardNode\n        this._drawCardNode = null\n        let startPos = this._mjList[this._slotIndex].getPosition()\n        let endPos = this.getHandPosition(this._slotIndex)\n\n        const ac = new AnimationClip();  \n\n        ac.duration = 0.5\n        \n        const track = new animation.VectorTrack();\n        track.componentsCount = 3;\n        track.path = new animation.TrackPath().toProperty(\"position\")\n        const [posx, posy, posz] = (track as animation.VectorTrack).channels();\n        posx.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.x}], \n            [0.1, {easingMethod : 2, value: startPos.x}], \n            [0.4, {easingMethod : 2, value: endPos.x}],\n            [0.5, {easingMethod : 2, value: endPos.x}]\n        ]);\n        posy.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y + 20}], \n            [0.4, {easingMethod : 2, value: startPos.y + 20}], \n            [0.5, {easingMethod : 2, value: endPos.y}]\n        ]);\n        posz.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.z}], \n            [0.1, {easingMethod : 2, value: startPos.z - 3.5}], \n            [0.4,{easingMethod : 2, value:  startPos.z - 3.5}],\n            [0.5,{easingMethod : 2, value:  endPos.z}]\n        ]);\n\n        let animCom: Animation;\n\n        if (this._mjList[this._slotIndex].getComponent(Animation) == null)\n        {\n            animCom = this._mjList[this._slotIndex].addComponent(Animation)\n        }\n        else\n        {\n            animCom = this._mjList[this._slotIndex].getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        if(cb)\n        {\n            animCom.on(Animation.EventType.FINISHED, cb, this)\n            this._playHandCardCb = cb\n        }\n\n        ac.addTrack(track)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t\t\n\t}\n\n\n\tgetListBytes():number[]{\n\t\tlet bytes:number[] = [];\n\t\tfor (let i = 0; i < this._mjList.length; i++) {\n\t\t\tlet node_byte: number = this._mjList[i].getComponent(NodeCardCtr).byte;\n\t\t\tbytes.push(node_byte);\n\t\t}\n\t\treturn bytes;\n\t}\n\n\tuseByteFindIndexs(bytes:number[]):number[]{\n\t\tlet indexs:number[] = [];\n\n\t\tbytes.forEach((byte) => {\n\t\t\tfor (let i = 0; i < this._mjList.length; i++) {\n\t\t\t\tlet node_byte: number = this._mjList[i].getComponent(NodeCardCtr).byte;\n\t\t\t\tif(byte === node_byte){\n\t\t\t\t\tindexs.push(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn indexs;\n\t}\n\n\tgetNodeIndex(node: Node)\n    {\n        return this._mjList.findIndex(theNode => theNode == node, this);\n    }\n\n\taddHandCards(valueList: number[], active: boolean, stackCount?: number, hasDrawCard: boolean = false)\n    {\n\t\tlet handCardCount =  valueList.length;\n        \n        if (hasDrawCard)\n        {\n            handCardCount = valueList.length - 1\n        }\n\n\t\tfor (let i = 0; i < handCardCount; i++)\n        { \n\t\t\tlet mjNode = instantiate(this.nodeCardTemplate)\n\t\t\tlet cardValue = valueList[i]\n\t\t\tmjNode.getComponent(NodeCardCtr).setCardByte(cardValue);\n\t\t\tmjNode.active = true;\n\t\t\tthis._mjList.push(mjNode);\n\t\t\tthis.node.addChild(mjNode);\n\t\t}\n\t\tthis.updateHandPositionAndName();\n\t\tif (hasDrawCard)\n        {\n            this.drawCard(valueList[handCardCount])\n            this._drawCardNode.active = active\n            // let myhands = valueList.slice(0, -1)\n            // PlayerMgr.getInstance().updateMyhands(myhands);\n        }\n\n\t}\n\n\tgetHandPosition(index: number){\n\t\treturn new Vec3(MjSize.width / 2 + MjSize.width * index, 0, 0)\n\t}\n\n\t\n    getLastPosition():number{\n\t\treturn MjSize.width / 2 + MjSize.width * (this._mjList.length - 1);\n\t}\n\n\tplaySelectAnim(node: Node){\n\t\tif(this.selectedNode){\n\t\t\tthis.playUnselectAnim(this.selectedNode);\n\t\t\tif(this.selectedNode == node){\n\t\t\t\tthis.selectedNode = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedNode = node\n\n        let startPos = this.selectedNode.getPosition()\n        \n        const ac = new AnimationClip();  \n\n        ac.duration = 0.1\n\n        const trackPos = new animation.VectorTrack();\n        trackPos.componentsCount = 3;\n        trackPos.path = new animation.TrackPath().toProperty(\"position\")\n        const [x, y, z] = (trackPos as animation.VectorTrack).channels();\n        x.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.x}], \n            [0.1, {easingMethod : 2, value: startPos.x}]\n        ]);\n        y.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y + 20}]\n        ]);\n        // z.curve.assignSorted([\n        //     [0, {easingMethod : 2, value: startPos.z}], \n        //     [0.1,{easingMethod : 2, value:  startPos.z - 0.8}]\n        // ]);\n\n        let animCom: Animation;\n\n        if (this.selectedNode.getComponent(Animation) == null)\n        {\n            animCom = this.selectedNode.addComponent(Animation)\n        }\n        else\n        {\n            animCom = this.selectedNode.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n        }\n\n        ac.addTrack(trackPos)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t}\n\tplayUnselectAnim(node: Node){\n\t\tlet startPos = this.selectedNode.getPosition();\n\n\t\tconst ac = new AnimationClip();  \n\n        ac.duration = 0.1 \n \n        const trackPos = new animation.VectorTrack();\n        trackPos.componentsCount = 3;\n        trackPos.path = new animation.TrackPath().toProperty(\"position\")\n        const [x, y, z] = (trackPos as animation.VectorTrack).channels();\n        x.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.x}], \n            [0.1, {easingMethod : 2, value: startPos.x}]\n        ]);\n        y.curve.assignSorted([\n            [0, {easingMethod : 2, value: startPos.y}], \n            [0.1, {easingMethod : 2, value: startPos.y - 20}]\n        ]);\n        // z.curve.assignSorted([ \n        //     [0, {easingMethod : 2, value: startPos.z}], \n        //     [0.1,{easingMethod : 2, value:  startPos.z + 0.8}]\n        // ]); \n\n        let animCom: Animation;\n\n        if (node.getComponent(Animation) == null)\n        {\n            animCom = node.addComponent(Animation)\n        }\n        else\n        {\n            animCom = node.getComponent(Animation)\n            animCom.removeAll(Animation.EventType.FINISHED)\n\t\t\tif(GCache.Desk.turnMe){\n\t\t\t\tlet byte:number = this.selectedNode.getComponent(NodeCardCtr).byte;\n\t\t\t\tthis.onSendCard(byte);\n\t\t\t}\n        }\n\n        ac.addTrack(trackPos)\n\n        animCom.defaultClip = ac\n\n        animCom.play()\n\t}\n\n\t//出牌\n\tonSendCard(byte:number){\n        PlayerMgr.getInstance().dumpMyHands();\n\t\tlet index:number = OperationMgr.getInstance().getSendCardIndex(byte);\n        console.log(\"onSendCard______\",index,byte,CardUtil.getMajiangValue(byte));\n        let req: Game.ISendOperation = {\n            opCard:byte,\n\t\t\topCode:OPCode.OPE_OUT_CARD,\n\t\t\topCards:[byte],\n\t\t\tseatId:OperationMgr.getInstance().seatId,\n\t\t\tuserId:OperationMgr.getInstance().userId\n            \n        }\n        EventManager.dispatch(GameEvent.CLOSE_OPRATION_INFO);\n        EventManager.dispatch(GameEvent.SEND_PLAYER_OPERATION, req);\n\t}\n\n\t//游戏开始或结束，清空手牌区，包括抓牌，保持初始状态\n    resetView() {\n        this.node.removeAllChildren();\n        this._mjList = [];\n        this._drawCardNode = null;\n        // this.initNodePos();\n    }\n}\n\n"]}