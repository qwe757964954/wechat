{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/gnet/GPBAdaptive.ts"],"names":["GPBAdaptive","GetPHPSeq","PHPSeqID","GCache","ClientInfo","Utils","GCmdMapping","GlobalCMDHead","constructor","getSendPacket","headCmd","action","callback","data","isCompress","outtime","array","buffer","generatPacket","cmd","body","PHP_CMD_CONSTANT","phpSendCmd","getReqHeadByCmd","packetInfo","getJsonTable","table_verify","key","Object","prototype","hasOwnProperty","call","isCompressByHeadCmd","SEND_PHP_REQUEST","RESPONSE_PHP_REQUEST","SEND_PHP_REQUEST_NEW","RESPONSE_PHP_REQUEST_NEW","SERVER_SEND_HEART","SERVER_HEART_RESPONSE","info","timestamp","time","app","PlatFormAppID","ssid","User","getDataUser","mid","isNew","getActionByCmd","hall_version","HallVer","getUserMid","getLastlocalMid"],"mappings":"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","sourcesContent":["/**\n * Name = GPBAdaptive\n * URL = db://assets/proj/GPBAdaptive.ts\n * Time = Mon Apr 18 2022 13:03:36 GMT+0800 (中国标准时间)\n * Author = xueya\n * 数据的包装\n */\n\nimport { GCache } from \"../../cache/GCache\";\nimport { ClientInfo } from \"../../config/GameConfig\";\nimport { IRequestProtocol, } from \"../../framework/network/NetInterface\";\nimport { Utils } from \"../../framework/Utils\";\nimport { GCmdMapping } from \"./GCmdMapping\";\nimport { GlobalCMDHead } from \"./GlobalCMD\";\n\n//请求唯一ID php请求时会带给服务器 返回时会带给客户端\nexport let PHPSeqID = -1\nexport function GetPHPSeq() {\n\tPHPSeqID = PHPSeqID + 1\n\treturn PHPSeqID\n}\n\nexport class GPBAdaptive {\n\n\t//实例化\n\tconstructor() {\n\n\t};\n\n\t/**\n\t * 包装发送的结构体\n\t * @param headCmd 头部命令\n\t * @param action 命令关键字\n\t * @param callback 回调\n\t * @param data 数据\n\t * @param isCompress 是否压缩\n\t * @param outtime 超时时间\n\t * @returns \n\t */\n\tgetSendPacket(headCmd, action, callback, data, isCompress, outtime) {\n\t\tlet array: IRequestProtocol = {\n\t\t\theadCmd: headCmd,\n\t\t\taction: action,\n\t\t\tcallback: callback,\n\t\t\tisCompress: isCompress,\n\t\t\tdata: data,\n\t\t\tbuffer: null,\n\t\t\touttime: outtime\n\t\t}\n\t\treturn array\n\t}\n\t/**包装正文数据 */\n\tgeneratPacket(cmd: number, body: any) {\n\t\tif (cmd < GlobalCMDHead.PHP_CMD_CONSTANT) {\n\t\t\treturn [cmd, body]\n\t\t}\n\n\t\t//数据进行组装\n\t\tlet phpSendCmd = GCmdMapping.getReqHeadByCmd(cmd)\n\t\tlet packetInfo = this.getJsonTable(cmd)\n\t\tpacketInfo[\"cmd\"] = cmd - GlobalCMDHead.PHP_CMD_CONSTANT  //subCmd\n\t\tpacketInfo[\"seq\"] = GetPHPSeq() //请求序列号，此序列号会带给Php，当php回复时会带给客户端\n\n\t\tbody = Utils.table_verify(body)\n\n\t\tfor (let key in body) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(body, key)) {\n\t\t\t\tpacketInfo[key] = body[key]\n\t\t\t}\n\t\t}\n\t\treturn [phpSendCmd, packetInfo]\n\t}\n\t/**根据头部命令是否需要压缩 */\n\tisCompressByHeadCmd(headCmd: number = null) {\n\t\tlet isCompress = false\n\t\tswitch (headCmd) {\n\t\t\tcase GlobalCMDHead.SEND_PHP_REQUEST:\n\t\t\t\tisCompress = true\n\t\t\t\tbreak;\n\t\t\tcase GlobalCMDHead.RESPONSE_PHP_REQUEST:\n\t\t\t\tisCompress = true\n\t\t\t\tbreak;\n\t\t\tcase GlobalCMDHead.SEND_PHP_REQUEST_NEW:\n\t\t\t\tisCompress = true\n\t\t\t\tbreak;\n\t\t\tcase GlobalCMDHead.RESPONSE_PHP_REQUEST_NEW:\n\t\t\t\tisCompress = true\n\t\t\t\tbreak;\n\t\t\tcase GlobalCMDHead.SERVER_SEND_HEART:  //发送心跳包\n\t\t\t\tisCompress = false\n\t\t\t\tbreak;\n\t\t\tcase GlobalCMDHead.SERVER_HEART_RESPONSE: //服务器回应心跳包\n\t\t\t\tisCompress = false\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn isCompress\n\t}\n\n\t/**补全发送指令的数据 */\n\tprivate getJsonTable(cmd: number) {\n\t\tlet info: any = {};\n\t\tinfo = {\n\t\t\ttimestamp: Utils.time(),\n\t\t\tapp: ClientInfo.PlatFormAppID,\n\t\t\tssid: GCache.User.getDataUser(\"ssid\", \"\"),  //会话ID 暂时为空 一般保存登录之后的\n\t\t\tmid: 0,    //暂时为0,int 用户ID(地区id 用于区分不同地区，一般逻辑参数之类的都使用这个id)\n\t\t\tisNew: 1,  //代表是统一大厅\n\t\t\taction: GCmdMapping.getActionByCmd(cmd),\n\t\t\thall_version: ClientInfo.HallVer\n\t\t}\n\t\tlet mid = GCache.User.getUserMid();\n\t\tif (mid == null) {\n\t\t\tmid = GCache.User.getLastlocalMid();\n\t\t\tif (mid == null) {\n\t\t\t\tmid = 0\n\t\t\t}\n\t\t}\n\t\tinfo.mid = mid\n\t\treturn info;\n\t}\n\n\n}\n\n"]}