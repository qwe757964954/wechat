{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/gui/button/ButtonSimple.ts"],"names":["Component","error","EventHandler","game","Node","_decorator","ccclass","property","menu","ButtonSimple","tooltip","type","touchCount","touchtEndTime","_touchHandler","_touchParam","onLoad","regTouchEvent","node","on","EventType","TOUCH_START","onTouchtStart","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","Interactable","bool","interactable","setCustomEventHandler","findNode","component","handler","customEventData","clickFunc","target","setCustomEventData","addTouchEventListener","callback","param","setOnlyOnce","isOnlyonce","onlyOnce","delayTime","time","delay_time","event","propagationStopped","totalTime","emit","onDestroy","off"],"mappings":"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","sourcesContent":["/**\n * Name = ButtonSimple\n * URL = db://assets/framework/gui/button/ButtonSimple.ts\n * Time = Thu Apr 07 2022 13:02:05 GMT+0800 (中国标准时间)\n * Author = xueya\n * 延迟按钮点击(触摸事件)\n */\nimport { Component, error, EventHandler, EventTouch, game, Node, _decorator } from \"cc\";\n\nconst { ccclass, property, menu } = _decorator;\n\n@ccclass(\"ButtonSimple\")\n//方便编辑器识别的菜单项目\n@menu('gui/button/ButtonSimple')\nexport default class ButtonSimple extends Component {\n    @property({\n        tooltip: \"是否只能触发一次\"\n    })\n    private onlyOnce: boolean = false;\n\n    @property({\n        tooltip: \"每次触发间隔(毫秒)\"\n    })\n    private delay_time: number = 500;\n\n    @property({\n        tooltip: \"按钮是否可交互,这一项未选中时，按钮处于事件禁用状态\"\n    })\n    private interactable: boolean = true;\n\n    @property({\n        tooltip: \"点击回调监听函数\",\n        type: EventHandler\n    })\n    private clickFunc = new EventHandler();\n    //点击次数\n    private touchCount = 0;\n\n    private touchtEndTime = 0;\n    /** 自定义点击回调 */\n    private _touchHandler: Function = null;\n    /** 自定义点击传递数据 */\n    private _touchParam = null;\n\n    onLoad() {\n        this.regTouchEvent();\n    }\n    /** 注册定义事件 */\n    public regTouchEvent() {\n        if (!this.node) {\n            return;\n        }\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchtStart, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n    /**\n     * 按钮是否可交互\n     * @param bool \n     */\n    set Interactable(bool: boolean) {\n        if (typeof (bool) != \"boolean\") {\n            error(`setInteractable 参数类型传递错误 期待:boolean 结果:${typeof (bool)}`)\n            return;\n        }\n        this.interactable = bool == null ? true : bool;\n    }\n    /**\n     * 按钮是否可交互\n     */\n    get Interactable(): boolean {\n        return this.interactable;\n    }\n    /**\n     * 公开:设置自定义点击函数\n     * @param findNode 要绑定的函数所在的组件类绑定的节点\n     * @param component 要绑定的函数所在的组件\n     * @param handler 要绑定的函数\n     * @param customEventData 自定义传递数据\n     */\n    public setCustomEventHandler(findNode: Node = null, component: string = null, handler: string = null, customEventData: string = null) {\n        this.clickFunc.target = findNode;\n        this.clickFunc.component = component;\n        this.clickFunc.handler = handler;\n        this.setCustomEventData(customEventData);\n    };\n    /**\n     * 公开:设置自定义点击传递数据\n     * @param customEventData 自定义传递数据\n     */\n    public setCustomEventData(customEventData = null) {\n        this.clickFunc.customEventData = customEventData;\n        this._touchParam = customEventData;\n    };\n\n    /**\n     * 公开:设置监听函数\n     * @param callback 要绑定的函数\n     * @param param 要传递的参数\n     */\n    public addTouchEventListener(callback: Function = null, param = null) {\n        this._touchHandler = callback;\n        this.setCustomEventData(param);\n    }\n    /** 公开：设置只能点击一次 */\n    public setOnlyOnce(isOnlyonce: boolean) {\n        this.onlyOnce = isOnlyonce || false\n    }\n    /** 公开：设置延迟时间 单位:毫秒 */\n    public set delayTime(time: number) {\n        this.delay_time = time || 500\n    }\n\n    /** 触摸开始 */\n    protected onTouchtStart(event: EventTouch) {\n    }\n\n    /** 触摸按下 */\n    protected onTouchEnd(event: EventTouch) {\n        if (this.onlyOnce) {\n            if (this.touchCount > 0) {\n                event.propagationStopped = true;\n                return;\n            }\n            this.touchCount++;\n        }\n\n        // 防连点500毫秒触发一次事件\n        if (game.totalTime - this.touchtEndTime >= this.delay_time) {\n            if (this.interactable) {\n                this.clickFunc?.emit([event, this.clickFunc?.customEventData])\n                if (this._touchHandler) {\n                    this._touchHandler(event, this._touchParam);\n                }\n            }\n        }\n        if (this.touchtEndTime && game.totalTime - this.touchtEndTime < this.delay_time) {\n            event.propagationStopped = true;\n        } else {\n            this.touchtEndTime = game.totalTime;\n        }\n    }\n    /** 触摸结束 */\n    protected onTouchCancel(event: EventTouch) {\n\n    }\n    onDestroy() {\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchtStart, this);\n        this.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\n        this.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    }\n}\n"]}