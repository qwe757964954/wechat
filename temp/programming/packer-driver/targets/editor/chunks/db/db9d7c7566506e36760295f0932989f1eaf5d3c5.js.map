{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/network/NetState.ts"],"names":["Network","game","sys","Platform","Logger","NetworkEvent","NetworkState","NetWorkName","instance","_instance","constructor","_state","UNKNOWN","_name","_callbackNetworkState","navigator","onLine","_callbackNetworkName","platform","WECHAT_GAME","_weixinInit","DESKTOP_BROWSER","_webInit","initNetWorkState","state","name","str","changeState","emit","CHANGE_STATE","changeName","CHANGE_NAME","_window","window","el","document","body","addEventListener","attachEvent","ononline","onoffline","isMobile","onLineHandler","offLineHandler","self","regWxNetWorkCallback","res","logNet","updateNetWorkType","NetWorkType","NONE","WIFI","online","ONLINE","ReportConf","isCanReport","OFFLINE"],"mappings":"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","sourcesContent":["/*\n * 检测监听网络状态 \n * web模式基于HTML5 API\n */\nimport { game, sys } from \"cc\";\nimport { Platform } from \"../../platform/Platform\";\nimport { Logger } from \"../log/Logger\";\n\nexport enum NetworkEvent {\n    /** 网络状态变化事件 */\n    CHANGE_STATE = \"NetworkEvent.CHANGE_STATE\",\n    /** 网络切换名称 */\n    CHANGE_NAME = \"NetworkEvent.CHANGE_NAME\",\n}\n\n/** 网络状态 */\nexport enum NetworkState {\n    /** 未知 */\n    UNKNOWN = \"unknown\",\n    /** 联网在线 */\n    ONLINE = \"online\",\n    /** 断网 */\n    OFFLINE = \"offline\"\n}\n/** 网络名称 */\nexport const NetWorkName = {\n    [\"WIFI\"]: \"wifi\",\t//wifi 网络\n    [\"2G\"]: \"2g\",      //2g 网络\n    [\"3G\"]: \"3g\",\t    //3g 网络\n    [\"4G\"]: \"4g\",\t    //4g 网络\n    [\"5G\"]: \"5g\",\t    //5g 网络\n    [\"UNKNOWN\"]: \"unknown\",\t//Android 下不常见的网络类型\n    [\"NONE\"]: \"none\",\t //无网络\n}\n/** 网络变化类 */\nexport class Network {\n    //1：wifi  2:2G  3:3G  4:4G  5:5G 6:未知 -1:未知或无网络\n    private _state: NetworkState = NetworkState.UNKNOWN;\n    private _name: string = NetWorkName.UNKNOWN;\n\n    private static _instance = null;\n    public static get instance(): Network {\n        if (!this._instance || this._instance == null) {\n            this._instance = new Network();\n        }\n        return this._instance;\n    }\n\n    constructor() {\n        this._callbackNetworkState(navigator.onLine);\n        this._callbackNetworkName(NetWorkName.UNKNOWN);\n        switch (sys.platform) {\n            case sys.Platform.WECHAT_GAME:\n                this._weixinInit();\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                this._webInit();\n                break;\n            default:\n                break;\n        }\n        this.initNetWorkState();\n    }\n\n    /**\n     * 获取网络状态\n     */\n    get state(): NetworkState {\n        return this._state;\n    }\n\n    /**\n     * 设置网络状态\n     */\n    set state(state) {\n        this._state = state;\n    }\n\n\n    /**\n     * 获取网络名称\n     */\n    get name(): string {\n        return this._name;\n    }\n    /** \n     * 设置网络名称\n     */\n    set name(str: string) {\n        this._name = str || NetWorkName.UNKNOWN;\n    }\n    //状态改变\n    private changeState(state: NetworkState) {\n        if (this._state === state) {\n            return;\n        }\n        this._state = state;\n        game.emit(NetworkEvent.CHANGE_STATE)\n    }\n\n    //切换网络\n    private changeName(name: string) {\n        if (this._name === name) {\n            return;\n        }\n        this._name = name;\n        game.emit(NetworkEvent.CHANGE_NAME)\n    }\n\n    /** web平台注册 */\n    private _webInit() {\n        let _window = <any>window;\n        let el: any = document.body;\n        if (el.addEventListener) {\n            _window.addEventListener(\"online\", () => {\n                this._callbackNetworkState(true)\n            }, true);\n            _window.addEventListener(\"offline\", () => {\n                this._callbackNetworkState(false)\n            }, true);\n        }\n        else if (el.attachEvent) {\n            _window.attachEvent(\"ononline\", () => {\n                this._callbackNetworkState(true)\n            });\n            _window.attachEvent(\"onoffline\", () => {\n                this._callbackNetworkState(false)\n            });\n        }\n        else {\n            _window.ononline = () => {\n                this._callbackNetworkState(true)\n            };\n            _window.onoffline = () => {\n                this._callbackNetworkState(false)\n            };\n        }\n\n        // PC模式用 online.js判断网络连接\n        if (!sys.isMobile) {\n            (<any>window).onLineHandler = () => {\n                this._callbackNetworkState(true);\n            }\n            (<any>window).offLineHandler = () => {\n                this._callbackNetworkState(false);\n            }\n        }\n    }\n    /** wx平台注册 */\n    private _weixinInit() {\n        const self = this;\n        Platform.regWxNetWorkCallback((res) => {\n            Logger.logNet(\"网络状态改变：\", res);\n            if (res && res[\"networkType\"]) {\n                self._callbackNetworkName(res[\"networkType\"]);\n            } else {\n                self._callbackNetworkName(NetWorkName.UNKNOWN);\n            }\n            if (res && res[\"isConnected\"] == true) {\n                self._callbackNetworkState(true);\n            } else {\n                self._callbackNetworkState(false);\n            };\n        })\n    }\n    /** 初始化网络状态 */\n    initNetWorkState() {\n        const self = this;\n        Platform.updateNetWorkType(() => {\n            switch (Platform.NetWorkType) {\n                case -1:\n                    self._callbackNetworkName(NetWorkName.NONE);\n                    self._callbackNetworkState(false);\n                    break;\n                case 1:\n                    self._callbackNetworkName(NetWorkName.WIFI);\n                    self._callbackNetworkState(true);\n                    break;\n                case 2:\n                    self._callbackNetworkName(NetWorkName[\"2G\"]);\n                    self._callbackNetworkState(true);\n                    break;\n                case 3:\n                    self._callbackNetworkName(NetWorkName[\"3G\"]);\n                    self._callbackNetworkState(true);\n                    break;\n                case 4:\n                    self._callbackNetworkName(NetWorkName[\"4G\"]);\n                    self._callbackNetworkState(true);\n                    break;\n                case 5:\n                    self._callbackNetworkName(NetWorkName[\"5G\"]);\n                    self._callbackNetworkState(true);\n                    break;\n                case 6:\n                    self._callbackNetworkName(NetWorkName.UNKNOWN);\n                    self._callbackNetworkState(true);\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    /** 网络状态改变 */\n    private _callbackNetworkState(online: boolean) {\n        if (online) {\n            this.changeState(NetworkState.ONLINE);\n            Logger.ReportConf.isCanReport = true;\n        }\n        else {\n            this.changeState(NetworkState.OFFLINE);\n            Logger.ReportConf.isCanReport = false;\n        }\n    }\n    /** 网络名称改变 */\n    private _callbackNetworkName(name: string) {\n        this.changeName(name);\n    }\n\n}"]}