{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/RecommendPop.ts"],"names":["RecommendPop","GConstants","StoreKey","Encrypt","LocalStorage","Utils","BaseCache","constructor","superClass","__User","_popData","_hallPopTime","_gamePopTime","_popVersion","_newPopConfig","_newPopVersion","_popOrderData","_popOrderVersion","_popNumLimitData","_popNumLimitConfig","_popDayCountData","PopNumLimitData","PopData","getIntoHallPropData","clone","PopupPos","POS_LOGIN","getIntoGamePropData","POS_INTO_ROOM","getIntoHallPopTime","getIntoGamePopTime","updatePopData","body","table_verify","key","Object","prototype","hasOwnProperty","call","Number","sort_max","sorttwo_max","intoHallData","intoGameData","i","length","oldData","sort","number_valueOf","num","sorttwo","numtwo","newData","id","title","toolid","scene","push","a","b","recordSortID","detailHallData","detailGameData","index","updateLocalData","console","log","getPopInfoByPopID","popID","string_isEmpty","isNull","String","data","table_isEmpty","m","checkPopDayCount","info","date","timeToDataArray","time","dateKey","print","count","currowPopNum","updatePopDayCountData","updatePopNumLimitConfig","isInit","reducePopDayCountData","reloadLocalData","string_format","USER_RECOMMEND_POP","getUserMid","get","JsonDecode","popDayCountData","popConfig","popNumLimitConfig","popAllConfig","JsonEncode","set","getPopConfigVer","isNaN","getPopOrderConfigVer","getPopAllConfigVer","clearVer"],"mappings":"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","sourcesContent":["/**\n * Name = RecommendPop\n * URL = db://assets/cache/RecommendPop.ts\n * Time = Mon May 09 2022 14:43:04 GMT+0800 (中国标准时间)\n * Author = xueya\n * 推荐弹窗缓存\n */\n\nimport { GConstants, StoreKey } from \"../config/GameConstant\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { LocalStorage } from \"../framework/LocalStorage\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { User } from \"./User\";\n\nexport class RecommendPop extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n\n    /** 弹窗配置 */\n    private _popData = {};\n    /** 登录弹总次数置 */\n    private _hallPopTime = 0;\n    /** 入场弹窗总次数 */\n    private _gamePopTime = 0;\n\n\n    /** 弹窗配置版本号 */\n    private _popVersion = -1;\n\n\n    /** 新弹窗弹窗配置（原始数据） */\n    private _newPopConfig = {};\n    /** 弹窗配置版本号 */\n    private _newPopVersion = -1;\n\n    /** 弹窗顺序配置 */\n    private _popOrderData = {};\n    // /** 弹窗顺序配置（原始数据） */\n    // private _popOrderConfig = {};\n    /** 弹窗顺序配置版本号 */\n    private _popOrderVersion = -1;\n\n    // /** 弹窗限制次数配置 */\n    private _popNumLimitData = {};\n    /** 弹窗限制次数配置（原始数据） */\n    private _popNumLimitConfig = {};\n    // /** 弹窗限制次数配置版本号 */\n    // private _popNumLimitVersion = -1;\n\n    /** 弹窗每日次数数据 */\n    private _popDayCountData = {};\n    //实例化\n    constructor(superClass) {\n        super(\"RecommendPop\")\n        this.__User = superClass;\n    };\n    // /** 弹窗顺序配置 */\n    // get PopOrderData() {\n    //     return this._popOrderData;\n    // }\n    /** 弹窗限制次数配置 */\n    get PopNumLimitData() {\n        return this._popNumLimitData;\n    }\n    /** 弹窗配置 */\n    get PopData() {\n        return this._popData;\n    }\n    /** 获取进入大厅弹窗配置 */\n    getIntoHallPropData() {\n        return Utils.clone(this._popData[GConstants.PopupPos.POS_LOGIN]);\n    }\n    /** 获取进入游戏弹窗配置 */\n    getIntoGamePropData() {\n        return Utils.clone(this._popData[GConstants.PopupPos.POS_INTO_ROOM]);\n    }\n    /** 获取进入大厅弹窗总次数*/\n    getIntoHallPopTime() {\n        return this._hallPopTime\n    }\n    /** 获取进入游戏弹窗配置 */\n    getIntoGamePopTime() {\n        return this._gamePopTime\n    }\n    /**\n     * 更新弹窗配置数据\n    */\n    updatePopData(body) {\n        if (!body) {\n            return;\n        }\n        body[\"info\"] = Utils.table_verify(body[\"info\"], true);\n        this._popData = {};\n        for (let key in GConstants.PopupPos) {\n            if (Object.prototype.hasOwnProperty.call(GConstants.PopupPos, key)) {\n                this._popData[GConstants.PopupPos[key]] = [];\n            }\n        }\n        //大厅强弹总次数\n        this._hallPopTime = Number(body.sort_max) || 0;\n        //进入游戏强弹总次数\n        this._gamePopTime = Number(body.sorttwo_max) || 0;\n\n        let intoHallData = [];\n        let intoGameData = [];\n\n        for (let i = 0; i < body[\"info\"].length; i++) {\n            let oldData = body[\"info\"][i];\n            let sort = Utils.number_valueOf(oldData[\"sort\"], -1);\n            let num = Utils.number_valueOf(oldData[\"num\"], 0);\n            let sorttwo = Utils.number_valueOf(oldData[\"sorttwo\"], -1);\n            let numtwo = Utils.number_valueOf(oldData[\"numtwo\"], 0);\n            //当且仅当排序(sort)>0 且 次数不为0 有效 次数 -1为不限制\n            //登录场景 \n            if (sort >= 0 && num != 0) {\n\n                let newData = {\n                    id: oldData[\"id\"],\n                    title: oldData[\"title\"],\n                    toolid: oldData[\"toolid\"],\n                    sort: sort,\n                    num: num,\n                    scene: GConstants.PopupPos.POS_LOGIN,\n                }\n\n                intoHallData.push(newData);\n            }\n            //入场场景\n            if (sorttwo >= 0 && numtwo != 0) {\n                let newData = {\n                    id: oldData[\"id\"],\n                    title: oldData[\"title\"],\n                    toolid: oldData[\"toolid\"],\n                    sort: sorttwo,\n                    num: numtwo,\n                    scene: GConstants.PopupPos.POS_INTO_ROOM,\n                }\n                intoGameData.push(newData);\n            }\n        }\n        //排序：升序\n        intoHallData.sort((a, b) => {\n            return a[\"sort\"] - b[\"sort\"];\n        });\n        intoGameData.sort((a, b) => {\n            return a[\"sort\"] - b[\"sort\"];\n        })\n        //去重\n\n        //分组\n        let recordSortID = {};\n\n        let detailHallData = [];\n        let detailGameData = [];\n\n        for (let i = 0; i < intoHallData.length; i++) {\n            let index = null;\n            let sort = intoHallData[i][\"sort\"];\n\n            if (recordSortID[sort] == null) {\n                detailHallData.push([]);\n                index = detailHallData.length - 1;\n                recordSortID[sort] = index;\n            } else {\n                index = recordSortID[sort]\n            }\n            detailHallData[index].push(intoHallData[i]);\n        }\n        recordSortID = {};\n        for (let i = 0; i < intoGameData.length; i++) {\n            let index = null;\n            let sort = intoGameData[i][\"sort\"];\n            let toolid = intoGameData[i][\"toolid\"];\n\n            if (recordSortID[sort] == null) {\n                detailGameData.push([]);\n                index = detailGameData.length - 1;\n                recordSortID[sort] = index;\n            } else {\n                index = recordSortID[sort]\n            }\n            detailGameData[index].push(intoGameData[i]);\n        }\n        this._popData[GConstants.PopupPos.POS_LOGIN] = detailHallData;\n        this._popData[GConstants.PopupPos.POS_INTO_ROOM] = detailGameData;\n        this.updateLocalData();\n        console.log('弹窗配置数据', this._popData)\n    }\n    /**\n     * 根据弹窗ID 获取弹窗数据\n     * @param scene 场景 INTO_HALL/INTO_GAME \n     * @param popID \n     * @returns {id: oldData[\"id\"],title: oldData[\"title\"],toolid: oldData[\"toolid\"],sort: sort,num: num}\n     */\n    getPopInfoByPopID(scene, popID) {\n        popID = Number(popID);\n        if (Utils.string_isEmpty(scene) || Utils.isNull(popID)) {\n            return;\n        }\n        scene = String(scene);\n        let data = this._popData[scene];\n        if (Utils.table_isEmpty(data)) {\n            return null;\n        }\n        for (let i = 0; i < data.length; i++) {\n            for (let m = 0; m < data[i].length; m++) {\n                if (Number(data[i][m][\"toolid\"]) == popID) {\n                    return Utils.clone(data[i][m]);\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 检验弹窗每日限制次数\n     * @param info = { popup_id: info[\"pop_id\"], scene_id: popupPos, new_id: index, config_id: info[\"config_id\"] }\n     * @returns true:可弹出 false:不可弹出\n     */\n    checkPopDayCount(info): boolean {\n        if (Utils.table_isEmpty(info) == true) {\n            return false;\n        }\n        let scene = String(info[\"scene\"]);\n\n        let date = Utils.timeToDataArray(Utils.time());\n        let dateKey = `${date[\"year\"]}/${date[\"month\"]}/${date[\"day\"]}`;\n        this.print(`检验弹窗每日限制次数===>dataKey=${dateKey} info=`, this._popDayCountData, this._popNumLimitData)\n        if (this._popDayCountData[\"date\"] == null || String(this._popDayCountData[\"date\"]) != dateKey) {\n            this._popDayCountData = {\n                date: dateKey\n            }\n        }\n        //新配置\n        if (info[\"toolid\"] != null) {\n\n            if (Utils.table_isEmpty(this._popDayCountData[scene])) {\n                if (info[\"num\"] != 0) {\n                    return true;\n                } else {\n                    this._popDayCountData[scene] = {};\n                }\n            }\n\n            let count = Utils.number_valueOf(this._popDayCountData[scene][String(info[\"toolid\"])]);\n            let currowPopNum = Number(info[\"num\"]);\n            if (count < currowPopNum || currowPopNum == -1) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        return false;\n    }\n    /** 更新弹窗每日弹出次数数据 */\n    updatePopDayCountData(info) {\n        if (Utils.table_isEmpty(info) == true) {\n            return false;\n        }\n        let scene = String(info[\"scene\"]);\n\n        let id = String(info[\"toolid\"]);\n\n        if (!this._popDayCountData[scene]) {\n            this._popDayCountData[scene] = {};\n        }\n        if (this._popDayCountData[scene][id] == null) {\n            this._popDayCountData[scene][id] = 0;\n        }\n        this._popDayCountData[scene][id] = this._popDayCountData[scene][id] + 1;\n        this.updateLocalData();\n    }\n    /** 解析弹窗限制次数配置 */\n    updatePopNumLimitConfig(data, isInit: boolean = false) {\n        if (Utils.table_isEmpty(data)) {\n            return;\n        }\n\n        if (isInit == false) {\n            this.updateLocalData();\n        };\n    }\n    /** 减少1次弹窗弹出次数数据 目前仅有限时礼包有用到，详情看recommendmanager判断处 */\n    reducePopDayCountData(scene, id) {\n        if (scene == null) {\n            return;\n        }\n        if (id == null || this._popDayCountData[scene] == null) {\n            return;\n        }\n        id = String(id);\n        this._popDayCountData[scene][id] = this._popDayCountData[scene][id] - 1;\n        this.updateLocalData();\n    }\n    /** 加载本地数据缓存 */\n    reloadLocalData() {\n        let key = Utils.string_format(StoreKey.USER_RECOMMEND_POP, this.__User.getUserMid());\n        let data = LocalStorage.get(key, \"\");\n        if (data != \"\") {\n            data = Utils.table_verify(Encrypt.JsonDecode(data));\n        }\n        this._popDayCountData = Utils.table_verify(data.popDayCountData);\n    }\n\n    /** 更新本地数据保存 */\n    updateLocalData() {\n        let body = {\n            popConfig: null,\n            popNumLimitConfig: this._popNumLimitConfig,\n            popDayCountData: this._popDayCountData,\n            popAllConfig: this._newPopConfig\n        }\n        let data = Encrypt.JsonEncode(body);\n\n        let key = Utils.string_format(StoreKey.USER_RECOMMEND_POP, this.__User.getUserMid());\n        LocalStorage.set(key, data);\n    }\n    /** 获取弹窗配置数据的版本 */\n    getPopConfigVer(): number | null {\n        if (isNaN(Number(this._popVersion))) {\n            this._popVersion = null;\n        }\n        return this._popVersion;\n    }\n    /** 获取弹窗顺序配置数据的版本 */\n    getPopOrderConfigVer(): number | null {\n        if (isNaN(Number(this._popOrderVersion))) {\n            this._popOrderVersion = null;\n        }\n        return this._popOrderVersion;\n    }\n    // /** 获取弹窗限制次数的版本 */\n    // getPopNumLimitVer(): number | null {\n    //     if (isNaN(Number(this._popNumLimitVersion))) {\n    //         this._popNumLimitVersion = null;\n    //     }\n    //     return this._popNumLimitVersion;\n    // }\n    /** 获取新弹窗配置数据的版本 */\n    getPopAllConfigVer(): number | null {\n        if (isNaN(Number(this._newPopVersion))) {\n            this._newPopVersion = null;\n        }\n        return this._newPopVersion;\n    }\n    /** 清理版本信息 */\n    clearVer(): void {\n        this._popVersion = null;\n        // this._popOrderVersion = null;\n        // this._popNumLimitVersion = null;\n        // this._newPopVersion = null;\n    }\n\n}"]}