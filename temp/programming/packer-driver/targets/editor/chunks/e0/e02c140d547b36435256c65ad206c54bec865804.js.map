{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/User.ts"],"names":["User","AppEvent","ClientInfo","CloundKey","GConstants","StoreKey","Encrypt","LocalStorage","EventManager","Utils","BaseCache","Platform","Activity","BackPack","BankrupData","GoodsData","MailInfo","MenuInfo","PropsConf","RecommendPop","RedDot","SelectGame","ShareInfo","ShopInfo","TaskInfo","WatchMessage","constructor","__activity","__goodsData","__recommendPop","__bankrupData","__shopInfo","__TaskInfo","__mailInfo","__watchMessage","__selectGame","__shareInfo","__backPack","__menuInfo","__propsConf","__redDot","_loginState","_loginRoomState","_userInfo","_propertyInfo","_historyLoginInfo","_lastlocalLoginInfo","_loginSuccessCountArray","_levelExpConfig","_propsInfo","_vipInfo","_gamePlayInfoRecord","_loginSuccessTime","_todayEventData","_clickedRecordData","initSubClass","print","onloadLoginSuccessParams","user","game","account","table_verify","Number","nullToDefault","toString","trim","saveCurLoginInfo","dump","setLoginState","param","lastLoginState","isChange","UserLoginState","LoginSuccess","updateLastLoginTime","LoginRoomState","updateLocalDataByLoginSuccess","dispatch","LOGIN_STATE_CHANGE","lastClientVer","get","SYS_ClientVer","AppVer","isSameVer","String","reloadLocalData","setTodayLocalRecord","key","saveData","string_isEmpty","uid","getUserMid","realKey","string_format","USER_TODAY_EVENT","oldData","JsonDecode","set","JsonEncode2","getTodayLocalRecord","def","console","log","time","USER_LOGIN_LAST_TIME","lastLoginTime","time_isSampleDay","cleanTodayLocalRecord","updateClickRecord","USER_CLICKED_RECORD","number_valueOf","getClickRecord","getLoginState","isLoginSuccesed","isLogining","Logining","setData","data","imsi","IMSI","mid","guid","byacc","nick","sex","uType","token","bid","phoneNum","loginType","registerTime","saveLastlocalLoginInfo","UserUType","BoyaaPassport","addAccountInfo","getDataUser","del","getData","undefined","getDataGame","getDataAccount","updateDataUserKey","value","getLoginSuccessTime","updateDataGameKey","updateDataAccountKey","res","LOGIN_LAST_INFO","cleanLastlocalLoginInfo","cleanLastlocalLoginToken","tab","getLastlocalLoginInfo","table_isEmpty","getLastLoginValueByKey","getLastlocalLoginType","UserLoginType","NONE","getLastlocalLoginToken","getLastlocalLoginServerConf","getLastlocalByacc","getLastlocalToken","getLastlocalMid","getUserInfoProp","isNull","setIdentity","keyCode","getIdentity","getIsPayUser","identity","UserIdentity","Rmb","RmbAndVip","getUserCid","getUserAppID","getUserGuid","getUserName","getUserSex","getUserCity","getUserHeadArray","headArray","s","m","b","getUserHeadBox","getUserDiamond","getUserCrystal","getUserCrystalSafeBox","getUserSilver","all","getUserGameSilver","a","getUserGameExp","getUserMoneyByID","moneyID","isAll","updateUserMoneyByID","oldNum","newNum","PropertyType","SILVER_COIN","GOLD_BAR","DIAMOND","sendBody","type","num","USER_UPDATE_PROPERTY","isFirstLoginToday","getLoginSuccessCount","isRegisterToday","currowTime","isFirstLoginCurrow","joinTime","getAccountHistory","LOGIN_USER_HISTORY","updateAccountHistory","temp","loginAccount","loginPsd","access_token","index","length","splice","unshift","checkIsExsitAccountInfo","recode","isExsit","updateLoginSuccessCount","lastCount","jsonStr","LOGIN_SUCCESS_COUNT","updateLevelExpConfig","body","oneArray","map","Map","level","Object","prototype","hasOwnProperty","call","expArray","mergeArray","size","arrayLike","Array","from","sort","push","getLevelExpConfig","getLevelByExp","exp","levelExpConf","levelExp","valueConf","updatePropsInfo","props","vipInfo","i","item","UserPropsType","TYPE_VIP","setVipInfo","getPropsInfo","getPropsInfoByType","propType","getPropsNumInfoByType","info","isExpireProps","Normal","isPayUser","setVipTime","Vip","leftTime","record","calTakeOutHowMuchMoney","minMoney","maxMoney","money","totalMoney","getMoney","Math","min","getUserLoginInfoByIntoGame","gameID","commonInfo","userId","cid","nickName","city","gold","diamond","crystal","m_identity","avatar_s","avatar_m","avatar_b","headBox","loseCount","getGamePlayRecordByKey","UserGameRecodeState","Lose","winCount","Win","drawCount","Draw","ladderScore","LadderScore","appid","syncGamePlayRecord","_info","mergeArrayDefault","itemKey","WinMax","updateGamePlayRecordByKey","getCloudStorageSaveList","callFunc","headFrame","downloadFile","USER_LOGIN_TIME","USER_HEAD_FRAME","USER_UID","getCloudStorageKeys","keys","getCloudStorageParam","key_openid","LOGIN_USER_OPENID","currentOpenid","shareOptions","ShareConfig","friend","shopShareMsg","getShareConfigByType","ShareSceneConf","title","imageUrl","maxFriends","myopenID","keyList"],"mappings":"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","sourcesContent":["/**\n * Name = User\n * URL = db://assets/cache/User.ts\n * Time = Mon May 09 2022 14:43:04 GMT+0800 (中国标准时间)\n * Author = xueya\n * 用户数据缓存\n */\n\nimport { AppEvent } from \"../config/AppEvent\";\nimport { ClientInfo } from \"../config/GameConfig\";\nimport { CloundKey, GConstants, StoreKey } from \"../config/GameConstant\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { LocalStorage } from \"../framework/LocalStorage\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { Utils } from \"../framework/Utils\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { Platform } from \"../platform/Platform\";\nimport { Activity } from \"./Activity\";\nimport { BackPack } from \"./BackPack\";\nimport { BankrupData } from \"./BankrupData\";\nimport { GoodsData } from \"./GoodsData\";\nimport { MailInfo } from \"./MailInfo\";\nimport { MenuInfo } from \"./MenuInfo\";\nimport { PropsConf } from \"./PropsConf\";\nimport { RecommendPop } from \"./RecommendPop\";\nimport { RedDot } from \"./RedDot\";\nimport { SelectGame } from \"./SelectGame\";\nimport { ShareInfo } from \"./ShareInfo\";\nimport { ShopInfo } from \"./ShopInfo\";\nimport { TaskInfo } from \"./TaskInfo\";\nimport { WatchMessage } from \"./WatchMessage\";\n\nexport class User extends BaseCache {\n    /** 附属类:Activity */\n    private __activity: Activity = null;\n    /** 附属类:GoodsData */\n    private __goodsData: GoodsData = null;\n    /** 附属类:RecommendPop */\n    private __recommendPop: RecommendPop = null;\n    /** 附属类:BankrupData */\n    private __bankrupData: BankrupData = null;\n    /** 附属类:ShopInfo */\n    private __shopInfo: ShopInfo = null;\n    /** 附属类:TaskInfo */\n    private __TaskInfo: TaskInfo = null;\n    /** 附属类:MailInfo */\n    private __mailInfo: MailInfo = null;\n    /** 附属类:WatchMessage */\n    private __watchMessage: WatchMessage = null;\n    /** 附属类:SelectGame */\n    private __selectGame: SelectGame = null;\n    /** 附属类:ShareInfo */\n    private __shareInfo: ShareInfo = null;\n    /** 附属类:BackPack */\n    private __backPack: BackPack = null;\n    /** 附属类:MenuInfo */\n    private __menuInfo: MenuInfo = null;\n    /** 附属类:propsconf */\n    private __propsConf: PropsConf = null;\n\n    /** 附属类:RedDot */\n    private __redDot: RedDot = null;\n\n    /** 登录状态(GConstants.UserLoginState) */\n    private _loginState = 0;\n    /** 登录游戏房间状态 */\n    private _loginRoomState = false;\n\n    /** 用户基础信息 */\n    private _userInfo = {};\n    /** 资产信息 类型:PropertyType */\n    private _propertyInfo = {};\n    //历史登录信息\n    private _historyLoginInfo = null;\n    //上次登录的保存在本地的数据\n    private _lastlocalLoginInfo = null;\n    //用户登录次数记录\n    private _loginSuccessCountArray = null\n    //经验等级体系\n    private _levelExpConfig = null;\n    //道具信息\n    private _propsInfo = {};\n    //vip信息\n    private _vipInfo = {};\n    //玩的游戏记录\n    private _gamePlayInfoRecord = {};\n    /** 登录成功时间 */\n    private _loginSuccessTime: number = null;\n    /** 今日事件 */\n    private _todayEventData: Object = null;\n    /** 点击次数记录数据 */\n    private _clickedRecordData: Object = null;\n\n    //实例化\n    constructor() {\n        super(\"User\");\n        this.initSubClass()\n    };\n    /** 初始化附加类 */\n    public initSubClass() {\n        this.print(\">>>>初始化附加类<<<<\")\n        this.__goodsData = new GoodsData(this);\n        this.__recommendPop = new RecommendPop(this);\n        this.__shopInfo = new ShopInfo(this);\n        this.__TaskInfo = new TaskInfo(this);\n        this.__mailInfo = new MailInfo(this);\n        this.__watchMessage = new WatchMessage(this);\n        this.__selectGame = new SelectGame(this);\n        this.__shareInfo = new ShareInfo(this);\n        this.__activity = new Activity(this);\n        this.__bankrupData = new BankrupData(this);\n        this.__redDot = new RedDot(this);\n        this.__menuInfo = new MenuInfo(this);\n        this.__backPack = new BackPack(this);\n        this.__propsConf = new PropsConf(this);\n    }\n    /** 获取附属类 GoodsData */\n    public get GoodsData(): GoodsData {\n        return this.__goodsData;\n    }\n    /** 获取附属类 RecommendPop */\n    public get RecommendPop(): RecommendPop {\n        return this.__recommendPop;\n    }\n    /** 获取附属类 ShopInfo*/\n    public get ShopInfo(): ShopInfo {\n        return this.__shopInfo;\n    }\n    /** 获取附属类 TaskInfo*/\n    public get TaskInfo(): TaskInfo {\n        return this.__TaskInfo;\n    }\n    /** 获取附属类 Activity*/\n    public get Activity(): Activity {\n        return this.__activity;\n    }\n    /** 获取附属类 BankrupData*/\n    public get BankrupData(): BankrupData {\n        return this.__bankrupData;\n    }\n    /** 获取附属类 MailInfo*/\n    public get MailInfo(): MailInfo {\n        return this.__mailInfo;\n    }\n    /** 获取附属类 WatchMessage*/\n    public get WatchMessage(): WatchMessage {\n        return this.__watchMessage;\n    }\n    /** 获取附属类 SelectGame*/\n    public get SelectGame(): SelectGame {\n        return this.__selectGame;\n    }\n    /** 获取附属类 RedDot */\n    public get RedDot(): RedDot {\n        return this.__redDot;\n    }\n    /** 获取附属类 ShareInfo */\n    public get ShareInfo(): ShareInfo {\n        return this.__shareInfo;\n    }\n    /** 获取附属类 MenuInfo */\n    public get MenuInfo(): MenuInfo {\n        return this.__menuInfo;\n    }\n    /** 获取附属类 BackPack*/\n    public get BackPack(): BackPack {\n        return this.__backPack;\n    }\n\n    /** 获取附属类 PropsConf */\n    public get PropsConf(): PropsConf {\n        return this.__propsConf;\n    }\n\n\n    //登录成功后加载解析登录数据 （默认 0为true 1为false）\n    onloadLoginSuccessParams(user, game, account) {\n        user = Utils.table_verify(user);\n        game = Utils.table_verify(game);\n        account = Utils.table_verify(account);\n        //----------------------------------------------------------\n        //mid\n        user[\"mid\"] = Number(Utils.nullToDefault(user[\"mid\"], -1));\n        user[\"guid\"] = Utils.nullToDefault(user[\"guid\"], \"\");\n        user[\"appid\"] = Number(Utils.nullToDefault(user[\"appid\"], -1));\n        user[\"province\"] = user[\"province\"]\n        user[\"region\"] = user[\"region\"]\n        //昵称\n        user[\"nick\"] = Utils.nullToDefault(user[\"nick\"], \"\");\n        user[\"status\"] = Number(Utils.nullToDefault(user[\"status\"], -1));\n        //上次登录的时间\n        user[\"lastlogin\"] = Number(user[\"lastlogin\"]);\n        //性别 0 - 保密，1 - 男 ,2 - 女（默认显示男头像）\n        user[\"sex\"] = Number(Utils.nullToDefault(user[\"sex\"], 1))\n        user[\"join\"] = Number(user[\"join\"]);\n        user[\"ssid\"] = Utils.nullToDefault(user[\"ssid\"], \"\");\n        //城市\n        user[\"city\"] = Utils.nullToDefault(user[\"city\"], \"\");\n        user[\"platformid\"] = Utils.nullToDefault(user[\"platformid\"], \"\");\n        user[\"bagvol\"] = user[\"bagvol\"]\n        user[\"cid\"] = user[\"cid\"]\n        user[\"friend_des\"] = user[\"friend_des\"]\n        user[\"silverCrystalFlag\"] = user[\"silverCrystalFlag\"]\n        user[\"is_guide_by\"] = user[\"is_guide_by\"]\n        user[\"age\"] = Number(Utils.nullToDefault(user[\"age\"], 0))\n        //是否实名\n        user[\"is_real_name_auth\"] = user[\"is_real_name_auth\"] || false\n        //vip级别\n        user[\"vipLevel\"] = Number(Utils.nullToDefault(user[\"vipLevel\"], 0))\n        user[\"vipPrivileges\"] = user[\"vipPrivileges\"]\n        //今日首次登录\n        user[\"isFirstLogin\"] = Number(Utils.nullToDefault(user[\"isFirstLogin\"], 0)) == 0 ? true : false\n        user[\"avatar_auditing\"] = Number(Utils.nullToDefault(user[\"avatar_auditing\"], -1));\n        //通行证账号\n        user[\"byacc\"] = user[\"byacc\"]\n        //用户头像框\n        user[\"headBox\"] = Utils.nullToDefault(user[\"hdIcon\"], \"\");\n        user[\"hometown\"] = user[\"hometown\"]\n\n        //头像相关\n        user[\"avatar_s\"] = Utils.nullToDefault(user[\"avatar_s\"], \"\");  //小\n        user[\"avatar_m\"] = Utils.nullToDefault(user[\"avatar_m\"], \"\");  //中\n        user[\"avatar_b\"] = Utils.nullToDefault(user[\"avatar_b\"], \"\");  //大\n        user[\"avatar_auditing\"] = Number(Utils.nullToDefault(user[\"avatar_auditing\"], -1));\n        user[\"avatar_audit\"] = Utils.nullToDefault(user[\"avatar_audit\"], \"\");\n\n        //----------------------------------------------------------\n        //经验值\n        game[\"exp\"] = Utils.nullToDefault(Number(game[\"exp\"]), 0)\n        //游戏内金币\n        game[\"money\"] = Utils.nullToDefault(Number(game[\"money\"]), 0)\n        //用户总金币\n        game[\"totalmoney\"] = Utils.nullToDefault(Number(game[\"totalmoney\"]), 0)\n        //保险箱中的金币\n        game[\"safebox\"] = Utils.nullToDefault(Number(game[\"safebox\"]), 0)\n        //用户总金条\n        game[\"crystal\"] = Utils.nullToDefault(Number(game[\"crystal\"]), 0)\n        //保险箱中的金条\n        game[\"crystalsafebox\"] = Utils.nullToDefault(Number(game[\"crystalsafebox\"]), 0)\n        //用户总兑换券\n        game[\"bdiamond\"] = Utils.nullToDefault(Number(game[\"bdiamond\"]), 0)\n\n        game[\"silver\"] = Number(game[\"silver\"]);\n        //----------------------------------------------------------\n        account[\"access_token\"] = Utils.nullToDefault(account[\"access_token\"], \"\");\n        account[\"bid\"] = account[\"bid\"]\n        account[\"login_type\"] = Number(account[\"login_type\"]);\n        account[\"guid\"] = Utils.nullToDefault(account[\"guid\"], \"\").toString().trim()\n        account[\"register\"] = Number(account[\"register\"]);\n        account[\"utype\"] = Number(account[\"utype\"]);\n\n        this.saveCurLoginInfo(user, game, account)\n\n        Utils.dump(user)\n        Utils.dump(game)\n        Utils.dump(account)\n    }\n    //设置玩家的登录状态\n    setLoginState(param) {\n        let lastLoginState = this._loginState;\n        this._loginState = param;\n        let isChange = false;\n        //状态改变通知\n        //登录成功\n        if (param == GConstants.UserLoginState.LoginSuccess && lastLoginState != GConstants.UserLoginState.LoginSuccess) {\n            this.updateLastLoginTime();\n            this._todayEventData = null;\n            this.LoginRoomState = false;\n\n            this.updateLocalDataByLoginSuccess();\n            EventManager.dispatch(AppEvent.LOGIN_STATE_CHANGE, this._loginState);\n        }\n        //退出登录状态\n        if (lastLoginState == GConstants.UserLoginState.LoginSuccess && param != GConstants.UserLoginState.LoginSuccess) {\n            this._loginSuccessTime = null;\n            this.LoginRoomState = false;\n\n            EventManager.dispatch(AppEvent.LOGIN_STATE_CHANGE, this._loginState);\n        }\n    }\n    /** 用户登录成功:改变清除本地缓存 */\n    updateLocalDataByLoginSuccess() {\n        let lastClientVer = LocalStorage.get(StoreKey.SYS_ClientVer, ClientInfo.AppVer);\n        let isSameVer = (String(lastClientVer) == String(ClientInfo.AppVer));\n        //版本号不一致时 当清除本地缓存\n        if (isSameVer == false) {\n            // this.RecommendPop.initLocalData();\n        } else {\n            this.RecommendPop.reloadLocalData();\n        }\n        this.RedDot.reloadLocalData();\n\n    }\n    /**\n     * 更新用户今日事件(本地存储)\n     * @param key \n     * @param data \n     */\n    setTodayLocalRecord(key, saveData = null) {\n        if (Utils.string_isEmpty(key)) {\n            return false;\n        }\n        let uid = String(this.getUserMid());\n        let realKey = Utils.string_format(StoreKey.USER_TODAY_EVENT, uid);\n        if (!this._todayEventData) {\n            let oldData = LocalStorage.get(realKey, null);\n            oldData = Encrypt.JsonDecode(oldData);\n            oldData = Utils.table_verify(oldData);\n            this._todayEventData = oldData;\n        }\n        key = String(key);\n        this._todayEventData[key] = saveData;\n        this.print(\"更新用户今日事件==> key:\", key, saveData, this._todayEventData);\n        LocalStorage.set(realKey, Encrypt.JsonEncode2(this._todayEventData));\n        return true\n    }\n    /**\n     * 获取用户今日事件(本地存储)\n     * @param key\n     * @param def 默认值\n     */\n    getTodayLocalRecord(key, def = null) {\n        if (Utils.string_isEmpty(key)) {\n            return null;\n        }\n        if (!this._todayEventData) {\n            let uid = String(this.getUserMid());\n            let realKey = Utils.string_format(StoreKey.USER_TODAY_EVENT, uid);\n            let oldData = LocalStorage.get(realKey, null);\n            oldData = Encrypt.JsonDecode(oldData);\n            oldData = Utils.table_verify(oldData);\n            this._todayEventData = oldData;\n        }\n        key = String(key);\n        console.log(\"获取用户今日事件==>\", key, this._todayEventData[key])\n        return (this._todayEventData[key] != null ? this._todayEventData[key] : def);\n    }\n    /**\n     * 更新上次登录的时间(只有成功登录了才会更新)\n     */\n    updateLastLoginTime() {\n        this._loginSuccessTime = Utils.time();\n        let key = Utils.string_format(StoreKey.USER_LOGIN_LAST_TIME, this.getUserMid());\n        let lastLoginTime = LocalStorage.get(key, null);\n        if (lastLoginTime == null || Utils.time_isSampleDay(this._loginSuccessTime, lastLoginTime) == false) {\n            //非同一天 清除今日记录\n            this.cleanTodayLocalRecord();\n        }\n        LocalStorage.set(key, this._loginSuccessTime);\n    }\n    /**\n     * 清除今日记录\n     */\n    cleanTodayLocalRecord() {\n        let uid = String(this.getUserMid());\n        let realKey = Utils.string_format(StoreKey.USER_TODAY_EVENT, uid);\n        LocalStorage.set(realKey, null);\n        this._todayEventData = null;\n        console.log(\"清除今日记录结果\", LocalStorage.get(realKey))\n    }\n\n    /**\n     * 更新用户点击操作次数(本地存储)\n     * @param key 点击的标识\n     * @returns \n     */\n    updateClickRecord(key) {\n        if (Utils.string_isEmpty(key)) {\n            return false;\n        }\n        let uid = String(this.getUserMid());\n        let realKey = Utils.string_format(StoreKey.USER_CLICKED_RECORD, uid);\n        if (!this._clickedRecordData) {\n            let oldData = LocalStorage.get(realKey, null);\n            oldData = Encrypt.JsonDecode(oldData);\n            oldData = Utils.table_verify(oldData);\n            this._clickedRecordData = oldData;\n        }\n        key = String(key);\n        this._clickedRecordData[key] = Utils.number_valueOf(this._clickedRecordData[key], 0) + 1;\n        this.print(\"更新用户点击操作次数==> key:\", key, this._clickedRecordData[key], this._clickedRecordData);\n        LocalStorage.set(realKey, Encrypt.JsonEncode2(this._clickedRecordData));\n        return true\n    }\n    /**\n     * 获取用户点击操作次数(本地存储)\n     * @param key:number|null\n     */\n    getClickRecord(key): number {\n        if (Utils.string_isEmpty(key)) {\n            return null;\n        }\n        if (!this._clickedRecordData) {\n            let uid = String(this.getUserMid());\n            let realKey = Utils.string_format(StoreKey.USER_CLICKED_RECORD, uid);\n            let oldData = LocalStorage.get(realKey, null);\n            oldData = Encrypt.JsonDecode(oldData);\n            oldData = Utils.table_verify(oldData);\n            this._clickedRecordData = oldData;\n        }\n        key = String(key);\n        console.log(\"获取用户点击操作次数==>\", key, this._clickedRecordData[key])\n        return Utils.number_valueOf(this._clickedRecordData[key], 0);\n    }\n\n    //获取玩家的登录状态\n    getLoginState() {\n        return this._loginState\n    }\n    //设置玩家游戏房间登录状态\n    set LoginRoomState(param: boolean) {\n        this._loginRoomState = param || false;\n    }\n    //获取玩家游戏房间登录状态\n    get LoginRoomState(): boolean {\n        return this._loginRoomState\n    }\n\n    /** 玩家是否登录成功 */\n    isLoginSuccesed(): boolean {\n        if (this._loginState == GConstants.UserLoginState.LoginSuccess) {\n            return true\n        }\n        return false\n    }\n    /** 玩家是否正在登录中 */\n    isLogining(): boolean {\n        if (this._loginState == GConstants.UserLoginState.Logining) {\n            return true\n        }\n        return false\n    }\n\n\n    /** 保存当前登录的信息 */\n    saveCurLoginInfo(user, game, account) {\n        this.setData(\"user\", user)\n        this.setData(\"game\", game)\n        this.setData(\"account\", account)\n\n        let data = {\n            imsi: ClientInfo.IMSI,\n            mid: user[\"mid\"],\n            guid: user[\"guid\"],\n            byacc: user[\"byacc\"],\n            nick: user[\"nick\"],\n            sex: user[\"sex\"],\n            uType: account[\"uType\"],\n            token: account[\"access_token\"],\n            bid: account[\"bid\"],\n            phoneNum: account[\"phone\"],\n            loginType: account[\"login_type\"],\n            registerTime: user[\"join\"],\n        };\n        this.saveLastlocalLoginInfo(data)\n\n        //通行证用户保存账号信息\n        if (data.uType == GConstants.UserUType.BoyaaPassport) {\n            this.addAccountInfo(user.byacc, null, account[\"bid\"], account[\"access_token\"])\n        }\n    }\n\n    getDataUser(key: string = null, del: any = null) {\n        if (key) {\n            let user = this.getData(\"user\")\n            if (user) {\n                if (user[key] != null && user[key] != undefined) {\n                    return user[key]\n                }\n            }\n        }\n        return del\n    }\n    getDataGame(key: string = null, del: any = null) {\n        if (key) {\n            let game = this.getData(\"game\")\n            if (game) {\n                if (game[key] != null && game[key] != undefined) {\n                    return game[key]\n                }\n            }\n        }\n        return null\n    }\n    getDataAccount(key: string = null, del: any = null) {\n        if (key) {\n            let account = this.getData(\"account\")\n            if (account[key] != null && account[key] != undefined) {\n                return account[key]\n            }\n        }\n        return null\n    }\n    //更新用户数据\n    updateDataUserKey(key: string = null, value: any = null) {\n        if (key) {\n            let user = this.getData(\"user\")\n            if (user) {\n                if (user[key] != null && user[key] != undefined) {\n                    user[key] = value\n                    this.setData(\"user\", user)\n                }\n            }\n        }\n    }\n    /** 获取玩家成功登录的时间 可能为空 */\n    getLoginSuccessTime(): number {\n        return this._loginSuccessTime\n    }\n\n    //更新用户游戏数据\n    updateDataGameKey(key: string = null, value: any = null) {\n        if (key) {\n            let game = this.getData(\"game\")\n            if (game) {\n                if (game[key] != null && game[key] != undefined) {\n                    game[key] = value\n                    this.setData(\"game\", game)\n                }\n            }\n        }\n    }\n    //更新用户Account数据\n    updateDataAccountKey(key: string = null, value: any = null) {\n        if (key) {\n            let account = this.getData(\"account\")\n            if (account) {\n                if (account[key] != null && account[key] != undefined) {\n                    account[key] = value\n                    this.setData(\"account\", account)\n                }\n            }\n        }\n    }\n\n    //保存上次登录的信息\n    saveLastlocalLoginInfo(param) {\n        let res = Encrypt.JsonEncode2(param)\n        if (res == \"\") {\n            res = null\n        }\n        if (res == null) {\n            this._lastlocalLoginInfo = null\n        }\n        LocalStorage.set(StoreKey.LOGIN_LAST_INFO, res);\n        this._lastlocalLoginInfo = null;\n    }\n    //清空上次登录\n    cleanLastlocalLoginInfo() {\n        LocalStorage.set(StoreKey.LOGIN_LAST_INFO, null)\n        this._lastlocalLoginInfo = null\n    }\n\n    //清空上次登录Token\n    cleanLastlocalLoginToken() {\n        let tab = this.getLastlocalLoginInfo();\n        if (Utils.table_isEmpty(tab) == false) {\n            tab[\"token\"] = null; // 地方是guid字段\n            LocalStorage.set(StoreKey.LOGIN_LAST_INFO, tab)\n        }\n        this._lastlocalLoginInfo = null\n    }\n\n    //获取上次登录的信息(Array)\n    getLastlocalLoginInfo() {\n        if (!this._lastlocalLoginInfo) {\n            this._lastlocalLoginInfo = LocalStorage.get(StoreKey.LOGIN_LAST_INFO, null)\n            if (this._lastlocalLoginInfo) {\n                this._lastlocalLoginInfo = Encrypt.JsonDecode(this._lastlocalLoginInfo)\n            }\n        }\n\n        return this._lastlocalLoginInfo\n    }\n\n    /** 获取上次登录的某一个key的value */\n    getLastLoginValueByKey(key: string, def: any = null) {\n        if (!key) {\n            return def\n        }\n\n        if (this.getLastlocalLoginInfo()) {\n            return this._lastlocalLoginInfo[key] || def\n        }\n        return def\n    }\n\n    //获取上次登录的类型\n    getLastlocalLoginType() {\n        if (!this._lastlocalLoginInfo) {\n            this.getLastlocalLoginInfo()\n        }\n        if (!this._lastlocalLoginInfo) {\n            return GConstants.UserLoginType.NONE\n        }\n        return this._lastlocalLoginInfo[\"loginType\"] || GConstants.UserLoginType.NONE\n    }\n\n    //获取上次登录的Token\n    getLastlocalLoginToken() {\n        if (!this._lastlocalLoginInfo) {\n            this.getLastlocalLoginInfo()\n        }\n        if (!this._lastlocalLoginInfo) {\n            return null\n        }\n        return this._lastlocalLoginInfo[\"token\"] // 地方是guid字段\n    }\n\n    //获取上次登录的服务器配置地址\n    getLastlocalLoginServerConf() {\n        if (!this._lastlocalLoginInfo) {\n            this.getLastlocalLoginInfo();\n        }\n        if (!this._lastlocalLoginInfo) {\n            return null;\n        }\n        return this._lastlocalLoginInfo[\"serverConf\"];\n    }\n\n    //获取上次登录boyaa通行证\n    getLastlocalByacc() {\n        if (!this._lastlocalLoginInfo) {\n            this.getLastlocalLoginInfo()\n        }\n        if (!this._lastlocalLoginInfo) {\n            return null\n        }\n        return this._lastlocalLoginInfo[\"byacc\"] || null\n    }\n    //获取上次登录的token\n    getLastlocalToken() {\n        if (!this._lastlocalLoginInfo) {\n            this.getLastlocalLoginInfo()\n        }\n        if (!this._lastlocalLoginInfo) {\n            return null\n        }\n        return this._lastlocalLoginInfo[\"token\"] || null\n    }\n    //获取上次登录的Mid\n    getLastlocalMid() {\n        if (!this._lastlocalLoginInfo) {\n            this.getLastlocalLoginInfo()\n        }\n        if (!this._lastlocalLoginInfo) {\n            return null\n        }\n        return this._lastlocalLoginInfo[\"mid\"] || null\n    }\n    /**\n     * 获取玩家基础信息\n     * @param key 键 字符串\n     */\n    getUserInfoProp(key: string = null) {\n        if (key) {\n            if (Utils.isNull(this._userInfo[key])) {\n                return null;\n            }\n            return this._userInfo[key];\n        } else {\n            return this._userInfo;\n        }\n    }\n    /**\n     * 设置用户身份标识 \n     * 0标识普通用户，1标识付费用户，2标识vip用户, 3标识即是付费用户又vip用户\n     * @param keyCode \n     */\n    setIdentity(keyCode: number = 0) {\n        this.setData(\"Identity\", keyCode)\n    }\n    //获取用户身份标识 \n    getIdentity() {\n        return Utils.number_valueOf(this.getData(\"Identity\"), 0)\n    }\n    //是否是付费用户\n    getIsPayUser(): boolean {\n        let identity = this.getIdentity();\n        return identity == GConstants.UserIdentity.Rmb || identity == GConstants.UserIdentity.RmbAndVip;\n    }\n\n    //获取用户的Mid\n    getUserMid(del: any = null) {\n        return this.getDataUser(\"mid\", del)\n    }\n    //获取用户的cid\n    getUserCid(del: any = null) {\n        return this.getDataUser(\"cid\", this.getDataUser(\"mid\", del))\n    }\n    //获取用户的APPID\n    getUserAppID(del: any = null) {\n        return this.getDataUser(\"appid\", del)\n    }\n    //获取用户的Guid\n    getUserGuid(del: any = null) {\n        return this.getDataUser(\"guid\", del)\n    }\n\n    //获取用户的昵称\n    getUserName(del: any = null) {\n\n        return this.getDataUser(\"nick\", del)\n    }\n    //获取用户的性别\n    getUserSex(del: any = null) {\n        return this.getDataUser(\"sex\", del)\n    }\n    //获取用户的城市\n    getUserCity(del: any = null) {\n        return this.getDataUser(\"city\", del)\n    }\n    //获取用户头像数组\n    getUserHeadArray(del: any = null) {\n        let headArray = {\n            s: this.getDataUser(\"avatar_s\", del),\n            m: this.getDataUser(\"avatar_m\", del),\n            b: this.getDataUser(\"avatar_b\", del)\n        }\n        return headArray\n    }\n\n    //获取用户头像数组\n    getUserHeadBox(del: any = null) {\n        return this.getDataUser(\"headBox\", del)\n    }\n\n    //获取用户兑换券\n    getUserDiamond(del: any = null) {\n        return this.getDataGame(\"bdiamond\", del == null ? 0 : del)\n    }\n    //获取用户金条\n    getUserCrystal(del: any = null) {\n        return this.getDataGame(\"crystal\", del == null ? 0 : del)\n    }\n    /** 获取用户保险箱金条 */\n    getUserCrystalSafeBox(del: any = null) {\n        return this.getDataGame(\"crystalsafebox\", del == null ? 0 : del)\n    }\n\n    /** 获取用户总银币 */\n    getUserSilver(del: any = null) {\n        let all = this.getDataGame(\"totalmoney\", del == null ? 0 : del)\n        this.print(\"获取总银币==>\", all)\n        return this.getDataGame(\"totalmoney\", del == null ? 0 : del)\n    }\n    /** 获取用户现金银币 */\n    getUserGameSilver(del: any = null) {\n        let a = this.getDataGame(\"money\", del == null ? 0 : del);\n        this.print(\"获取用户现金银币==>\", a)\n        return a\n    }\n\n    getUserGameExp(del: any = null) {\n        return this.getDataGame(\"exp\", del == null ? 0 : del)\n    }\n    /**\n     * 根据货币类型 获取用户身上的money\n     * @param moneyID 货币类型 0:银币，1：金条 2：兑换券\n     * @param isAll 是否是所有 默认非所有\n     */\n    getUserMoneyByID(moneyID: number = 0, isAll: boolean = false) {\n        this.print(\"根据货币类型 获取用户身上的money===>moneyID=\", moneyID)\n        if (moneyID == 0) {\n            if (isAll) {\n                return this.getUserSilver()\n            } else {\n                return this.getUserGameSilver()\n            }\n        } else if (moneyID == 1) {\n            if (isAll) {\n                return (this.getUserCrystal() + this.getUserCrystalSafeBox())\n            } else {\n                return this.getUserCrystal()\n            }\n        } else if (moneyID == 2) {\n            return this.getUserDiamond()\n        }\n        return 0\n    }\n\n    /**\n     * 根据货币类型 更新用户身上的money\n     * @param moneyID 货币类型 0:银币，1：金条 2：兑换券\n     * @param value 数值\n     */\n    updateUserMoneyByID(moneyID: number = 0, value: number = 0, isAll: boolean = false) {\n        let oldNum = null;\n        let newNum = null;\n        if (moneyID == GConstants.PropertyType.SILVER_COIN) {\n            if (isAll) {\n                oldNum = this.getDataGame(\"totalmoney\", 0);\n                this.updateDataGameKey(\"totalmoney\", value)\n                newNum = this.getDataGame(\"totalmoney\", oldNum);\n            } else {\n                oldNum = this.getDataGame(\"money\", 0);\n                this.updateDataGameKey(\"money\", value);\n                newNum = this.getDataGame(\"money\", oldNum);\n            }\n        } else if (moneyID == GConstants.PropertyType.GOLD_BAR) {\n            oldNum = this.getDataGame(\"crystal\", 0);\n            this.updateDataGameKey(\"crystal\", value);\n            newNum = this.getDataGame(\"crystal\", oldNum);\n        } else if (moneyID == GConstants.PropertyType.DIAMOND) {\n            oldNum = this.getDataGame(\"bdiamond\", 0);\n            this.updateDataGameKey(\"bdiamond\", value);\n            newNum = this.getDataGame(\"bdiamond\", oldNum);\n        }\n        if (oldNum != null) {\n            if (oldNum != newNum) {\n                this.print(`>>>资产有变更 货币类型:${moneyID} 变更前:${oldNum} 变更后:${newNum}`);\n                let sendBody = {\n                    type: moneyID,\n                    num: newNum,\n                }\n                //通知:资产变更\n                EventManager.dispatch(AppEvent.USER_UPDATE_PROPERTY, sendBody)\n            }\n        }\n    }\n\n    /** 今日首次登录 */\n    isFirstLoginToday(): boolean {\n        if (this.getLoginSuccessCount(this.getUserMid()) == 1) {\n            if (this.isRegisterToday()) {\n                return true\n            } else {\n                let lastLoginTime = this.getDataUser(\"lastlogin\", null)\n                let currowTime = Utils.time()\n                return Utils.time_isSampleDay(lastLoginTime, currowTime)\n            }\n        }\n        return false\n    }\n    /** 当前首次登录 */\n    isFirstLoginCurrow(): boolean {\n        let mid = this.getUserMid()\n        if (this.isFirstLoginToday() && !Utils.string_isEmpty(mid)) {\n            return this.getLoginSuccessCount(mid) == 1\n        }\n        return false\n    }\n    /** 今日注册 */\n    isRegisterToday(): boolean {\n        let joinTime = this.getDataUser(\"join\", null)\n        let currowTime = Utils.time()\n        if (!Utils.isNull(joinTime)) {\n            return Utils.time_isSampleDay(joinTime, currowTime)\n        }\n        return false\n    }\n\n    //账号历史\n    getAccountHistory() {\n        if (!this._historyLoginInfo) {\n            this._historyLoginInfo = LocalStorage.get(StoreKey.LOGIN_USER_HISTORY, null)\n            if (this._historyLoginInfo) {\n                this._historyLoginInfo = Encrypt.JsonDecode(this._historyLoginInfo)\n            }\n        }\n        return this._historyLoginInfo || {}\n    }\n    //更新账号历史\n    updateAccountHistory(param) {\n        if (Utils.string_isEmpty(param)) {\n            return\n        }\n        let temp = Encrypt.JsonEncode2(param)\n        if (temp) {\n            LocalStorage.set(StoreKey.LOGIN_USER_HISTORY, temp)\n        }\n        return this.getAccountHistory()\n    }\n\n    //添加新的账号信息\n    addAccountInfo(loginAccount, loginPsd, bid, access_token) {\n        if (Utils.string_isEmpty(loginAccount)) {\n            return\n        }\n        let data = this.getAccountHistory();\n\n        for (let index = 0; index < data.length; index++) {\n            let value = data[index];\n            if (value && value[\"loginAccount\"] == loginAccount) {\n                data.splice(index, 0)\n                break;\n            }\n        }\n        let temp = {\n            loginAccount: loginAccount,\n            loginPsd: loginPsd,\n            access_token: access_token,\n        }\n        data.unshift(temp)\n        this.updateAccountHistory(data)\n    }\n    //检查账号记录中是否存在记录\n    checkIsExsitAccountInfo(loginAccount) {\n        let recode = this.getAccountHistory()\n        let isExsit = false;\n        let key = null;\n        let temp = {};\n\n        for (let index = 0; index < recode.length; index++) {\n            let value = recode[key];\n            if (value[\"loginAccount\"] && value[\"loginAccount\"] == loginAccount) {\n                isExsit = true\n                key = index\n                temp = value\n                break;\n            }\n        }\n        return [isExsit, key, temp]\n    }\n    //更新登录次数成功的记录\n    updateLoginSuccessCount() {\n        let mid = this.getUserMid()\n        if (Utils.string_isEmpty(mid)) {\n            return null\n        }\n        let lastCount = this.getLoginSuccessCount(mid)\n        this._loginSuccessCountArray[mid] = lastCount + 1\n        //保存\n        let jsonStr = Encrypt.JsonEncode2(this._loginSuccessCountArray)\n        if (Utils.string_isEmpty(jsonStr)) {\n            jsonStr = null\n            return null\n        }\n        this.print(\"更新登录次数成功的记录 ==>new = \" + this._loginSuccessCountArray[mid])\n        LocalStorage.set(StoreKey.LOGIN_SUCCESS_COUNT, jsonStr)\n        return this._loginSuccessCountArray[mid]\n    }\n\n    //用户经验等级配置\n    updateLevelExpConfig(body) {\n        if (Utils.isNull(body)) {\n            return\n        }\n        let oneArray = [\n            \"exp\",\n            \"name\",\n            \"level\"\n        ]\n        //已经排序过了\n        this._levelExpConfig = []\n\n        let map = new Map()\n        for (let level in body) {\n            if (Object.prototype.hasOwnProperty.call(body, level)) {\n                let expArray = body[level];\n                if (expArray) {\n                    expArray = this.mergeArray(oneArray, expArray)\n                }\n                if (expArray) {\n                    map.set(level, expArray)\n                }\n            }\n        }\n        if (map.size > 0) {\n            let arrayLike = Array.from(map)\n            //得到的array中索引0为map中的key,索引1为map中的value\n            arrayLike.sort(function (a, b) {\n                return a[0] - b[0]\n            })\n            for (let index = 0; index < arrayLike.length; index++) {\n                arrayLike[index][1][\"level\"] = arrayLike[index][0]\n                this._levelExpConfig.push(arrayLike[index][1])\n            }\n        }\n        return this._levelExpConfig\n    }\n    //用户经验等级配置\n    getLevelExpConfig() {\n        return this._levelExpConfig\n    }\n    //更新经验值获取等级\n    getLevelByExp(exp, del: any = 0) {\n        if (!this._levelExpConfig) {\n            return del\n        }\n        exp = Utils.number_valueOf(exp)\n        let level = null\n        let levelExpConf = null\n        for (let index = 0; index < this._levelExpConfig.length; index++) {\n            let levelExp = this._levelExpConfig[index];\n            if (levelExp && Utils.isNull(levelExp[\"exp\"]) == false) {\n                if (Utils.number_valueOf(levelExp[\"exp\"]) > exp) {\n                    if (this._levelExpConfig[index - 1]) {\n                        levelExpConf = this._levelExpConfig[index - 1]\n                        level = levelExpConf[\"level\"]\n                    }\n                    break;\n                } else if (Utils.number_valueOf(levelExp[\"exp\"]) == exp) {\n                    levelExpConf = this._levelExpConfig[index]\n                    level = levelExpConf[\"level\"]\n                    break;\n                }\n            }\n        }\n        if (!level) {\n            let valueConf = this._levelExpConfig[this._levelExpConfig.length - 1]\n            if (Utils.number_valueOf(valueConf[\"exp\"] < exp)) {\n                levelExpConf = valueConf\n                level = levelExpConf[\"level\"]\n            }\n        }\n        return level\n    }\n\n    //更新用户身上的道具信息\n    updatePropsInfo(body) {\n        if (Utils.isNull(body)) {\n            return\n        }\n        let props = {};\n        let vipInfo = null;\n        body = Utils.table_verify(body)\n        for (let i in body) {\n            if (Object.prototype.hasOwnProperty.call(body, i)) {\n                let item = {\n                    \"type\": Utils.number_valueOf(body[i][\"propsType\"], -1),   //道具类型\n                    \"expires\": Utils.number_valueOf(body[i][\"expires\"], 0),   //过期时间\n                    \"allowTimes\": Utils.number_valueOf(body[i][\"allow_times\"], 0),  //道具个数\n                    \"updateTime\": Utils.time(),\n                };\n                if (item.type == GConstants.UserPropsType.TYPE_VIP) {\n                    vipInfo = item;\n                }\n                props[item.type] = item;\n            }\n        }\n        this.setVipInfo(vipInfo);\n        this._propsInfo = props;\n    }\n    //获取用户身上的道具信息\n    getPropsInfo() {\n        return this._propsInfo || {};\n    }\n    //获取用户身上的道具信息(根据道具类型)\n    getPropsInfoByType(propType) {\n        if (Utils.isNull(propType)) {\n            return null;\n        }\n        return this._propsInfo[propType] || null;\n    }\n    //获取用户身上的道具个数(根据道具类型)\n    getPropsNumInfoByType(propType) {\n        let info = this.getPropsInfoByType(propType);\n        let num = 0;\n        if (info) {\n            if (this.isExpireProps(propType)) {\n                return 0;\n            }\n            num = info[\"allowTimes\"];\n        }\n        return num;\n    }\n    //道具是否过期\n    isExpireProps(propType) {\n        let info = this.getPropsInfoByType(propType)\n        if (!info) {\n            return true;\n        }\n        if (info[\"expires\"] <= 0) {\n            return false;\n        }\n        let time = Utils.time() - info[\"updateTime\"]\n        if (time >= info[\"expires\"]) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    //设置Vip信息\n    setVipInfo(body) {\n        if (Utils.table_isEmpty(body)) {\n            this.setIdentity(GConstants.UserIdentity.Normal);\n        } else if (body?.type == GConstants.UserPropsType.TYPE_VIP) {\n            let isPayUser = this.getIsPayUser();\n            this.setVipTime(body[\"expires\"]);\n            if (isPayUser) {\n                this.setIdentity(GConstants.UserIdentity.RmbAndVip);\n            } else {\n                this.setIdentity(GConstants.UserIdentity.Vip);\n            }\n        }\n    }\n    //viptime vip到期时间 -1表示无限制， 0表示过期  \n    setVipTime(time: number) {\n        let leftTime = Utils.number_valueOf(time); //单位为秒\n        this.setData(\"vipTime\", leftTime)\n    }\n\n\n    //获取登录次数成功的记录\n    getLoginSuccessCount(mid: string): number {\n        if (!this._loginSuccessCountArray || !this._loginSuccessCountArray[mid]) {\n            let record = LocalStorage.get(StoreKey.LOGIN_SUCCESS_COUNT, null)\n            if (record) {\n                record = Encrypt.JsonDecode(record)\n            }\n            this._loginSuccessCountArray = Utils.table_verify(record)\n        }\n\n        let lastCount = 0\n        if (!Utils.isNull(this._loginSuccessCountArray[mid])) {\n            lastCount = this._loginSuccessCountArray[mid]\n            lastCount = Number(lastCount)\n        }\n        this.print(\"登录成功的次数===>\" + lastCount)\n        return lastCount\n    }\n\n    /**\n     * 计算需要取出多少银币\n     * @param minMoney 场次银币下限\n     * @param maxMoney 场次银币上限\n     * @param money    用户现金\n     * @param totalMoney 用户总银币\n     */\n    calTakeOutHowMuchMoney(minMoney, maxMoney, money, totalMoney) {\n        let getMoney = 2 * minMoney - money;\n        getMoney = Math.min(getMoney, totalMoney - money);//不能超过保险箱中的银币\n        if (maxMoney != -1) {\n            getMoney = Math.min(getMoney, maxMoney - money - 1);//不能超过银币上限(前闭后开)\n        }\n        return getMoney;\n    }\n\n    //获取玩家进入房间所需的信息\n    getUserLoginInfoByIntoGame(gameID: number) {\n        gameID = Utils.number_valueOf(gameID, null);\n        if (Utils.isNull(gameID)) {\n            return null;\n        }\n\n        let headArray = this.getUserHeadArray()\n        let commonInfo = {\n            userId: this.getUserMid(0),\n            cid: this.getUserCid(0),\n            nickName: this.getUserName(\"\"),\n            sex: this.getUserSex(1),\n            city: this.getUserCity(\"\"),\n            gold: this.getUserGameSilver(0),\n            money: this.getUserGameSilver(0), //根据货币类型取得的资产数据,游戏重启马上重连时levelId不正确故此时资产类型不准\n            diamond: this.getUserDiamond(0),\n            crystal: this.getUserCrystal(),\n            m_identity: this.getIdentity(),\n            avatar_s: headArray[\"s\"] || \"\",\n            avatar_m: headArray[\"m\"] || \"\",\n            avatar_b: headArray[\"b\"] || \"\",\n            headBox: this.getUserHeadBox(\"\"),\n            level: this.getLevelByExp(this.getUserGameExp(0), 0),\n            exp: this.getUserGameExp(0),\n            //输赢平记录\n            loseCount: Utils.nullToDefault(this.getGamePlayRecordByKey(gameID, GConstants.UserGameRecodeState.Lose), 0),\n            winCount: Utils.nullToDefault(this.getGamePlayRecordByKey(gameID, GConstants.UserGameRecodeState.Win), 0),\n            drawCount: Utils.nullToDefault(this.getGamePlayRecordByKey(gameID, GConstants.UserGameRecodeState.Draw), 0),\n            ladderScore: Utils.nullToDefault(this.getGamePlayRecordByKey(gameID, GConstants.UserGameRecodeState.LadderScore), 0),\n\n            appid: this.getUserAppID(),\n\n        }\n        return commonInfo\n    }\n\n    /**\n     * 同步下发玩的游戏记录\n     * @param gameID 游戏ID\n     * @param body \n     * @returns 成功返回数据 失败返回空\n     */\n    syncGamePlayRecord(gameID, body) {\n        gameID = Utils.number_valueOf(gameID, null);\n        if (Utils.isNull(gameID)) {\n            return null;\n        }\n        let info = {\n            \"wintimes\": 0,     //赢的局数\n            \"losetimes\": 0,    //输的局数\n            \"drawtimes\": 0,    //平局\n            \"winmax\": 0,       //最大赢钱数\n            \"points\": 0,\n            \"group\": \"\",\n            \"eloscore\": 0,     //天梯分\n        }\n        let _info = this.mergeArrayDefault(info, body);\n        this._gamePlayInfoRecord[gameID] = _info;\n        return this._gamePlayInfoRecord[gameID];\n    }\n    /**\n     * 获取某个游戏的玩的记录\n     * @param gameID 游戏ID\n     * @param itemKey 要获取的键值 为空则获取所有 详见UserGameRecodeState\n     * @returns 成功返回数据 失败返回空\n     */\n    getGamePlayRecordByKey(gameID: number, itemKey = null) {\n        gameID = Utils.number_valueOf(gameID, null);\n        if (Utils.isNull(gameID)) {\n            return null;\n        }\n        if (Utils.isNull(this._gamePlayInfoRecord[gameID])) {\n            return null;\n        }\n        if (Utils.isNull(itemKey)) {\n            return this._gamePlayInfoRecord[gameID];\n        }\n        let key = null;\n        switch (itemKey) {\n            case GConstants.UserGameRecodeState.Win:\n                key = \"wintimes\";\n                break;\n            case GConstants.UserGameRecodeState.Lose:\n                key = \"losetimes\";\n                break;\n            case GConstants.UserGameRecodeState.Draw:\n                key = \"drawtimes\";\n                break;\n            case GConstants.UserGameRecodeState.WinMax:\n                key = \"winmax\";\n                break;\n            case GConstants.UserGameRecodeState.LadderScore:\n                key = \"eloscore\";\n                break;\n            default:\n                break;\n        }\n        if (key) {\n            return this._gamePlayInfoRecord[gameID][key];\n        }\n        return null;\n    }\n    /**\n     * 更新某个游戏的玩的记录 每次加+1\n     * @param gameID 游戏ID\n     * @param itemKey 要更新的键值 详见UserGameRecodeState\n     */\n    updateGamePlayRecordByKey(gameID: number, itemKey = null) {\n        gameID = Utils.number_valueOf(gameID, null);\n        if (Utils.isNull(gameID)) {\n            return null;\n        }\n        if (Utils.isNull(this._gamePlayInfoRecord[gameID])) {\n            return null;\n        }\n        let key = null;\n        switch (itemKey) {\n            case GConstants.UserGameRecodeState.Win:\n                key = \"wintimes\";\n                break;\n            case GConstants.UserGameRecodeState.Lose:\n                key = \"losetimes\";\n                break;\n            case GConstants.UserGameRecodeState.Draw:\n                key = \"drawtimes\";\n                break;\n            case GConstants.UserGameRecodeState.WinMax:\n                key = \"winmax\";\n                break;\n            case GConstants.UserGameRecodeState.LadderScore:\n                key = \"eloscore\";\n                break;\n            default:\n                break;\n        }\n\n        if (key) {\n            let oldNum = this._gamePlayInfoRecord[gameID][key];\n            if (typeof (oldNum) == \"number\") {\n                this._gamePlayInfoRecord[gameID][key] = oldNum + 1;\n            }\n            return this._gamePlayInfoRecord[gameID][key];\n        }\n        return null\n    }\n    /** 获取开放数据域要保存的数据 */\n    getCloudStorageSaveList(callFunc = null) {\n        let headFrame = this.getUserInfoProp(\"picture_frame\");\n\n        Platform.downloadFile(headFrame, (res) => {\n            if (res[\"code\"] === 200) {\n                headFrame = res[\"filePath\"];\n            } else {\n                headFrame = \"\";\n            }\n            let param = [\n                { key: CloundKey.USER_LOGIN_TIME, value: this.getLoginSuccessTime() },\n                { key: CloundKey.USER_HEAD_FRAME, value: headFrame },\n                { key: CloundKey.USER_UID, value: this.getUserMid() },\n            ]\n            if (callFunc) {\n                callFunc(param);\n            }\n        });\n    }\n    /** 获取开放数据域key队列 */\n    getCloudStorageKeys(): Array<String> {\n        let keys = [\n            CloundKey.USER_LOGIN_TIME,\n            CloundKey.USER_HEAD_FRAME,\n            CloundKey.USER_UID,\n        ]\n        return keys\n    }\n    /** 获取开放数据域要传递的数据 */\n    getCloudStorageParam() {\n        //当前用户openID的数据\n        let key_openid = Utils.string_format(StoreKey.LOGIN_USER_OPENID, this.getUserMid());\n        let currentOpenid = LocalStorage.get(key_openid, '');\n        console.log('当前用户的openid', currentOpenid);\n\n        let shareOptions = {}\n        if (Utils.table_verify(this.__shareInfo.ShareConfig.friend)) {\n            let shopShareMsg = this.__shareInfo.getShareConfigByType(GConstants.ShareSceneConf.friend)\n            shareOptions = {\n                title: shopShareMsg[0]['title'],\n                imageUrl: shopShareMsg[0]['img']\n            }\n        }\n        console.log('邀请好友分享的数据', shareOptions)\n\n        return {\n            maxFriends: 100,\n            myopenID: currentOpenid,\n            keyList: this.getCloudStorageKeys(),\n            shareOptions: shareOptions,\n        }\n\n    }\n}\n"]}