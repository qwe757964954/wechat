{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeHuCardCtr.ts"],"names":["_decorator","instantiate","Node","tween","EventManager","Utils","BaseComponent","RoomMgr","FXJEvent","GameRuleConfig","GameViewConfig","CardUtil","NodeCardCtr","ccclass","property","NodeHuCardCtr","tooltip","type","_hostDir","_seatList","_scale","_width","_height","_thickness","_groundToCard","onInitModuleEvent","onLoad","initData","initView","start","scale","CardConfig","ScaleHuCard","width","Width","height","Height","thickness","Thickness","groundToCard","GroundToCard","Array","dir","length","node","addChild","setRotationFromEuler","updateView","resetView","getInstance","mySeatId","forEach","value","index","array","removeAllChildren","onGameStart","OnChangedSeat","hostDir","onHu","data","seatId","card","opCard","showHuCard","cardNumber","isReconnect","children","CardHuNum","console","log","who","calculatePlayerPosition","delay","call","pushCardB","pushCardA","row","Math","floor","col","distance","CenterToHuCard","nodeCard","setScale","x","y","z","CenterToHuCardX","SpaceHuCard","setPosition","active","getComponent","setCardByte","showHuAnim","cardNode","aniType","AnimType","Hu","pos","getWorldPosition","dispatch","VIEW_UI_3D_GET_CAMERA","VIEW_OUT_CARD_ANI_PLAY","getWho","dirOut","a","b","onGameOver","onReconnect","playerList","isHu","cards","huCard","isNotNull","onDestroy","args","name"],"mappings":"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","sourcesContent":["\nimport { _decorator, instantiate, Node, tween } from 'cc';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { Utils } from '../../../framework/Utils';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { GameRuleConfig } from '../common/GameRuleConfig';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { CardUtil } from '../util/CardUtil';\nimport { NodeCardCtr } from './NodeCardCtr';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeHuCardCtr\n * URL = db://assets/package/game/scripts/NodeHuCardCtr.ts\n * Time = Tue Aug 15 2023 18:54:40 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('NodeHuCardCtr')\nexport class NodeHuCardCtr extends BaseComponent {\n\t/** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n    /** 麻将位置列表 */\n    private _seatList: Node[] = null;\n\n    /** 手牌比例 */\n    private _scale: number = 0;\n    /** 手牌宽度 */\n    private _width: number = 0;\n    /** 手牌高度 */\n    private _height: number = 0;\n    /** 手牌厚度 */\n    private _thickness: number = 0;\n    /** 手牌与桌子的距离 */\n    private _groundToCard: number = 0;\n    \n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n\t\n\tonLoad () {\n        this.initData()\n        this.initView()\n\t};\n\n\n\tstart () {\n\n\t};\n\n    initData() {\n        \n    }\n\t\n\tinitView () {\n        let scale = GameViewConfig.CardConfig.ScaleHuCard;\n        let width = GameViewConfig.CardConfig.Width * scale;\n        let height = GameViewConfig.CardConfig.Height * scale;\n        let thickness = GameViewConfig.CardConfig.Thickness * scale;\n        let groundToCard = GameViewConfig.CardConfig.GroundToCard * scale;\n        \n        this._scale = scale;\n        this._width = width;\n        this._height = height;\n        this._thickness = thickness;\n        this._groundToCard = groundToCard;\n\n        this._seatList = new Array(4);\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let node = new Node();\n            this.node.addChild(node);\n            node.setRotationFromEuler(0, 90*dir, 0);\n            this._seatList[dir] = node;\n        }\n\t};\n\t\n\tupdateView () {\n\n\t};\n\t\n\tresetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n\n        this._seatList.forEach((value, index, array) => {\n            value.removeAllChildren();\n        });\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir;\n    }\n\n    /** 胡牌 */\n    onHu(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n        let card = data.opCard;\n        this.showHuCard(dir, card, false);\n    }\n\n    private showHuCard(dir: number, cardNumber: number, isReconnect: boolean) {\n        let node = this._seatList[dir];\n        if (node.children.length >= GameRuleConfig.CardHuNum) {\n            console.log(\"NodeHuCardCtr.showHuCard\", \"胡牌数量超过最大限制\", node.children.length, GameRuleConfig.CardHuNum);\n            return;\n        }\n\n        let who = CardUtil.calculatePlayerPosition(this._hostDir + 1, dir + 1);\n        if (who == \"上家\" || who == \"下家\") { // 上下家\n            tween(this.node)\n                .delay(isReconnect ? 0 : 0.5)\n                .call(() => {\n                    this.pushCardB(dir, cardNumber, isReconnect);\n                })\n                .start();\n        } else {\n            tween(this.node)\n                .delay(isReconnect ? 0 : 0.5)\n                .call(() => {\n                    this.pushCardA(dir, cardNumber, isReconnect);\n                })\n                .start();\n\n        }\n    }\n\n    // 共一排，一层4个\n    private pushCardA(dir: number, cardNumber: number, isReconnect: boolean) {\n        let scale = this._scale;\n        let width = this._width;\n        let thickness = this._thickness;\n        let groundToCard = this._groundToCard;\n        \n        let length = this._seatList[dir].children.length;\n        let row = Math.floor( length / 4);\n        let col = length % 4 + 1;\n        let distance = GameViewConfig.CardConfig.CenterToHuCard;\n        let card = instantiate(this.nodeCard);\n        card.setScale(card.scale.x * scale, card.scale.y * scale, card.scale.z * scale);\n        let x = GameViewConfig.CardConfig.CenterToHuCardX + (width + GameViewConfig.CardConfig.SpaceHuCard) * col;\n        let y = groundToCard + row * thickness;\n        card.setPosition(x, y, distance);\n        card.setRotationFromEuler(0, 0, 0);\n        card.active = true;\n        card.getComponent(NodeCardCtr).setCardByte(cardNumber);\n        this._seatList[dir].addChild(card);\n\n        this.showHuAnim(dir, card, isReconnect);\n\n    }\n\n    // 共2排，1排2个，1层4个\n    private pushCardB(dir: number, cardNumber: number, isReconnect: boolean) {\n        let scale = this._scale;\n        let width = this._width;\n        let height = this._height;\n        let thickness = this._thickness;\n        let groundToCard = this._groundToCard;\n\n        let length = this._seatList[dir].children.length;\n        let row = Math.floor( length / 4);\n        let col = length % 4 + 1;\n        let distance = GameViewConfig.CardConfig.CenterToHuCard;\n        let card = instantiate(this.nodeCard);\n        card.setScale(card.scale.x * scale, card.scale.y * scale, card.scale.z * scale);\n        let y = groundToCard + row * thickness;\n        let who = CardUtil.calculatePlayerPosition(this._hostDir + 1, dir + 1);\n        if (who == \"下家\") {\n            distance += 10;\n        }\n\n        if (col == 1 || col == 2) {\n            let x = GameViewConfig.CardConfig.CenterToHuCardX + (width + GameViewConfig.CardConfig.SpaceHuCard) * col;\n            card.setPosition(x, y, distance);\n        } else {\n            let x = GameViewConfig.CardConfig.CenterToHuCardX + (width + GameViewConfig.CardConfig.SpaceHuCard) * (col - 2);\n            card.setPosition(x, y, distance + height);\n        }\n\n        card.setRotationFromEuler(0, 0, 0);\n        card.active = true;\n        card.getComponent(NodeCardCtr).setCardByte(cardNumber);\n        this._seatList[dir].addChild(card);\n\n        this.showHuAnim(dir, card, isReconnect);\n    }\n\n    private showHuAnim(dir: number, cardNode: Node, isReconnect: boolean) {\n        if (!isReconnect) {\n            let data: GameViewConfig.AnimConfig = {\n                seatId : dir + 1,\n                aniType : GameViewConfig.AnimType.Hu,\n                pos : cardNode.getWorldPosition(),\n            }\n            EventManager.dispatch(FXJEvent.VIEW_UI_3D_GET_CAMERA, FXJEvent.VIEW_OUT_CARD_ANI_PLAY, data);\n        }\n    }\n\n    private getWho(dir: number, dirOut: number) {\n        let a = dir; // 自己位置\n        let b = dirOut; // 待查位置\n        let x = ((b + 4) - a) % 4\n        return x;\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n        \n    }\n\n    /** 重连 */\n    onReconnect(data: GameViewConfig.ReconnectConfig) {\n        this.resetView();\n\n        data.playerList.forEach((value, index, array) => {\n            let dir = value.seatId - 1;\n            let isHu = value.isHu;\n            let cards = value.huCard;\n            if (isHu && Utils.isNotNull(cards) && cards > 0) {\n                this.showHuCard(dir, cards, true);\n            }\n        });\n    }\n\n    //销毁\n    onDestroy() {\n    };\n\n    log(...args: any[]) {\n        console.log(this.name, args);\n    }\n\n}\n\n"]}