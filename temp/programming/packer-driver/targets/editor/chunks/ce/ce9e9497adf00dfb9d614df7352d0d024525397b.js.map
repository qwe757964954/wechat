{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/platform/Platform.ts"],"names":["_Platform","error","sys","AppEvent","ClientInfo","GameConfig","GConstants","StoreKey","GameRes","GameTxt","LocalStorage","Utils","Encrypt","Logger","EventManager","HttpRequest","WXSdk","WXSdk_AuthSetting","WXSdk_VibrateShortType","instance","_instance","constructor","_currowPlatForm","platform","_DeviceID","_SystemInfo","_platformVer","_SDKVer","_platFormClient","_Guid","_Machineid","_MachineModel","_PhoneModel","_IMSI","_ICCID","_IMEI","_PhoneCardType","_NetWorkType","_NetWorkSignal","CustomShareFriendsInfo","CustomSharePYQInfo","WxLoginCode","WxAccessToken","WxAuthSettingUserInfo","WxAuthSettingFriends","WxAuthSettingSubscriptions","WxAuthSettingButton","WxAuthSettingButtonParam","WxUserInfo","PLogInfo","access_token","openId","userinfo","TopBarHeight","AppLaunchOptions","AppEnterOptions","logPlatform","dump","initBase","Platform","WECHAT_GAME","SystemInfo","Lang","PlatFormVersion","SDKVersion","ClientPlatform","table","DEBUG","isWXPlatform","isAndroid","isIOS","setEnableDebug","onShareAppMessage","handler","getShareFriendFunc","onShareTimeline","getSharePYQFunc","onShareMessageToFriend","getShareMessageToFriend","showShareMenu","setKeepScreenOn","DESKTOP_BROWSER","DeviceID","getLaunchOptionsSync","getEnterOptionsSync","_initDeviceID","key","str_1","string_format","base64_encode","set","openURL","url","isWindows","isMac","isCanPay","checkTopBarHeight","model","keyList","number_valueOf","isFind","i","length","includes","language","browserVersion","NetWorkType","updateNetWorkType","callback","self","getNetworkType","res","netName","String","toUpperCase","initInfoBase","sysInfo","getSystemInfoSync","updateWxAuthSettingButtonVisible","visible","hide","show","isCanCreateUserInfoButton","createrAuthSettingButton_WX","destroy","reqPlatformLoginInfo","isNoCheckAuthSetting","getLoginCode","checkSession","code","login","param","startShowAuthorize","authorize","userInfo","getSetting","authSetting","getUserInfo","avatarUrl","nullToDefault","city","country","gender","nickName","province","getOpenIDAndAccestToken","loginRsp","data","action","appid","PlatFormAppID","http","post","AppUrlConf","Web","JSON","stringify","openID","openid","dispatch","LOGIN_PLATFORM_FAIL","LoginStateCode","platform_fail_wx_logincode","startLogin","LOGIN_PLATFORM_SUCCESS","platform_fail_wx_code2session_error","showModal","content","confirmText","cancelText","success","confirm","openSetting","platform_fail_wx_notAuthSetting","platform_fail_wx_notAgreeAuthSetting","isTrue","platform_fail_wx_userinfo","updateWXLoginCode","cb","pCall","createrButton","buttonStyle","left","top","width","height","backgroundColor","color","borderColor","textAlign","fontSize","borderWidth","borderRadius","lineHeight","button","createUserInfoButton","type","image","style","withCredentials","onTap","PLATFORM_AUTHSETTING_UPDATE","title","common_window_titlt","wx_authsetting_not_allow_userinfo","showCancel","onNeedPrivacyAuthorization_WX","event","onNeedPrivacyAuthorization","checkPrivacyContract","openPrivacyContract","openPrivacyContract_WX","callFunc","state","openCustomerServiceConversation","option","errParam","setTimeout","setCustomShareInfo","friends","pyq","info","clone","share_wx_friends_txt","imageUrl","AppCommon_Share_Friend_Comm","path","share_wx_pyq_txt","respParam","OTHER_SHTRE_FRIEND_RESULT","shareWXFriends","wxParam","callbackData","shareAppMessage","copyClipboard","str","setClipboardData","save","e","clipboardData","setData","preventDefault","SYS_TOAST_TIP","copySuccess","document","addEventListener","execCommand","removeEventListener","connectSocket","binaryType","fail","completed","header","timeout","ws","WebSocket","closeSocket","wsHandler","reason","close","reqSendPay","body","respBody","respCode","AppPayResult","UNINE","req","msg","isNull","requestMidasPayment","WX_PayOfferId","WX_PayEnv","SUCCESS","OTHER_PAY_RESULT","FAIL","errorTip","pay_error_codelist","regWxNetWorkCallback","onNetworkStatusChange","updateReFreshAccessToken","_callback","LOGIN_WX_ACCESS_UPDATE","reqPlatformFriendInteraction","endFunc","WxFriendInteraction","setPlatformCloudStorage","keyValueList","keys","getPlatformCloudStorage","pData","value","push","setUserCloudStorage","getUserCloudStorage","postMessage","message","getSettingSubscribeMessageStates","subscriptionsSetting","requestSubscribeMessage","tmplIds","vibrate","isLong","shorkOpen","get","SYS_Shock","vibrateLong","heavy","vibrateShort","initAdVideo","adUnitId","createRewardedVideoAd","playerAdVideo","callData","startCallFunc","SYS_CLOSE_NETLOADING","failCallFunc","onClickCloseCallFunc","SYS_SHOW_NETLOADING","playRewardedVideoShow","downloadFile","isReturn","statusCode","filePath","tempFilePath","console","log","table_verify"],"mappings":"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","sourcesContent":["/**\n * Name = Platform\n * URL = db://assets/platform/Platform.ts\n * Time = Wed Apr 27 2022 14:05:27 GMT+0800 (中国标准时间)\n * Author = xueya\n * 平台管理\n */\n\nimport { error, sys } from \"cc\";\nimport { AppEvent } from \"../config/AppEvent\";\nimport { ClientInfo, GameConfig } from \"../config/GameConfig\";\nimport { GConstants, StoreKey } from \"../config/GameConstant\";\nimport { GameRes } from \"../config/GameRes\";\nimport { GameTxt } from \"../config/GameTxt\";\nimport { inf_LoginViewInfo } from \"../framework/InterfaceDefines\";\nimport { LocalStorage } from \"../framework/LocalStorage\";\nimport { Utils } from \"../framework/Utils\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { Logger } from \"../framework/log/Logger\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { HttpRequest } from \"../framework/network/HttpRequest\";\nimport { WXSdk } from \"./weixin/WXSdk\";\nimport { WXSdk_AuthSetting, WXSdk_VibrateShortType, _InterFace_WXSdk_ButtonStyle, _InterFace_WXSdk_SystemInfo, __InterFace_WXSdk_OnShareAppMessage, __InterFace_WXSdk_OnShareTimeline } from \"./weixin/WXSdkDefines\";\n\n\nclass _Platform {\n    private static _instance = null;\n    public static get instance(): _Platform {\n        if (!this._instance || this._instance == null) {\n            this._instance = new _Platform();\n        }\n        return this._instance;\n    }\n    //当前平台\n    _currowPlatForm = sys.platform;\n    //设备识别码\n    _DeviceID = \"\";\n    //系统信息\n    _SystemInfo = null;\n    //平台版本\n    _platformVer: string = \"\";\n    //sdk版本(基础库)\n    _SDKVer: string = \"\";\n    //客户端平台 (ios:iOS微信（包含 iPhone、iPad）android:Android微信 windows:Windows微信 mac:macOS微信)\n    _platFormClient = null;\n    //设备id\n    _Guid = null;\n    //物理网卡地址\n    _Machineid = null;\n    //物理网卡类型\n    _MachineModel = null;\n    //终端型号\n    _PhoneModel = null;\n    //终端设备号\n    _IMSI = null;\n    //_ICCID\n    _ICCID = null;\n    //imei\n    _IMEI = null;\n    //移动终端设备所使用的网络运营商(1:移动, 2:联通, 3:电信)\n    _PhoneCardType = -1;\n    //网络类型 1：wifi  2:2G  3:3G  4:4G  5:5G 6:未知 -1:未知或无网络\n    _NetWorkType = -1;\n    //信号强弱\n    _NetWorkSignal = 3;\n\n    /** 自定义分享好友信息 */\n    CustomShareFriendsInfo: __InterFace_WXSdk_OnShareAppMessage = null;\n    /** 自定义分享朋友圈信息 */\n    CustomSharePYQInfo: __InterFace_WXSdk_OnShareTimeline = null;\n\n    //微信登录code(失效后为空)\n    WxLoginCode = null;\n    //微信AccessToken\n    WxAccessToken = null;\n    /** 微信授权用户信息 0:未授权 1已授权 -1拒绝授权 */\n    WxAuthSettingUserInfo = 0;\n    /** 微信授权好友信息 0:未授权 1已授权 -1拒绝授权 */\n    WxAuthSettingFriends = 0;\n    /** 微信授权订阅信息 */\n    WxAuthSettingSubscriptions = null;\n    /** 微信授权按钮 */\n    WxAuthSettingButton = null;\n    /** 授权按钮的屏幕参数{pos:?,size:?,img:?,withCredentials:?} */\n    WxAuthSettingButtonParam = null;\n\n    /** 微信用户信息 */\n    WxUserInfo = null;\n    /** 平台用户登录的信息 */\n    PLogInfo: inf_LoginViewInfo = { access_token: null, openId: null, userinfo: null };\n    /** 刘海屏高度 为0时代表没有 刘海屏比普通屏多20像素 */\n    TopBarHeight = 0;\n    /** 启动参数 */\n    AppLaunchOptions = {};\n    /** 显示时附带的参数 */\n    AppEnterOptions = {};\n\n    constructor() {\n        Logger.logPlatform(\"***************************************\")\n        Logger.logPlatform(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\平台初始化\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\n        Logger.logPlatform(`当前平台:\\n      ${this._currowPlatForm}`)\n        Logger.logPlatform(`系统信息:\\n`)\n        this.dump()\n        Logger.logPlatform(\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\平台初始化\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\n        Logger.logPlatform(\"***************************************\")\n    }\n\n    /** 初始化支持 */\n    initBase() {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                this.SystemInfo;\n                this.Lang;\n                this.PlatFormVersion;\n                this.SDKVersion;\n                this.ClientPlatform;\n\n                Logger.logPlatform(\"输出系统信息：====>\")\n                Logger.table(this._SystemInfo)\n                Logger.logPlatform(this._SystemInfo)\n                //打开调试开关\n                if (ClientInfo.DEBUG == true && this.isWXPlatform() && (this.isAndroid() == true || this.isIOS() == true)) {\n                    WXSdk.instance.setEnableDebug(ClientInfo.DEBUG);\n                }\n                WXSdk.instance.onShareAppMessage(Utils.handler(this, this.getShareFriendFunc));\n                WXSdk.instance.onShareTimeline(Utils.handler(this, this.getSharePYQFunc));\n                WXSdk.instance.onShareMessageToFriend(Utils.handler(this, this.getShareMessageToFriend));\n                WXSdk.instance.showShareMenu(true, ['shareAppMessage', 'shareTimeline'])\n\n                WXSdk.instance.setKeepScreenOn(true);\n            case sys.Platform.DESKTOP_BROWSER:\n                this.SystemInfo;\n                this.Lang;\n                this.PlatFormVersion;\n                this.SDKVersion;\n                this.ClientPlatform;\n            default:\n                this.SystemInfo;\n                break;\n        }\n        this.DeviceID;\n        this.getLaunchOptionsSync();\n        this.getEnterOptionsSync();\n    }\n    /** 生成唯一设备识别码 */\n    private _initDeviceID() {\n        let key = \"DeviceID\";\n        let str_1 = Utils.string_format(\"platform:{0} platformVer:{1} sdkVer:{2}\", this._currowPlatForm, this._platformVer, this._SDKVer);\n\n        this._DeviceID = Encrypt.base64_encode(str_1) + \"_\";\n        LocalStorage.set(key, this._DeviceID);\n        Logger.logPlatform(\"生成唯一设备识别码==>device =\", this._DeviceID, str_1)\n    }\n\n    /**输出系统信息 */\n    dump() {\n        sys.dump()\n    }\n    /** 打开一个Url 并非所有平台有效*/\n    openURL(url: string) {\n        sys.openURL(url)\n    }\n\n    /** 是否是wx平台 */\n    isWXPlatform() {\n        return this._currowPlatForm == sys.Platform.WECHAT_GAME\n    }\n    /** 是否是安卓平台 */\n    isAndroid() {\n        return this.ClientPlatform == \"android\";\n    }\n    /** 是否是windows平台 */\n    isWindows() {\n        return this.ClientPlatform == \"windows\";\n    }\n\n    /** 是否是mac平台 */\n    isMac() {\n        return this.ClientPlatform == \"mac\";\n    }\n\n    /** 是否是ios平台 */\n    isIOS() {\n        return this.ClientPlatform == \"ios\";\n    }\n    /** 是否支持支付 */\n    isCanPay(): boolean {\n        // if (!this.isWXPlatform() || (this.isAndroid() == false && this.isWindows() == false)) {\n        // \treturn false;\n        // }\n        return true;\n    }\n    /** 检查刘海屏高度 */\n    checkTopBarHeight() {\n        this.TopBarHeight = 0;\n        if (this._SystemInfo) {\n            let model = this._SystemInfo[\"model\"];\n            let keyList = [\n                [\"iPhone 11\"],\n                [\"iPhone 12\"],\n                [\"iPhone 13\"],\n                [\"iPhone14,5\"],\n                [\"iPhone14\"],\n                [\"iPhone\", \"Pro\"],\n                [\"iPhone\", \"mini\"],\n                [\"iPhone\", \"X\"],\n            ];\n            if (model && Utils.number_valueOf(this._SystemInfo[\"statusBarHeight\"]) > 20) {\n                let isFind = false;\n                for (let i = 0; i < keyList.length; i++) {\n                    if (keyList[i].length == 1) {\n                        if (model.includes(keyList[i][0])) {\n                            isFind = true;\n                            break;\n                        }\n                    } else if (keyList[i].length == 2) {\n                        if (model.includes(keyList[i][0]) && model.includes(keyList[i][1])) {\n                            isFind = true;\n                            break;\n                        }\n                    }\n                }\n                if (isFind == true) {\n                    //刘海屏比普通屏多20像素\n                    this.TopBarHeight = 20;\n                }\n            }\n        }\n    }\n\n    /** 获取设备ID */\n    get DeviceID(): string {\n        this._initDeviceID();\n        return this._DeviceID;\n    }\n    /** 获取平台语言 */\n    get Lang(): string | null {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                this.SystemInfo;\n                if (this._SystemInfo) {\n                    return this._SystemInfo[\"language\"]\n                }\n                return null\n            case sys.Platform.DESKTOP_BROWSER:\n                return sys.language\n            default:\n                break;\n        }\n        return null\n    }\n    /** 获取平台版本 */\n    get PlatFormVersion(): string | null {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME: //微信版本 如:8.0.5\n                if (!this._platformVer) {\n                    this.SystemInfo;\n                    if (this._SystemInfo) {\n                        this._platformVer = this._SystemInfo[\"version\"];\n                    }\n                }\n                return this._platformVer\n            case sys.Platform.DESKTOP_BROWSER:\n                this._platformVer = sys.browserVersion;\n                return this._platformVer\n            default:\n                this._platformVer = \"\"\n                break;\n        }\n        return this._platformVer\n    }\n    /** 获取sdk版本 */\n    get SDKVersion() {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME: //基础库版本 如:2.24.5\n                if (!this._SDKVer) {\n                    this.SystemInfo;\n                    if (this._SystemInfo) {\n                        this._SDKVer = this._SystemInfo[\"SDKVersion\"];\n                    }\n                }\n                return this._SDKVer;\n            case sys.Platform.DESKTOP_BROWSER:\n                this._SDKVer = \"\";\n                return this._SDKVer;\n            default:\n                this._SDKVer = \"\";\n                break;\n        }\n        return this._SDKVer\n    }\n    /** 获取客户端类型 安卓 ios windows */\n    get ClientPlatform() {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                if (!this._platFormClient) {\n                    this.SystemInfo;\n                    if (this._SystemInfo) {\n                        this._platFormClient = this._SystemInfo[\"platform\"]\n                    }\n                }\n                return this._platFormClient;\n            case sys.Platform.DESKTOP_BROWSER:\n                this._platFormClient = \"windows\";\n                return this._platFormClient;\n            default:\n                this._platFormClient = null;\n                break;\n        }\n        return this._platFormClient;\n    }\n    /** 获取网络类型 */\n    get NetWorkType() {\n        return this._NetWorkType;\n    }\n    /** 更新网络类型 */\n    updateNetWorkType(callback: Function = null) {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                let self = this;\n                WXSdk.instance.getNetworkType((res) => {\n                    Logger.logPlatform(\"getNetworkType（网络状态，信号强度）的返回\", res);\n                    if (res) {\n                        if (res[\"networkType\"]) {\n                            let netName = String(res[\"networkType\"]).toUpperCase();\n                            switch (netName) {\n                                case \"WIFI\":\n                                    self._NetWorkType = 1;\n                                    break;\n                                case \"2G\":\n                                    self._NetWorkType = 2;\n                                    break;\n                                case \"3G\":\n                                    self._NetWorkType = 3;\n                                    break;\n                                case \"4G\":\n                                    self._NetWorkType = 4;\n                                    break;\n                                case \"5G\":\n                                    self._NetWorkType = 5;\n                                case \"UNKNOWN\":\n                                    self._NetWorkType = 6;\n                                    break;\n                                default:\n                                    self._NetWorkType = -1;\n                                    break;\n                            };\n                        };\n                        if (res[\"signalStrength\"]) {\n                            self._NetWorkSignal = res[\"signalStrength\"];\n                        };\n                        if (callback) {\n                            callback();\n                        };\n                    }\n                });\n                break;\n\n            default:\n                this._NetWorkType = 6;\n                if (callback) {\n                    callback();\n                };\n                break;\n        }\n        return this._NetWorkType;\n    }\n\n\n    /** 获取系统信息 */\n    get SystemInfo() {\n        let self = this\n        let initInfoBase = function () {\n            self._Guid = \"\";\n            self._Machineid = \"\";\n            self._MachineModel = \"\";\n            self._PhoneModel = \"\"\n            self._IMSI = \"\";\n            self._ICCID = \"\";\n            self._IMEI = \"\";\n            self._PhoneCardType = -1;\n            self._NetWorkType = -1;\n        }\n\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                if (!this._SystemInfo && WXSdk) {\n                    let sysInfo: _InterFace_WXSdk_SystemInfo = WXSdk.instance.getSystemInfoSync();\n                    this._SystemInfo = sysInfo;\n                    this.checkTopBarHeight();\n                }\n\n                initInfoBase();\n                this.updateNetWorkType;\n                return this._SystemInfo\n            case sys.Platform.DESKTOP_BROWSER:\n                initInfoBase()\n\n                return sys\n            default:\n                initInfoBase()\n                break;\n        }\n        return null\n    }\n    /**\n     * 更新授权按钮的显隐\n     * @param visible 不传则销毁\n     */\n    updateWxAuthSettingButtonVisible(visible: boolean = null) {\n        if (visible == false) {\n            if (Platform.WxAuthSettingButton && Platform.WxAuthSettingButton.hide) {\n                Platform.WxAuthSettingButton.hide();\n            }\n        } else if (visible == true) {\n            if (Platform.WxAuthSettingButton && Platform.WxAuthSettingButton.show) {\n                Platform.WxAuthSettingButton.show();\n            } else {\n                if (WXSdk.instance.isCanCreateUserInfoButton()) {\n                    Platform.createrAuthSettingButton_WX();\n                }\n            }\n\n        } else {\n            if (Platform.WxAuthSettingButton && Platform.WxAuthSettingButton.destroy) {\n                Platform.WxAuthSettingButton.destroy();\n            }\n            Platform.WxAuthSettingButton = null;\n        }\n    }\n    /** 获取平台登录信息 isNoCheckAuthSetting：是否不检查授权*/\n    reqPlatformLoginInfo(isNoCheckAuthSetting = false) {\n        Logger.logPlatform(\"获取平台用户信息:>>>\")\n        switch (this._currowPlatForm) {\n            /** 微信小程序平台 获取用户信息 */\n            case sys.Platform.WECHAT_GAME:\n                //获取登录凭证 code（先检查是否失效）\n                let getLoginCode = function (callback: Function) {\n                    if (Platform.WxLoginCode != null) {\n                        WXSdk.instance.checkSession(\n                            () => {\n                                Logger.logPlatform(\"Success:登录凭证未失效 Code = \" + Platform.WxLoginCode);\n                                callback({ code: Platform.WxLoginCode })\n                            },\n                            () => {\n                                Logger.logPlatform(\"Fail:登录凭证已失效 即将请求登录\");\n                                Platform.WxLoginCode = null;\n                                getLoginCode(callback);\n                            },\n                            () => {\n                                Logger.logPlatform(\"Fail:登录凭证已失效 即将请求登录\");\n                                Platform.WxLoginCode = null;\n                                getLoginCode(callback);\n                            })\n                        return;\n                    }\n                    WXSdk.instance.login(5000, (param) => {\n                        Logger.logPlatform(`成功获取登录凭证 code = ${param.code}`)\n                        Platform.WxLoginCode = param.code;\n                        callback({ code: Platform.WxLoginCode })\n                    }, () => {\n                        Logger.logPlatform(`获取登录凭证失败`)\n                        callback(null)\n                    })\n                }\n                //显示授权弹窗\n                let startShowAuthorize = function (callback: Function) {\n                    WXSdk.instance.authorize(WXSdk_AuthSetting.userInfo,\n                        () => {\n                            Logger.logPlatform(`授权成功`);\n                            Platform.WxAuthSettingUserInfo = 1;\n                            callback(true);\n                        },\n                        () => {\n                            Logger.logPlatform(`授权失败`);\n                            Platform.WxAuthSettingUserInfo = -1;\n                            callback(false);\n                        }\n                    )\n                }\n                //获取授权信息\n                let getSetting = function (callback: Function) {\n                    WXSdk.instance.getSetting(\n                        false,\n                        (param) => {\n                            if (param.authSetting[WXSdk_AuthSetting.userInfo]) {\n                                Platform.WxAuthSettingUserInfo = 1;\n                                Logger.logPlatform(`getSetting:已授权用户信息`)\n                                //进入下一步\n                                callback(param.authSetting[WXSdk_AuthSetting.userInfo])\n                            } else {\n                                Logger.logPlatform(\"getSetting:没有获得授权\")\n                                Platform.WxAuthSettingUserInfo = 0;\n\n                                if (WXSdk.instance.isCanCreateUserInfoButton()) {\n                                    Logger.logPlatform(\"getSetting:创建授权按钮\");\n                                    Platform.updateWxAuthSettingButtonVisible(true);\n                                } else {\n                                    Logger.logPlatform(\"getSetting:弹出授权弹窗\");\n                                    //弹出授权弹窗\n                                    startShowAuthorize(callback);\n                                }\n                            }\n                        },\n                        () => {\n                            Logger.logPlatform(\"getSetting:获取授权信息失败\")\n                            callback(null)\n                        }\n                    )\n                }\n                //获取用户信息\n                let getUserInfo = function (callback: Function) {\n                    let sysInfo = Platform.SystemInfo\n                    WXSdk.instance.getUserInfo(\n                        true,\n                        sysInfo[\"language\"],\n                        (param) => {\n                            Logger.logPlatform(`getUserInfo:获取用户信息成功`)\n                            Utils.dump(param);\n                            let userInfo = {\n                                avatarUrl: Utils.nullToDefault(param[\"userInfo\"][\"avatarUrl\"], \"\"),\n                                city: Utils.nullToDefault(param[\"userInfo\"][\"city\"], \"\"),\n                                country: Utils.nullToDefault(param[\"userInfo\"][\"country\"], \"\"),\n                                gender: Utils.nullToDefault(param[\"userInfo\"][\"gender\"], 0),\n                                language: Utils.nullToDefault(param[\"userInfo\"][\"language\"], sysInfo[\"language\"]),\n                                nickName: Utils.nullToDefault(param[\"userInfo\"][\"nickName\"], \"\"),\n                                province: Utils.nullToDefault(param[\"userInfo\"][\"province\"], \"\"),\n                            }\n                            Platform.WxUserInfo = userInfo;\n                            Logger.logPlatform(\"输出用户信息：\");\n                            Logger.logPlatform(Platform.WxUserInfo)\n                            callback(param);\n                        },\n                        () => {\n                            Logger.logPlatform(\"获取用户信息失败\")\n                            Platform.WxUserInfo = null;\n                            callback(null)\n                        }\n                    )\n                }\n                //获取OpenID和AccessToken\n                let getOpenIDAndAccestToken = function (callback: Function) {\n                    getLoginCode((loginRsp) => {\n                        if (loginRsp && loginRsp.code) {\n                            Platform.WxLoginCode = loginRsp.code;\n                            let data = {\n                                action: \"core.getMiniConfig\",\n                                code: Platform.WxLoginCode,\n                                appid: ClientInfo.PlatFormAppID,\n                            }\n                            let http = new HttpRequest();\n                            http.post(GameConfig.instance.AppUrlConf.Web, JSON.stringify(data),\n                                (res) => {\n                                    let openID = null;\n                                    let access_token = null;\n                                    if (res && res[\"code\"] == 200) {\n                                        if (res[\"result\"]) {\n                                            if (res[\"result\"][\"session\"]) {//OpenID\n                                                openID = Utils.nullToDefault(res[\"result\"][\"session\"][\"openid\"], null);\n                                            }\n                                            if (res[\"result\"][\"token\"]) {//access_token\n                                                access_token = Utils.nullToDefault(res[\"result\"][\"token\"][\"access_token\"], null);\n                                            }\n                                        }\n                                    }\n                                    if (openID && access_token) {\n                                        let data = {\n                                            openid: openID,\n                                            access_token: access_token,\n                                        }\n                                        Logger.logPlatform(`Success:获取OpenID 和 AccessToken成功 openID=${data.openid} access_token=${data.access_token}`);\n                                        callback(data);\n                                    } else {\n                                        Logger.logPlatform(`Fail:获取OpenID 和 AccessToken失败`);\n                                        callback(null);\n                                    }\n                                }, (res) => {\n                                    Logger.logPlatform(`Fail:获取OpenID 和 AccessToken失败`, res);\n                                    callback(null);\n                                }, 'json')\n                        } else {\n                            EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_logincode)\n                        }\n                    })\n                }\n                /** 执行步骤：\n                 * 1、调用 wx.login(object) 接口获取登录凭证 code。\n                 * 2、如果第1步成功，在“success”中调用 wx.getSetting(object)，检查是否已经授权。\n                 * 3、如果已经授权，则可以直接调用 wx.getUserInfo(object) 拿到用户信息。\n                 * 4、如果未授权，调用wx.createUserInfoButton(object)，调起授权按钮，授权成功后可以拿到用户信息。\n                 */\n                let startLogin = function () {\n                    getOpenIDAndAccestToken((param) => {\n                        if (param) {\n                            Platform.updateWxAuthSettingButtonVisible();\n                            //保存用于登录的信息\n                            Platform.PLogInfo = { access_token: param[\"access_token\"], openId: param[\"openid\"], userinfo: Platform.WxUserInfo }\n                            Logger.logPlatform(\"平台登录信息：>>>\", Platform.PLogInfo)\n                            EventManager.dispatch(AppEvent.LOGIN_PLATFORM_SUCCESS, Platform.PLogInfo)\n                        } else {\n                            //失败\n                            EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_code2session_error)\n                        }\n                    })\n                }\n                //已拒绝授权\n                if (Platform.WxAuthSettingUserInfo == -1) {\n                    WXSdk.instance.showModal({\n                        content: '博雅飞小鸡需要获取您的用户信息，是否去设置打开?',\n                        confirmText: \"确认\",\n                        cancelText: \"取消\",\n                        success: function (res) {\n                            //点击“确认”时打开设置页面\n                            if (res.confirm) {\n                                WXSdk.instance.openSetting(false,\n                                    (param) => {\n                                        if (param.authSetting[WXSdk_AuthSetting.userInfo]) {\n                                            Platform.WxAuthSettingUserInfo = 1;\n                                            Logger.logPlatform(`已授权用户信息`)\n                                            Platform.reqPlatformLoginInfo();\n                                        } else {\n                                            Logger.logPlatform(\"没有获得授权\")\n                                            Platform.WxAuthSettingUserInfo = -1;\n                                            Platform.WxUserInfo = null;\n                                            EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_notAuthSetting);\n                                        }\n                                    },\n                                    (res) => {\n                                        EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_notAgreeAuthSetting);\n                                    },\n                                )\n                            } else {\n                                //点击了取消\n                                EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_notAgreeAuthSetting);\n                            }\n                        }\n                    });\n                    return;\n                }\n\n                if (isNoCheckAuthSetting) {\n                    Platform.WxLoginCode = null;\n                    startLogin();\n                    return;\n                }\n\n                getLoginCode((loginRsp) => {\n                    if (loginRsp && loginRsp.code) {\n                        //检查授权\n                        getSetting((isTrue) => {\n                            if (isTrue != null) {\n                                if (isTrue == false) {//拒绝授权了\n                                    Logger.logPlatform(\"用户拒绝授权了\");\n                                    EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_notAgreeAuthSetting)\n                                    return;\n                                }\n                                getUserInfo((userInfo) => {\n                                    if (userInfo) {\n                                        Platform.WxLoginCode = null;\n                                        startLogin();\n                                    } else {\n                                        EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_userinfo)\n                                    }\n                                })\n                            } else {\n                                EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_notAuthSetting)\n                            }\n                        })\n                    } else {\n                        EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_logincode)\n                    }\n                })\n\n                break;\n\n            case sys.Platform.DESKTOP_BROWSER:\n                EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_logincode)\n                break;\n            default:\n                EventManager.dispatch(AppEvent.LOGIN_PLATFORM_FAIL, GConstants.LoginStateCode.platform_fail_wx_logincode)\n                break;\n        }\n    }\n    /**\n     * 更新微信的login code凭证\n     * @param cb \n     * @returns \n     */\n    updateWXLoginCode(cb: Function = null): boolean {\n        if (!this.isWXPlatform()) {\n            return false;\n        }\n        Logger.logPlatform(\"updateWXLoginCode:更新微信的login code凭证：目前:>>\" + Platform.WxLoginCode)\n        //获取登录凭证 code（先检查是否失效）\n        let getLoginCode = function (callback: Function) {\n            if (Platform.WxLoginCode != null) {\n                WXSdk.instance.checkSession(\n                    () => {\n                        Logger.logPlatform(\"Success:登录凭证未失效 Code = \" + Platform.WxLoginCode);\n                    },\n                    () => {\n                        Logger.logPlatform(\"Fail:登录凭证已失效 \");\n                        Platform.WxLoginCode = null;\n                    },\n                    () => {\n                        Logger.logPlatform(\"getLoginCode:登录凭证是否失效：\", Platform.WxLoginCode == null);\n                        if (Platform.WxLoginCode) {\n                            callback({ code: Platform.WxLoginCode })\n                        } else {\n                            getLoginCode(callback);\n                        }\n                    })\n                return;\n            } else {\n                WXSdk.instance.login(5000, (param) => {\n                    Logger.logPlatform(`成功获取登录凭证 code = ${param.code}`);\n                    Platform.WxLoginCode = param.code;\n                    callback({ code: Platform.WxLoginCode });\n                }, () => {\n                    Logger.logPlatform(`获取登录凭证失败`);\n                    callback(null);\n                })\n            }\n        }\n        getLoginCode((pCall) => {\n            if (cb) {\n                cb(pCall)\n            }\n        });\n        return true;\n    }\n    /** 创建授权按钮 */\n    createrAuthSettingButton_WX() {\n        if (!this.isWXPlatform()) {\n            return\n        }\n        if (!this.WxAuthSettingButtonParam) {\n            return;\n        }\n        if (Platform.WxAuthSettingButton && Platform.WxAuthSettingButton.destroy) {\n            return Platform.WxAuthSettingButton.destroy();\n        }\n        Platform.WxAuthSettingButton = null;\n        Logger.logPlatform(\"创建授权按钮\", Platform.WxAuthSettingButtonParam)\n        //创建授权按钮\n        let createrButton = function () {\n            let sysInfo = Platform.SystemInfo;\n            let buttonStyle: _InterFace_WXSdk_ButtonStyle = {\n                left: Platform.WxAuthSettingButtonParam[\"pos\"][\"x\"],\n                top: Platform.WxAuthSettingButtonParam[\"pos\"][\"y\"],\n                width: Platform.WxAuthSettingButtonParam[\"size\"][\"width\"],\n                height: Platform.WxAuthSettingButtonParam[\"size\"][\"height\"],\n                backgroundColor: null,\n                color: null,\n                borderColor: null,\n                textAlign: \"center\",\n                fontSize: 20,\n                borderWidth: 0,\n                borderRadius: 0,\n                lineHeight: Platform.WxAuthSettingButtonParam[\"size\"][\"height\"],\n            }\n\n            let button = WXSdk.instance.createUserInfoButton({\n                type: \"image\",\n                image: Platform.WxAuthSettingButtonParam[\"img\"],\n                style: buttonStyle,\n                withCredentials: ((Platform.WxAuthSettingButtonParam[\"withCredentials\"] != null) ? Platform.WxAuthSettingButtonParam[\"withCredentials\"] : true)\n            });\n\n            if (!button) {//平台不支持创建授权按钮\n                return null;\n            }\n            button.onTap(function (res) {\n                Logger.logPlatform(\"=====授权按钮:点击返回=====\", res)\n                if (res && res[\"userInfo\"]) {\n                    Logger.logPlatform(\"=====授权按钮:用户授权成功=====\")\n                    Logger.logPlatform(res);\n                    let userInfo = {\n                        avatarUrl: Utils.nullToDefault(res[\"userInfo\"][\"avatarUrl\"], \"\"),\n                        city: Utils.nullToDefault(res[\"userInfo\"][\"city\"], \"\"),\n                        country: Utils.nullToDefault(res[\"userInfo\"][\"country\"], \"\"),\n                        gender: Utils.nullToDefault(res[\"userInfo\"][\"gender\"], 0),\n                        language: Utils.nullToDefault(res[\"userInfo\"][\"language\"], sysInfo[\"language\"]),\n                        nickName: Utils.nullToDefault(res[\"userInfo\"][\"nickName\"], \"\"),\n                        province: Utils.nullToDefault(res[\"userInfo\"][\"province\"], \"\"),\n                    }\n                    Platform.WxUserInfo = userInfo;\n                    Platform.WxAuthSettingUserInfo = 1;\n                    //已授权，并通知\n                    EventManager.dispatch(AppEvent.PLATFORM_AUTHSETTING_UPDATE);\n                    //交给UI处理授权成功之后\n                } else {\n                    Platform.updateWxAuthSettingButtonVisible(true);\n                    Platform.WxAuthSettingUserInfo = 0;\n                    WXSdk.instance.showModal({\n                        title: GameTxt.common_window_titlt,\n                        content: GameTxt.wx_authsetting_not_allow_userinfo,\n                        showCancel: false,\n                    });\n                }\n            });\n            button.show();\n            return button\n        };\n        Platform.WxAuthSettingButton = createrButton();\n        EventManager.dispatch(AppEvent.PLATFORM_AUTHSETTING_UPDATE, Platform.WxAuthSettingButton);\n        return Platform.WxAuthSettingButton\n\n    }\n    /** 启动隐私授权上报弹窗 */\n    onNeedPrivacyAuthorization_WX(event: string = null) {\n        Logger.logPlatform(\"启动隐私授权上报\")\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.onNeedPrivacyAuthorization(event);\n                break;\n            default:\n                break;\n        };\n    }\n    /** 检查隐私保护指引是否支持 */\n    checkPrivacyContract(): boolean {\n        if (this._currowPlatForm == sys.Platform.WECHAT_GAME) {\n            return WXSdk.instance.openPrivacyContract(true);\n        }\n        return false;\n    }\n    /** 打开隐私保护指引 */\n    openPrivacyContract_WX(callback: Function = null) {\n        Logger.logPlatform(\"打开隐私保护指引\")\n        let res = false;\n        let callFunc = function (state) {\n            if (callback && res == false) {\n                callback(state);\n                res = true;\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.openPrivacyContract(false, () => {\n                    callFunc(true);\n                }, () => {\n                    callFunc(false);\n                });\n                break;\n            default:\n                break;\n        };\n    }\n    /**\n     * 联系客服\n     * @param option 传递的参数 会回传\n     * @param callback 回调函数\n     */\n    openCustomerServiceConversation(option = {}, callback: Function = null) {\n        Logger.logPlatform(\"点击了联系客服\")\n        let res = false;\n        let callFunc = function (state: boolean, errParam = null) {\n            if (callback && res == false) {\n                setTimeout(() => {\n                    callback(state, option);\n                }, 1500)\n            }\n            res = true;\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                // 分享之后的回调函数实际是callFunc()\n                WXSdk.instance.openCustomerServiceConversation(\n                    option['sessionFrom'],\n                    () => {\n                        callFunc(true)\n                    },\n                    (errParam) => {\n                        callFunc(false, errParam)\n                    },\n                    null,\n                    option['showMessageCard'],\n                    option['sendMessageTitle'],\n                    option['sendMessagePath'],\n                    option['sendMessageImg']);;\n                break;\n            default:\n                callFunc(true);\n                break;\n        };\n    }\n    /**\n     * 设置自定义分享参数（只能用一次）\n     * @param friends 分享好友参数 __InterFace_WXSdk_OnShareAppMessage\n     * @param pyq 分享朋友圈参数__InterFace_WXSdk_OnShareTimeline\n     */\n    setCustomShareInfo(friends: __InterFace_WXSdk_OnShareAppMessage = null, pyq: __InterFace_WXSdk_OnShareTimeline = null) {\n        Platform.CustomShareFriendsInfo = friends;\n        Platform.CustomSharePYQInfo = pyq;\n    }\n    /** wx:监听用户点击 分享好友 按钮时触发的事件 */\n    getShareFriendFunc() {\n        Logger.logPlatform(\"点击了分享给朋友\")\n        if (Platform.CustomShareFriendsInfo) {\n            let info = Utils.clone(Platform.CustomShareFriendsInfo);\n            Platform.CustomShareFriendsInfo = null;\n            return info;\n        }\n        let param: __InterFace_WXSdk_OnShareAppMessage = {}\n\n        param.title = GameTxt.share_wx_friends_txt;\n        param.imageUrl = GameRes.AppCommon_Share_Friend_Comm.path;\n        return param;\n    }\n    /** wx：监听用户点击 分享朋友圈 按钮时触发的事件*/\n    getSharePYQFunc() {\n        Logger.logPlatform(\"点击了分享到朋友圈\")\n        if (Platform.CustomSharePYQInfo) {\n            let info = Utils.clone(Platform.CustomSharePYQInfo);\n            Platform.CustomSharePYQInfo = null;\n            return info;\n        }\n        let param: __InterFace_WXSdk_OnShareTimeline = {}\n        param.title = GameTxt.share_wx_pyq_txt;\n        param.imageUrl = GameRes.AppCommon_Share_Friend_Comm.path;\n        return param\n    }\n    /** wx：监听用户「分享到指定朋友」触发的结果事件*/\n    getShareMessageToFriend(respParam = {}) {\n        Logger.logPlatform(\"用户分享到了指定好友\", respParam)\n        let res = true;\n        if (!respParam || respParam[\"success\"] != true) {\n            res = false;\n        }\n        //通知:分享结果\n        EventManager.dispatch(AppEvent.OTHER_SHTRE_FRIEND_RESULT, res)\n    }\n    /**\n     * 微信分享：好友\n     * @param wxParam 分享好友的参数\n     * @param callback 回调函数\n     * @param callbackData 请求时传递的参数附加参数\n     * @returns \n     */\n    shareWXFriends(wxParam: __InterFace_WXSdk_OnShareAppMessage = null, callback: Function = null, callbackData = null) {\n        if (this.isWXPlatform() == false) {\n            if (callback) {\n                callback(callbackData);\n            }\n            return;\n        }\n        WXSdk.instance.shareAppMessage(wxParam || this.getShareFriendFunc());\n        if (callback) {\n            setTimeout(() => {\n                callback(callbackData);\n            }, 1500)\n        }\n    }\n\n    /** 复制 */\n    copyClipboard(str: string, callback?: Function) {\n        if (!str) {\n            return\n        }\n        str = String(str);\n\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                Logger.logPlatform(\"调用复制\");\n                WXSdk.instance.setClipboardData(str,\n                    (res) => {\n                        callback && callback(str);\n                    },\n                    (res) => {\n                        Logger.logPlatform(\"复制失败:\", res);\n                        callback && callback(null)\n                    }\n                )\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                let save = function (e) {\n                    e.clipboardData.setData('text/plain', str);\n                    e.preventDefault();\n                    EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.copySuccess })\n                    callback && callback(str);\n                }\n                document.addEventListener('copy', save);\n                document.execCommand('copy');\n                document.removeEventListener('copy', save);\n                break;\n            default:\n                callback && callback(null)\n                break;\n        }\n    }\n    /**\n     * 创建websocket\n     * @param url 地址 \"ws://\" \"wss://\"\n     * @param binaryType 返回的数据类型 wxgame不支持自定义\n     * @param success 接口调用成功的回调\n     * @param fail 接口调用失败的回调\n     * @param completed 接口成功的回调\n     * @param timeout 超时时间：毫秒\n     */\n    connectSocket(url: string, binaryType: BinaryType = \"arraybuffer\", success: Function = null, fail: Function = null, completed: Function = null, header: object = null, timeout: number = null) {\n        Logger.logPlatform(\"创建websocket:>>>url:\" + url)\n\n        if (this._currowPlatForm == sys.Platform.WECHAT_GAME) {\n            return WXSdk.instance.connectSocket(url, success, fail, completed, header, timeout);\n        } else {\n            let ws = new WebSocket(url);\n            if (ws) {\n                ws.binaryType = binaryType ? binaryType : \"arraybuffer\";\n                if (success) {\n                    success();\n                }\n            } else {\n                if (fail) {\n                    fail();\n                }\n            }\n            return ws;\n        }\n    }\n    /** 关闭websocket */\n    closeSocket(wsHandler, code: number = 1000, reason: string = \"\") {\n        if (this._currowPlatForm == sys.Platform.WECHAT_GAME) {\n            if (wsHandler && wsHandler.close) {\n                wsHandler.close({ code: code, reason: reason });\n            } else {\n                WXSdk.instance.closeSocket(code, reason);\n            }\n        } else {\n            if (wsHandler && wsHandler.close) {\n                wsHandler.close(code, reason);\n            } else {\n                error(\"关闭websocket失败 缺少websocket句柄\");\n            }\n        }\n    }\n    /** 请求发起支付(只支持安卓平台) */\n    reqSendPay(body: Object) {\n        //返回数据的格式\n        let respBody = { respCode: GConstants.AppPayResult.UNINE, req: body, msg: null };\n\n        if (Utils.isNull(body) || Utils.isNull(body[\"num\"]) || Utils.isNull(body[\"zoneId\"])) {\n            if (body[\"callback\"]) {\n                body[\"callback\"](respBody);\n            }\n            return;\n        }\n        if (this.isCanPay() == false) {\n            Logger.logPlatform(`${this.ClientPlatform} 不支持支付`);\n            //测试代码\n            // respBody.respCode = GConstants.AppPayResult.SUCCESS;\n\n            if (body[\"callback\"]) {\n                body[\"callback\"](respBody);\n            }\n            return;\n        }\n\n        WXSdk.instance.requestMidasPayment(body[\"num\"], ClientInfo.WX_PayOfferId, ClientInfo.WX_PayEnv, body[\"zoneId\"],\n            (res) => {\n                Logger.logPlatform(\"******支付成功***********\")\n                Logger.logPlatform(res);\n                respBody.respCode = GConstants.AppPayResult.SUCCESS;\n                respBody.msg = res;\n                if (body[\"callback\"]) {\n                    body[\"callback\"](respBody);\n                }\n                //支付结果\n                EventManager.dispatch(AppEvent.OTHER_PAY_RESULT, respBody);\n            },\n            (res) => {\n                Logger.logPlatform(\"******支付失败***********\")\n                Logger.logPlatform(res);\n                respBody.respCode = GConstants.AppPayResult.FAIL;\n                respBody.msg = res;\n                let errorTip = null;\n                if (res[\"errCode\"] != 1) {//非取消支付\n                    errorTip = GameTxt.pay_error_codelist[res[\"errCode\"]];\n                    if (!errorTip) {\n                        errorTip = res[\"errMsg\"];\n                    }\n                    if (errorTip) {\n                        EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: errorTip });\n                    }\n                }\n                if (body[\"callback\"]) {\n                    body[\"callback\"](respBody);\n                }\n                //支付结果\n                EventManager.dispatch(AppEvent.OTHER_PAY_RESULT, respBody);\n            }\n        );\n    }\n    /** 注册网络回调函数 */\n    regWxNetWorkCallback(callback: Function) {\n        if (this.isWXPlatform() == false) {\n            return;\n        }\n        WXSdk.instance.onNetworkStatusChange(callback);\n    }\n\n    /** 获取最新的 wx凭据 */\n    updateReFreshAccessToken(_callback: Function = null) {\n        if (this.isWXPlatform() == false) {\n            if (_callback) {\n                // 测试代码\n                // Platform.PLogInfo.access_token = \"60_4RUiwRSohQKB-aTEFFc9ZpYcc7c9VH_vyricFYiTxhjdUo4lZ607tmu8XRaGHj0Turra98bp13kyImpxKzMbmEOmYh2xlDEP8-wpqYezdJF7HhgFoMVtrEhG60hrT1ZRS2UfpXd3BTkuKLwFSNRgAHAOJN\";\n                // Platform.PLogInfo.openId = \"owvGE5QcLfmK3jHkkwAMlsUyoJDc\";\n                // Platform.PLogInfo.userinfo = {\n                // \tavatarUrl: \"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLoaDUhelx5SYpgvbTmysgmQLRukxvWp6VVVZZkib78fZVugwrqsRdL7kDtZGrqu2YJKTxx0jT4ZHw/132\",\n                // \tcity: \"\",\n                // \tcountry: \"\",\n                // \tgender: 0,\n                // \tlanguage: \"zh_CN\",\n                // \tnickName: \"Ay.故\",\n                // \tprovince: \"\",\n                // }\n                // _callback(true);\n                _callback(null);\n            }\n            return;\n        }\n        //获取登录凭证 code（先检查是否失效）\n        let getLoginCode = function (callback: Function) {\n            if (Platform.WxLoginCode != null) {\n                WXSdk.instance.checkSession(\n                    () => {\n                        Logger.logPlatform(\"Success:登录凭证未失效 Code = \" + Platform.WxLoginCode);\n                    },\n                    () => {\n                        Logger.logPlatform(\"Fail:登录凭证已失效 \");\n                        Platform.WxLoginCode = null;\n                    },\n                    () => {\n                        Logger.logPlatform(\"getLoginCode:登录凭证是否失效：\" + Platform.WxLoginCode == null);\n                        if (Platform.WxLoginCode) {\n                            callback({ code: Platform.WxLoginCode })\n                        } else {\n                            getLoginCode(callback);\n                        }\n                    })\n                return;\n            } else {\n                WXSdk.instance.login(5000, (param) => {\n                    Logger.logPlatform(`成功获取登录凭证 code = ${param.code}`);\n                    Platform.WxLoginCode = param.code;\n                    callback({ code: Platform.WxLoginCode });\n                }, () => {\n                    Logger.logPlatform(`获取登录凭证失败`);\n                    callback(null);\n                })\n            }\n        }\n\n        //获取OpenID和AccessToken\n        let getOpenIDAndAccestToken = function (callback: Function) {\n            //注意:为了确保每次都是新的 必须重置；\n            Platform.WxLoginCode = null;\n            getLoginCode((loginRsp) => {\n                if (loginRsp && loginRsp.code) {\n                    Platform.WxLoginCode = loginRsp.code;\n                    let data = {\n                        action: \"core.getMiniConfig\",\n                        code: Platform.WxLoginCode,\n                        appid: ClientInfo.PlatFormAppID,\n                    }\n                    let http = new HttpRequest();\n                    http.post(GameConfig.instance.AppUrlConf.Web, JSON.stringify(data),\n                        (res) => {\n                            //wxLoginCode已用过了\n                            Platform.WxLoginCode = null;\n                            let openID = null;\n                            let access_token = null;\n                            if (res && res[\"code\"] == 200) {\n                                if (res[\"result\"]) {\n                                    if (res[\"result\"][\"session\"]) {//OpenID\n                                        openID = Utils.nullToDefault(res[\"result\"][\"session\"][\"openid\"], null);\n                                    }\n                                    if (res[\"result\"][\"token\"]) {//access_token\n                                        access_token = Utils.nullToDefault(res[\"result\"][\"token\"][\"access_token\"], null);\n                                    }\n                                }\n                            }\n                            if (openID && access_token) {\n                                let data = {\n                                    openid: openID,\n                                    access_token: access_token,\n                                }\n                                Logger.logPlatform(`Success:获取OpenID 和 AccessToken成功 openID=${data.openid} access_token=${data.access_token}`);\n                                callback(data);\n                            } else {\n                                Logger.logPlatform(`Fail:获取OpenID 和 AccessToken失败`);\n                                callback(null);\n                            }\n                        }, (res) => {\n                            Logger.logPlatform(`Fail:获取OpenID 和 AccessToken失败`, res);\n                            callback(null);\n                        }, 'json')\n                } else {\n                    callback(null);\n                }\n            })\n        }\n        getOpenIDAndAccestToken((param) => {\n            if (param) {\n                //保存用于登录的信息\n                Platform.PLogInfo = { access_token: param[\"access_token\"], openId: param[\"openid\"], userinfo: Platform.WxUserInfo }\n            }\n            if (_callback) {\n                _callback(param != null);\n            }\n            //通知：凭据信息有更新\n            EventManager.dispatch(AppEvent.LOGIN_WX_ACCESS_UPDATE, param != null, Platform.PLogInfo);\n        })\n\n    }\n    /** 获取平台朋友圈授权信息*/\n    reqPlatformFriendInteraction(callFunc = null) {\n        Logger.logPlatform(\"获取平台朋友圈授权信息:>>>\")\n\n        let endFunc = function (res) {\n            Logger.logPlatform(\"获取平台朋友圈授权信息:>>>授权结果:\" + String(res))\n            if (callFunc && typeof (callFunc) == \"function\") {\n                callFunc(res);\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                //显示授权弹窗\n                let startShowAuthorize = function (callback: Function) {\n                    WXSdk.instance.authorize(WXSdk_AuthSetting.WxFriendInteraction,\n                        () => {\n                            Logger.logPlatform(`授权成功`);\n                            Platform.WxAuthSettingFriends = 1;\n                            callback(true);\n                        },\n                        () => {\n                            Logger.logPlatform(`授权失败`);\n                            Platform.WxAuthSettingFriends = -1;\n                            callback(false);\n                        }\n                    )\n                }\n                //获取授权信息\n                let getSetting = function (callback: Function) {\n                    WXSdk.instance.getSetting(\n                        false,\n                        (param) => {\n                            if (param.authSetting[WXSdk_AuthSetting.WxFriendInteraction]) {\n                                Logger.logPlatform(`getSetting:已授权好友信息`)\n                                Logger.logPlatform(\"信息：\", param.authSetting[WXSdk_AuthSetting.WxFriendInteraction])\n                                Platform.WxAuthSettingFriends = 1;\n                                //进入下一步\n                                callback(true);\n                            } else {\n                                Logger.logPlatform(\"getSetting:没有获得授权 默认已经登录成功 弹出授权弹窗\")\n                                Platform.WxAuthSettingFriends = 0;\n                                //弹出授权弹窗\n                                startShowAuthorize(callback);\n                            }\n                        },\n                        () => {\n                            Logger.logPlatform(\"getSetting:获取授权信息失败\")\n                            callback(null)\n                        }\n                    )\n                }\n                return getSetting(endFunc);\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /** 设置平台云数据 */\n    setPlatformCloudStorage(keyValueList: Array<any>, callback = null) {\n        Logger.logPlatform(\"设置平台云数据:key>>>\", keyValueList)\n        if (Platform.WxAuthSettingFriends != 1) {\n            if (callback) {\n                callback(false);\n            }\n            return;\n        }\n        //所有键的集合\n        let keys = [];\n\n        let endFunc = function (res) {\n            Logger.logPlatform(\"设置平台云数据:>>>结果\", res)\n            if (callback && typeof (callback) == \"function\") {\n                //测试\n                Platform.getPlatformCloudStorage(keys);\n                callback(res);\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                let pData = [];\n\n                for (let i = 0; i < keyValueList.length; i++) {\n                    let data = { key: String(keyValueList[i][\"key\"]), value: String(keyValueList[i][\"value\"]) };\n                    pData.push(data);\n                    keys.push(data.key);\n                }\n                WXSdk.instance.setUserCloudStorage(pData,\n                    (param) => {\n                        Logger.logPlatform(\"setUserCloudStorage 设置平台云数据\", pData, param)\n                        endFunc(true);\n                    },\n                    () => {\n                        Logger.logPlatform(\"setUserCloudStorage 设置平台云数据 失败\", pData)\n                        endFunc(false)\n                    }\n                )\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /** 获取平台云数据 */\n    getPlatformCloudStorage(key: Array<string>, callback = null) {\n        Logger.logPlatform(\"获取平台云数据:key>>>\", key)\n        if (Platform.WxAuthSettingFriends != 1) {\n            if (callback) {\n                callback(null);\n            }\n            return;\n        }\n        let endFunc = function (res) {\n            Logger.logPlatform(\"获取平台云数据:>>>结果\", res)\n            if (callback && typeof (callback) == \"function\") {\n                callback(res);\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.getUserCloudStorage(key,\n                    (param) => {\n                        Logger.logPlatform(\"setUserCloudStorage 获取平台云数据\", param)\n                        endFunc(param);\n                    },\n                    () => {\n                        Logger.logPlatform(\"reqFriendKVList 获取平台云数据 失败\", key)\n                        endFunc(null)\n                    }\n                )\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    /** 向开放的数据域发送消息 */\n    postMessage(message: object) {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.postMessage(message);\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /** 获取消息订阅状态 */\n    getSettingSubscribeMessageStates(callback: Function = null) {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.getSetting(\n                    true,\n                    (param) => {\n                        Platform.WxAuthSettingSubscriptions = param?.subscriptionsSetting;\n                        if (callback) {\n                            callback(Platform.WxAuthSettingSubscriptions)\n                        }\n                    },\n                    () => {\n                        Logger.logPlatform(\"getSetting:获取消息订阅状态失败\")\n                        Platform.WxAuthSettingSubscriptions = null;\n                        if (callback) {\n                            callback(Platform.WxAuthSettingSubscriptions);\n                        }\n                    }\n                )\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /** 请求订阅消息 */\n    requestSubscribeMessage(tmplIds: Array<string>, callback = null) {\n        let callFunc = (param) => {\n            if (callback) {\n                callback(param);\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.requestSubscribeMessage(tmplIds,\n                    (param) => {\n                        Logger.logPlatform(\"请求订阅消息成功：\", tmplIds, param);\n                        callFunc(param);\n                    },\n                    (param) => {\n                        Logger.logPlatform(\"请求订阅消息失败：\", tmplIds, param);\n                        callFunc(param);\n                    },\n                );\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * 震动\n     * @param isLong 是否是长时间震动 默认false短时间\n     * @param type 短时间震动的强度 长时间则不传\n     * @param callback 成功或失败的回调\n     */\n    vibrate(isLong: boolean = false, type = null, callback = null) {\n        let callFunc = (param) => {\n            if (callback) {\n                callback(param);\n            }\n        }\n        let shorkOpen = LocalStorage.get(StoreKey.SYS_Shock, true);\n        if (!shorkOpen) {\n            return;\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                if (isLong == true) {\n                    WXSdk.instance.vibrateLong(\n                        (param) => {\n                            Logger.logPlatform(\"请求长时间震动成功：\", param);\n                            callFunc(param);\n                        },\n                        (param) => {\n                            Logger.logPlatform(\"请求长时间震动失败：\", param);\n                            callFunc(param);\n                        },\n                    );\n                } else {\n                    type = type || WXSdk_VibrateShortType.heavy;\n                    WXSdk.instance.vibrateShort(type,\n                        (param) => {\n                            Logger.logPlatform(\"请求短时间震动成功：\", type, param);\n                            callFunc(param);\n                        },\n                        (param) => {\n                            Logger.logPlatform(\"请求短时间震动失败：\", type, param);\n                            callFunc(param);\n                        },\n                    );\n                }\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /** 初始化广告组件 */\n    initAdVideo(adUnitId: string) {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.createRewardedVideoAd(adUnitId);\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * 播放广告\n     * @param callback 回调函数\n     * @param callData 附加回调数据\n     */\n    playerAdVideo(callback: Function = null, callData = null) {\n        let startCallFunc = function () {\n            EventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n        }\n        let failCallFunc = function () {\n            EventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n        }\n        let onClickCloseCallFunc = function (res: boolean) {\n            EventManager.dispatch(AppEvent.SYS_CLOSE_NETLOADING);\n            if (callback) {\n                callback(res == true, callData);\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                EventManager.dispatch(AppEvent.SYS_SHOW_NETLOADING, 15);\n                WXSdk.instance.playRewardedVideoShow(startCallFunc, failCallFunc, onClickCloseCallFunc);\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                if (callback) {\n                    callback(true, callData);\n                }\n                break;\n            default:\n                if (callback) {\n                    callback(false, callData);\n                }\n                break;\n        }\n    }\n    /** 文件下载 */\n    downloadFile(url: string, callback: Function = null) {\n        Logger.logPlatform(\"文件下载\")\n\n        let isReturn = false;\n        let callFunc = function (res) {\n            if (callback && isReturn == false) {\n                isReturn = true;\n                let param = {\n                    url: url,\n                    code: res ? res.statusCode : -1,\n                    filePath: res ? res.tempFilePath : null\n                }\n                console.log(`文件下载 是否成功${param.code === 200} 所有参数:`, res)\n                callback(param);\n            }\n        }\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                WXSdk.instance.downloadFile(url, null, null, callFunc, callFunc, null)\n                break;\n            case sys.Platform.DESKTOP_BROWSER:\n                break;\n            default:\n                break;\n        }\n    }\n    /** 获取小游戏冷启动时的参数 */\n    getLaunchOptionsSync() {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                let res = WXSdk.instance.getLaunchOptionsSync();\n                this.AppLaunchOptions = Utils.table_verify(res);\n                break;\n            default:\n                this.AppLaunchOptions = {};\n                break;\n        }\n        console.log(\"获取小游戏冷启动时的参数==>\", this.AppLaunchOptions);\n        return this.AppLaunchOptions;\n    }\n    /** 获取小游戏启动/显示时的参数 */\n    getEnterOptionsSync() {\n        switch (this._currowPlatForm) {\n            case sys.Platform.WECHAT_GAME:\n                let res = WXSdk.instance.getEnterOptionsSync();\n                this.AppEnterOptions = Utils.table_verify(res);\n                break;\n            default:\n                this.AppEnterOptions = {};\n                break;\n        }\n        console.log(\"获取小游戏启动/显示时的参数==>\", this.AppEnterOptions);\n        return this.AppEnterOptions;\n    }\n}\n\nexport const Platform = _Platform.instance\n\n"]}