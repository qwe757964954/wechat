{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/log/Logger.ts"],"names":["Logger","error","log","sys","warn","WXSdk","LogType","LogColor","names","LogColorConf","Normal","White","Platform","Gray","Net","Orange","Model","OrangeRed","Cache","Blue","View","Maroon","Pay","Crimson","open","init","tags","console","setTags","tag","start","describe","time","end","timeEnd","table","args","isOpen","realTable","apply","arguments","stackIndex","color","regix","length","Array","prototype","shift","call","startIndex","currData","getDateString","stackStr","stack","unshift","reportLog","slice","realLog","Warn","realWarn","realError","logNet","print","logModel","logView","logCache","logPlatform","logPay","logType","stackNum","isNaN","Number","index","e","Error","lines","split","result","forEach","line","substring","lineBreak","push","list","splitList","value","a","concat","lastIndexOf","r","d","Date","str","getHours","toString","timeStr","getMinutes","getSeconds","getMilliseconds","getTime","agrgs","ReportConf","isCanReport","filterObject","join","String","replace","ReportLogList","LastTime","TimeSpance","MaxSize","max","splice","BaseInfo","isWxPlatForm","realtimeLogManager","instance","getRealtimeLogManager","info","key","Object","JSON","stringify","platform","WECHAT_GAME","ReportWarnList","ReportErrorList"],"mappings":"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","sourcesContent":["import { error, log, sys, warn } from \"cc\";\nimport { WXSdk } from \"../../platform/weixin/WXSdk\";\n\n/** 日志类型 */\nexport enum LogType {\n    /** 网络层日志 */\n    Net = 1,\n    /** Crotroll/Server层日志 */\n    Model = 2,\n    /** 数据缓存层日志 */\n    Cache = 4,\n    /** 视图层日志 */\n    View = 8,\n    /** 平台日志 */\n    Platform = 16,\n    /** 标准日志 */\n    Normal = 32,\n    /** 警告 */\n    Warn = 64,\n    /** 支付 */\n    Pay = 128,\n}\n\n/** 日志文本颜色 */\nexport enum LogColor {\n    /** 蓝色 */\n    Blue = \"color:#0000FF;\",\n    /** 栗色 */\n    Maroon = \"color:#800000;\",\n    /** 橙色 */\n    Orange = \"color:#FF4700;\",\n    /** 橙红色 */\n    OrangeRed = \"color:#FF4500;\",\n    /** 白色 */\n    White = \"color:#000000;\",\n    /** 灰色 */\n    Gray = \"color:gray;\",\n    /** 猩红 */\n    Crimson = \"color:#DC143C;\",\n}\n\nlet names = {\n    \"1\": \"【Net】\",\n    \"2\": \"【Model】\",\n    \"4\": \"【Cache】\",\n    \"8\": \"【View】\",\n    \"16\": \"【Platform】\",\n    \"32\": \"【标准】\",\n    \"64\": \"【Warn】\",\n    \"128\": \"【Pay】\"\n}\n/** 日志颜色配置 */\nlet LogColorConf = {\n    [LogType.Normal]: LogColor.White,\n    [LogType.Platform]: LogColor.Gray,\n    [LogType.Net]: LogColor.Orange,\n    [LogType.Model]: LogColor.OrangeRed,\n    [LogType.Cache]: LogColor.Blue,\n    [LogType.View]: LogColor.Maroon,\n    [LogType.Pay]: LogColor.Crimson,\n}\n\n\n/**\n * Name = Logger 日志管理\n * URL = db://assets/framework/log/Logger.ts\n * Time = Thu Apr 07 2022 15:30:42 GMT+0800 (中国标准时间)\n * \n * Logger.log(\"默认标准日志\");\n * Logger.logPlatform(\"灰色配置日志\");\n * Logger.logNet(\"橙色网络日志\");\n * Logger.logModel(\"橙红色数据日志\");\n * Logger.logCache(\"蓝色业务日志\");\n * Logger.logView(\"栗色视图日志\");\n */\n\n\nexport class Logger {\n    static realLog = console.log || log;\n    static realWarn = console.warn || warn;\n    static realTable = console.table || Logger.realLog;\n    static realError = console.error || error;\n\n    static tags: number = 0;\n\n    /** 是否微信平台 */\n    static isWxPlatForm: boolean = (sys.platform == sys.Platform.WECHAT_GAME);\n    /** 上报的日志信息队列 */\n    static ReportLogList: Array<any> = [];\n    /** 上报的警告信息队列 */\n    static ReportWarnList: Array<any> = [];\n    /** 上报的错误信息队列 */\n    static ReportErrorList: Array<any> = [];\n    /** 上报配置 */\n    static ReportConf = {\n        /** 上报的基础信息 */\n        BaseInfo: \"\",\n        /** 上报的时间间隔 毫秒*/\n        TimeSpance: 30000,\n        /** 上次上报的时间 */\n        LastTime: 0,\n        /** 每次上报最大条数 */\n        MaxSize: 1,\n        /** 是否可以上报 */\n        isCanReport: true,\n    }\n\n    /** 日志开启开关 */\n    static open() {\n        // @ts-ignore\n        Logger.init();\n    }\n    /** 初始化 */\n    static init(): void {\n\n        /** 按需注释 */\n        Logger.tags =\n            // LogType.Net |\n            LogType.Model |\n            LogType.Cache |\n            LogType.View |\n            LogType.Platform |\n            LogType.Normal |\n            LogType.Pay;\n\n        //重载console.log\n        console.log = Logger.log;\n        //重载console.warn\n        console.warn = Logger.warn;\n        //重载console.error\n        console.error = Logger.error;\n    }\n\n\n\n    /** \n     * 设置显示的日志类型，默认值为不显示任何类型日志\n     * @example\n     *Logger.setTags(LogType.View|LogType.Cache)\n     */\n    static setTags(tag: LogType = null!) {\n        if (tag) {\n            Logger.tags = tag;\n        }\n    }\n    /**\n     * 记录开始计时\n     * @param describe  标题描述\n     * @example\n        Logger.start();\n        ...\n        省略N行代码\n        ...\n        Logger.end();\n     */\n    static start(describe: string = \"Time\"): void {\n        console.time(describe);\n    }\n\n    /**\n     * 打印范围内时间消耗\n     * @param describe  标题描述\n     * @example\n        Logger.start();\n        ...\n        省略N行代码\n        ...\n        Logger.end();\n     */\n    static end(describe: string = \"Time\"): void {\n        console.timeEnd(describe);\n    }\n\n    /**\n     * 打印表格\n     * @param msg       日志消息\n     * @param describe  标题描述\n     * @example\n        let object:any = {uid:1000, name:\"oops\"};\n        Logger.table(object);\n     */\n    static table(...args: any[]) {\n        if (!Logger.isOpen(LogType.Normal)) {\n            return;\n        }\n        Logger.realTable.apply(Logger.realTable, arguments);\n    }\n\n    /**\n     * 打印标准日志(console.log的覆盖)\n     * @param msg       日志消息\n     */\n    static log(...args: any[]) {\n        // 标记没有打开，不打印该日志\n        if (!Logger.isOpen(LogType.Normal)) {\n            return;\n        }\n        let stackIndex = 3;\n        let tag = null;\n        let color = null;\n        let regix = \"%c%s%s:\";\n        if (arguments.length > 0) {\n            tag = Array.prototype.shift.call(arguments);\n            color = LogColorConf[tag];\n            if (arguments.length == 0) {\n                regix = \"%c%s%s:\";\n            } else if (arguments.length == 1) {\n\n            } else if (arguments.length >= 2) {\n                regix = \"%c%s%s:\";\n            };\n        }\n        let startIndex = 2;\n        let currData = Logger.getDateString();\n        let stackStr = Logger.stack(stackIndex);\n        if (color != null) {\n            Array.prototype.unshift.call(arguments, regix, color, currData[0], stackStr);\n            startIndex = 4;\n        } else {\n            Array.prototype.unshift.call(arguments, currData[0], stackStr, tag);\n        }\n        Logger.reportLog(LogType.Normal, stackStr, currData, Array.prototype.slice.call(arguments, startIndex, arguments.length));\n        Logger.realLog.apply(Logger.realLog, arguments);\n    }\n    /**\n     * 警告(console.warn的覆盖)\n     * @param args \n     * @returns \n     */\n    static warn(...args: any[]) {\n        let stackIndex = 3;\n        let tag = null;\n        let color = null;\n        let regix = \"%c%s%s:\";\n        if (arguments.length > 0) {\n            tag = Array.prototype.shift.call(arguments);\n            color = LogColorConf[tag];\n            if (arguments.length == 0) {\n                regix = \"%c%s%s:\";\n            } else if (arguments.length == 1) {\n\n            } else if (arguments.length >= 2) {\n                regix = \"%c%s%s:\";\n            };\n        }\n        let startIndex = 2;\n        let currData = Logger.getDateString();\n        let stackStr = Logger.stack(stackIndex);\n        if (color != null) {\n            Array.prototype.unshift.call(arguments, regix, color, currData[0], stackStr);\n            startIndex = 4;\n        } else {\n            Array.prototype.unshift.call(arguments, currData[0], stackStr, tag);\n        }\n        Logger.reportLog(LogType.Warn, stackStr, currData, Array.prototype.slice.call(arguments, startIndex, arguments.length));\n\n        Logger.realWarn.apply(Logger.realWarn, arguments);\n    }\n\n    /**\n     * 错误(console.error的覆盖)\n     * @param args \n     * @returns \n     */\n    static error(...args: any[]) {\n        let stackIndex = 3;\n        let tag = null;\n        let color = null;\n        let regix = \"%c%s%s:\";\n        if (arguments.length > 0) {\n            tag = Array.prototype.shift.call(arguments);\n            color = LogColorConf[tag];\n            if (arguments.length == 0) {\n                regix = \"%c%s%s:\";\n            } else if (arguments.length == 1) {\n\n            } else if (arguments.length >= 2) {\n                regix = \"%c%s%s:\";\n            };\n        }\n        let currData = Logger.getDateString();\n        let stackStr = Logger.stack(stackIndex);\n        let startIndex = 2;\n        if (color != null) {\n            Array.prototype.unshift.call(arguments, regix, color, currData[0], stackStr);\n            startIndex = 4;\n        } else {\n            Array.prototype.unshift.call(arguments, currData[0], stackStr, tag);\n        }\n        Logger.reportLog(\"[Error]\", stackStr, currData, Array.prototype.slice.call(arguments, startIndex, arguments.length));\n        Logger.realError.apply(Logger.realError, arguments);\n    }\n\n\n\n    /**\n     * 打印网络层日志\n     */\n    static logNet(...args: any[]) {\n        let stackIndex = Array.prototype.shift.call(arguments);\n        if (typeof (stackIndex) != \"number\") {\n            Array.prototype.unshift.call(arguments, stackIndex);\n            stackIndex = 4;\n        }\n        Array.prototype.unshift.call(arguments, LogType.Net, LogColorConf[LogType.Net], stackIndex);\n        Logger.print.apply(Logger.logNet, arguments);\n    }\n\n    /**\n     * 打印数据层日志\n     */\n    static logModel(...args: any[]) {\n        let stackIndex = Array.prototype.shift.call(arguments);\n        if (typeof (stackIndex) != \"number\") {\n            Array.prototype.unshift.call(arguments, stackIndex);\n            stackIndex = 4;\n        }\n        Array.prototype.unshift.call(arguments, LogType.Model, LogColorConf[LogType.Model], stackIndex);\n        Logger.print.apply(Logger.logModel, arguments);\n    }\n\n    /**\n     * 打印View日志\n     */\n    static logView(...args: any[]) {\n        let stackIndex = Array.prototype.shift.call(arguments);\n        if (typeof (stackIndex) != \"number\") {\n            Array.prototype.unshift.call(arguments, stackIndex);\n            stackIndex = 4;\n        }\n        Array.prototype.unshift.call(arguments, LogType.View, LogColorConf[LogType.View], stackIndex);\n        Logger.print.apply(Logger.logView, arguments);\n    }\n\n    /**\n     * 打印Cache层日志\n     */\n    static logCache(...args: any[]) {\n        let stackIndex = Array.prototype.shift.call(arguments);\n        if (typeof (stackIndex) != \"number\") {\n            Array.prototype.unshift.call(arguments, stackIndex);\n            stackIndex = 4;\n        }\n        Array.prototype.unshift.call(arguments, LogType.Cache, LogColorConf[LogType.Cache], stackIndex);\n        Logger.print.apply(Logger.logCache, arguments);\n    }\n\n\n    /** 打印平台日志 */\n    static logPlatform(...args: any[]) {\n        let stackIndex = Array.prototype.shift.call(arguments);\n        if (typeof (stackIndex) != \"number\") {\n            Array.prototype.unshift.call(arguments, stackIndex);\n            stackIndex = 4;\n        }\n        Array.prototype.unshift.call(arguments, LogType.Platform, LogColorConf[LogType.Platform], stackIndex);\n        Logger.print.apply(Logger.logPlatform, arguments);\n    }\n\n    /** 打印支付日志 */\n    static logPay(...args: any[]) {\n        let stackIndex = Array.prototype.shift.call(arguments);\n        if (typeof (stackIndex) != \"number\") {\n            Array.prototype.unshift.call(arguments, stackIndex);\n            stackIndex = 4;\n        }\n        Array.prototype.unshift.call(arguments, LogType.Pay, LogColorConf[LogType.Pay], stackIndex);\n        Logger.print.apply(Logger.logPay, arguments);\n    }\n\n    static isOpen(tag: LogType): boolean {\n        return (Logger.tags & tag) != 0;\n    }\n    /**\n     * 输出日志,直接调用LogNet调用的\n     * @param tag       日志类型\n     * @param color     日志文本颜色\n     * @param stackNum  日志深度\n     * @param msg       日志内容\n     */\n    static print() {\n        if (arguments.length < 3) {\n            return;\n        }\n        let logType = Array.prototype.shift.call(arguments);\n        let color = Array.prototype.shift.call(arguments);\n        let stackNum = Array.prototype.shift.call(arguments);\n        // 标记没有打开，不打印该日志\n        if (!Logger.isOpen(logType)) {\n            return;\n        }\n        let tag = names[logType];\n        let stackIndex = (isNaN(Number(stackNum)) == false ? Number(stackNum) : 4);\n\n        let regix = \"%c%s%s:\";\n\n        if (arguments.length == 0) {\n            regix = \"%c%s%s:\";\n        } else if (arguments.length == 1) {\n\n        } else if (arguments.length >= 2) {\n            regix = \"%c%s%s:\";\n        };\n        let startIndex = 2;\n        let currData = Logger.getDateString();\n        let stackStr = Logger.stack(stackIndex);\n\n        if (color != null) {\n            Array.prototype.unshift.call(arguments, regix, color, currData[0], stackStr);\n            startIndex = 4;\n        } else {\n            Array.prototype.unshift.call(arguments, currData[0], stackStr);\n        }\n        Logger.reportLog(logType, stackStr, currData, Array.prototype.slice.call(arguments, startIndex, arguments.length));\n\n        Logger.realLog.apply(this, arguments);\n    }\n    /** 打印深度 */\n    static stack(index: number): string {\n        let e = new Error();\n        let lines = e.stack!.split(\"\\n\");\n        let result: Array<any> = [];\n        lines.forEach((line) => {\n            line = line.substring(7);\n            let lineBreak = line.split(\" \");\n            if (lineBreak.length < 2) {\n                result.push(lineBreak[0]);\n            }\n            else {\n                result.push({ [lineBreak[0]]: lineBreak[1] });\n            }\n        });\n\n        let list: string[] = [];\n        let splitList: Array<string> = [];\n\n        if (index < result.length - 1) {\n            let value: string;\n            for (let a in result[index]) {\n                let splitList = a.split(\".\");\n\n                if (splitList.length == 2) {\n                    list = splitList.concat();\n                }\n                else {\n                    value = result[index][a];\n                    let start = value!.lastIndexOf(\"/\");\n                    let end = value!.lastIndexOf(\".\");\n                    if (start > -1 && end > -1) {\n                        let r = value!.substring(start + 1, end);\n                        list.push(r);\n                    }\n                    else {\n                        list.push(value);\n                    }\n                }\n            }\n        }\n\n        if (list.length == 1) {\n            return \"[\" + list[0] + \".ts]\";\n        }\n        else if (list.length == 2) {\n            return \"[\" + list[0] + \".ts->\" + list[1] + \"]\";\n        }\n        return \"\";\n    }\n    /** 获取日期时间 */\n    static getDateString(): Array<any> {\n        let d = new Date();\n        let str = d.getHours().toString();\n        let timeStr = \"\";\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getMinutes().toString();\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getSeconds().toString();\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\n        str = d.getMilliseconds().toString();\n        if (str.length == 1) str = \"00\" + str;\n        if (str.length == 2) str = \"0\" + str;\n        timeStr += str;\n\n        timeStr = \"[\" + timeStr + \"]\";\n        return [timeStr, d.getTime()];\n    }\n    /** 上报日志信息 */\n    static reportLog(logType, stackStr, currData, ...agrgs: any[]) {\n        //只上报支付相关\n        if (Logger.ReportConf.isCanReport == false || logType != LogType.Pay) {\n            return;\n        }\n\n        let tag = names[logType];\n        let time = currData[1];\n        let timeStr = currData[0];\n        arguments[0] = tag;\n        arguments[2] = timeStr;\n\n        arguments[3] = Logger.filterObject(arguments[3]);\n        let str = Array.prototype.join.call(arguments);\n        str = String.prototype.replace.call(str, /\\,/g, \"\");\n\n        Logger.ReportLogList.push(str);\n\n        if (Logger.ReportConf.LastTime == 0) {\n            Logger.ReportConf.LastTime = time;\n            return;\n        }\n        if (arguments.length <= 3) {\n            return;\n        }\n\n        if ((time - Logger.ReportConf.LastTime) >= (Logger.ReportConf.TimeSpance) || Logger.ReportLogList.length >= Logger.ReportConf.MaxSize) {\n            while (Logger.ReportLogList.length > 0) {\n                let max = (Logger.ReportLogList.length >= Logger.ReportConf.MaxSize ? Logger.ReportConf.MaxSize : Logger.ReportLogList.length);\n                let list = Logger.ReportLogList.splice(0, max);\n                // Logger.realLog(\"要开始上报了:\", list);\n                list.unshift(Logger.ReportConf.BaseInfo);\n\n                if (Logger.isWxPlatForm) {\n                    let realtimeLogManager = WXSdk.instance.getRealtimeLogManager();\n                    if (realtimeLogManager) {\n                        // Logger.realLog(\"日志上报:\", list)\n                        realtimeLogManager.info(list)\n                    }\n                }\n\n            }\n            Logger.ReportConf.LastTime = time;\n        }\n    }\n    /**\n     * 过滤对象\n     * @param agrgs \n     */\n    static filterObject(...args: any[]) {\n        if (typeof (args) != \"object\") {\n            return args;\n        }\n        for (let key in args) {\n            if (typeof (args[key]) == \"object\") {\n                if (args[key] instanceof Object) {\n                    try {\n                        args[key] = JSON.stringify(args[key]);\n                    } catch (error) {\n\n                    }\n                }\n\n            }\n        }\n        return args;\n    }\n}\n\n\n"]}