{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/crypto/Bit.ts"],"names":["MathEx","bnot","bit_not","band","bit_and","bor","bit_or","bxor","bit_xor","brshift","bit_rshift","blshift","bit_lshift","bxor2","bit_xor2","rshift","_rshift","d2b","_d2b","tobits","to_bits","tonumb","tbl_to_number","data32","index","check_int","n","Math","floor","console","log","undefined","abs","tbl","cnt","last","mod","length","rslt","power","expand","tbl_m","tbl_n","big","small","m","max","i","size","bits","high_bit","rhs","lhs","_b2d","arg","nr","tr","_and","a","b","op1","op2","r","count","_not","_or","Bit"],"mappings":"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","sourcesContent":["/**\n * Name = Bit\n * URL = db://assets/framework/crypto/Bit.ts\n * Time = Thu May 12 2022 10:19:57 GMT+0800 (中国标准时间)\n * Author = xueya\n * 位运算\n */\n\nimport { MathEx } from \"../extend/MathEx\"\n\nexport namespace Bit {\n\n\texport const bnot = bit_not;\n\texport const band = bit_and;\n\texport const bor = bit_or;\n\texport const bxor = bit_xor;\n\texport const brshift = bit_rshift;\n\texport const blshift = bit_lshift;\n\texport const bxor2 = bit_xor2;\n\n\texport const rshift = _rshift;\n\texport const d2b = _d2b;\n\n\n\t// utility func\n\texport const tobits = to_bits;\n\texport const tonumb = tbl_to_number;\n\n\tconst data32 = []\n\tfor (let index = 0; index < 32; index++) {\n\t\tdata32[index] = 2 ** (32 - index - 1)\n\t}\n\texport function check_int(n) {\n\t\t// checking not float\n\t\tif (n - Math.floor(n) > 0) {\n\t\t\tconsole.log(\"Error:trying to use bitwise operation on non-integer!\")\n\t\t}\n\n\t}\n\texport function to_bits(n: number = null): number[] {\n\t\tif (n == null || n == undefined) {\n\t\t\treturn null\n\t\t}\n\t\tif (n < 0) {\n\t\t\t// negative\n\t\t\treturn to_bits(bit_not(Math.abs(n)) + 1)\n\t\t}\n\t\t// to bits table\n\t\tlet tbl = []\n\n\t\tlet cnt = 0\n\t\twhile (n > 0) {\n\t\t\tlet last = MathEx.mod(n, 2)\n\t\t\tif (last == 1) {\n\t\t\t\ttbl[cnt] = 1\n\t\t\t} else {\n\t\t\t\ttbl[cnt] = 0\n\t\t\t}\n\t\t\tn = (n - last) / 2\n\t\t\tcnt = cnt + 1\n\t\t}\n\t\treturn tbl\n\t}\n\texport function tbl_to_number(tbl: number[]) {\n\t\tif (!tbl) {\n\t\t\treturn 0\n\t\t}\n\t\tlet n = tbl.length\n\n\t\tlet rslt = 0\n\t\tlet power = 1\n\t\tfor (let index = 0; index < n; index++) {\n\t\t\trslt = rslt + tbl[index] * power\n\t\t\tpower = power * 2\n\n\t\t}\n\t\treturn rslt\n\t}\n\texport function expand(tbl_m, tbl_n) {\n\t\tlet big = []\n\t\tlet small = []\n\t\tif (tbl_m.length > tbl_n.length) {\n\t\t\tbig = tbl_m\n\t\t\tsmall = tbl_n\n\t\t} else {\n\t\t\tbig = tbl_n\n\t\t\tsmall = tbl_m\n\t\t}\n\t\t// expand small\n\t\tif (small && big) {\n\t\t\tfor (let index = small.length; index < big.length; index++) {\n\t\t\t\tsmall[index] = 0\n\t\t\t}\n\t\t}\n\t}\n\n\texport function bit_or(m: number, n: number) {\n\n\t\tlet tbl_m = to_bits(m)\n\t\tlet tbl_n = to_bits(n)\n\t\texpand(tbl_m, tbl_n)\n\n\t\tlet tbl = []\n\t\tlet rslt = Math.max(tbl_m.length, tbl_n.length)\n\t\tfor (let i = 0; i < rslt; i++) {\n\t\t\tif (tbl_m[i] == 0 && tbl_n[i] == 0) {\n\t\t\t\ttbl[i] = 0\n\t\t\t} else {\n\t\t\t\ttbl[i] = 1\n\t\t\t}\n\n\t\t}\n\t\treturn tbl_to_number(tbl)\n\t}\n\n\texport function bit_and(m, n) {\n\t\tlet tbl_m = to_bits(m)\n\t\tlet tbl_n = to_bits(n)\n\t\texpand(tbl_m, tbl_n)\n\n\t\tlet tbl = []\n\n\t\tlet rslt = Math.max(tbl_m.length, tbl_n.length)\n\t\tfor (let i = 0; i < rslt; i++) {\n\t\t\tif (tbl_m[i] == 0 || tbl_n[i] == 0) {\n\t\t\t\ttbl[i] = 0\n\t\t\t} else {\n\t\t\t\ttbl[i] = 1\n\t\t\t}\n\n\t\t}\n\t\treturn tbl_to_number(tbl)\n\t}\n\n\texport function bit_not(n) {\n\t\tlet tbl = to_bits(n)\n\t\tlet size = Math.max(tbl.length, 32)\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tif (tbl[i] == 1) {\n\t\t\t\ttbl[i] = 0\n\t\t\t} else {\n\t\t\t\ttbl[i] = 1\n\t\t\t}\n\t\t}\n\t\treturn tbl_to_number(tbl)\n\t}\n\texport function bit_xor(m, n) {\n\t\tlet tbl_m = to_bits(m)\n\t\tlet tbl_n = to_bits(n)\n\t\texpand(tbl_m, tbl_n)\n\n\t\tlet tbl = []\n\t\tlet rslt = Math.max(tbl_m.length, tbl_n.length)\n\t\tfor (let i = 0; i < rslt; i++) {\n\t\t\tif (tbl_m[i] != tbl_n[i]) {\n\t\t\t\ttbl[i] = 1\n\t\t\t} else {\n\t\t\t\ttbl[i] = 0\n\t\t\t}\n\t\t}\n\t\treturn tbl_to_number(tbl)\n\t}\n\n\texport function bit_rshift(n, bits) {\n\t\tcheck_int(n)\n\t\tlet high_bit = 0\n\t\tif (n < 0) {\n\t\t\t// negative\n\t\t\tn = bit_not(Math.abs(n)) + 1\n\t\t\thigh_bit = 2147483648 // 0x80000000\n\t\t}\n\t\tfor (let index = 0; index < bits; index++) {\n\t\t\tn = n / 2\n\t\t\tn = bit_or(Math.floor(n), high_bit)\n\t\t}\n\t\treturn Math.floor(n)\n\t}\n\texport function bit_lshift(n, bits) {\n\t\tcheck_int(n)\n\t\tif (n < 0) {\n\t\t\t// negative\n\t\t\tn = bit_not(Math.abs(n)) + 1\n\t\t}\n\t\tfor (let index = 0; index < bits; index++) {\n\t\t\tn = n * 2\n\t\t}\n\t\treturn bit_and(n, 9223372036854775807) // sint64\n\t\t// return bit_and(n, 4294967295) -- 0xFFFFFFFF\n\t}\n\n\texport function bit_xor2(m, n) {\n\t\tlet rhs = bit_or(bit_not(m), bit_not(n))\n\t\tlet lhs = bit_or(m, n)\n\t\tlet rslt = bit_and(lhs, rhs)\n\t\treturn rslt\n\t}\n\n\texport function _b2d(arg) {\n\t\tlet nr = 0\n\t\tfor (let i = 0; i < 32; i++) {\n\t\t\tif (arg[i] == 1) {\n\t\t\t\tnr = nr + data32[i]\n\t\t\t}\n\t\t}\n\t\treturn nr\n\t}\n\n\texport function _d2b(arg) {\n\t\targ = arg >= 0 ? arg : (0xFFFFFFFF + arg + 1)\n\t\tlet tr = []\n\t\tfor (let i = 0; i < 32; i++) {\n\t\t\tif (arg >= data32[i]) {\n\t\t\t\ttr[i] = 1\n\t\t\t\targ = arg - data32[i]\n\t\t\t} else {\n\t\t\t\ttr[i] = 0\n\t\t\t}\n\t\t}\n\t\treturn tr\n\t}\n\n\texport function _and(a, b) {\n\t\tlet op1 = _d2b(a)\n\t\tlet op2 = _d2b(b)\n\t\tlet r = []\n\t\tfor (let i = 0; i < 32; i++) {\n\t\t\tif (op1[i] == 1 && op2[i] == 1) {\n\t\t\t\tr[i] = 1\n\t\t\t} else {\n\t\t\t\tr[i] = 0\n\t\t\t}\n\t\t}\n\t\treturn _b2d(r)\n\t}\n\t//返回a逻辑右偏移到n位 \n\texport function _rshift(a, n) {\n\t\tlet op1 = _d2b(a)\n\t\tn = n <= 32 ? n : 32\n\t\tn = n >= 0 ? n : 0\n\n\t\tlet count = 0\n\t\tfor (let i = 32; i > n; i--) {\n\t\t\tcount = count + 1\n\t\t\top1[i - 1] = op1[i - 1 - n]\n\t\t}\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\top1[i] = 0\n\n\t\t}\n\t\treturn _b2d(op1)\n\t}\n\n\texport function _not(a) {\n\t\tlet op1 = _d2b(a)\n\t\tlet r = []\n\t\tfor (let i = 0; i < 32; i++) {\n\t\t\tif (op1[i] == 1) {\n\t\t\t\tr[i] = 0\n\t\t\t} else {\n\t\t\t\tr[i] = 1\n\t\t\t}\n\t\t}\n\t\treturn _b2d(r)\n\n\t}\n\n\texport function _or(a, b) {\n\t\tlet op1 = _d2b(a)\n\t\tlet op2 = _d2b(b)\n\t\tlet r = []\n\t\tfor (let i = 0; i < 32; i++) {\n\t\t\tif (op1[i] == 1 || op2[i] == 1) {\n\t\t\t\tr[i] = 1\n\t\t\t} else {\n\t\t\t\tr[i] = 0\n\t\t\t}\n\t\t}\n\t\treturn _b2d(r)\n\t}\n\n\n}\n"]}