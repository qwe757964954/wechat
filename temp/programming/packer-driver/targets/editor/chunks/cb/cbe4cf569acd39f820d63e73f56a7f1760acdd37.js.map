{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/gui/gif/GifRenderLoad.ts"],"names":["Component","Enum","ImageAsset","Sprite","SpriteFrame","UITransform","_decorator","Utils","resLoader","decompressFrames","parseGIF","ccclass","property","menu","GifRenderLoadModel","GifArrayBufferList","GifRenderLoad","tooltip","type","visible","modelType","REMOTE","LOCAL","constructor","name","_className","_showSprite","_realLoadSprite","_isLoad","_uiHaveSprite","_isCanOnloadRevire","_mainCavas","_tmpCavas","_mainCtx","_tmpCtx","checkPreLoad","string_isEmpty","bundleName","resPath","setLocalLoad","remoteUrl","preLoadUrl","setRemoteUrl","checkSpriteComp","uiTransform","node","getComponent","addComponent","width","height","sprite","spriteFrame","sizeMode","onLoad","__createCanvas","console","error","getContext","updateView","start","bundle","path","self","realPath","replace","loadBundle","err","log","load","err2","data","_getArrayBufferFromUrl","nativeUrl","url","String","includes","loadRemote","imageAsset","clear","_startDraw","globalThis","tt","createCanvas","wx","document","createElement","key","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","response","warn","frames","length","refs","abort","onerror","send","timeout","ontimeout","a","oneCache","_needsDisposal","_frameIndex","_frameWidth","_frameHeight","_frameData","dims","indexOf","uuid","push","drawFunc","isValid","cache","frame","Date","now","clearRect","createImageData","set","patch","putImageData","drawImage","left","top","disposalType","createWithImage","diff","scheduleOnce","Math","max","floor","delay","unscheduleAllCallbacks"],"mappings":"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","sourcesContent":["import { AssetManager, Component, Enum, ImageAsset, Sprite, SpriteFrame, UITransform, _decorator } from 'cc';\nimport { Utils } from '../../Utils';\nimport { resLoader } from '../../loader/ResLoader';\nimport { decompressFrames, parseGIF } from './gif';\nconst { ccclass, property, menu } = _decorator;\n\n/**\n * Name = GifRenderLoad\n * URL = db://assets/framework/gui/gif/GifRenderLoad.ts\n * Time = Thu Apr 07 2022 13:02:05 GMT+0800 (中国标准时间)\n * Author = xueya\n * Gif动图加载{支持本地和远端}\n */\n\n/** gif支持加载的类型 */\nenum GifRenderLoadModel {\n    /** 本地路径 */\n    LOCAL,\n    /** 远端路径Url */\n    REMOTE,\n}\n\nconst GifArrayBufferList = {};\n\n@ccclass('GifRenderLoad')\n//方便编辑器识别的菜单项目\n@menu('gui/sprite/GifRenderLoad')\nexport class GifRenderLoad extends Component {\n    /** 加载模式 */\n    @property({\n        tooltip: \"设置要加载的模式 LOCAL:本地 REMOTE:远端\",\n        type: Enum(GifRenderLoadModel),\n        visible() {\n            return true;\n        }\n    })\n    modelType = GifRenderLoadModel.LOCAL;\n\n    /*******************远端加载**************************/\n    @property({\n        tooltip: \"远端图片地址Url\",\n        visible() {\n            if (this.modelType != GifRenderLoadModel.REMOTE) {\n                return false;\n            }\n            return true;\n        }\n    })\n    remoteUrl: string = \"\"!;\n\n    @property({\n        tooltip: \"是否提前做预加载\",\n        visible() {\n            if (this.modelType != GifRenderLoadModel.REMOTE) {\n                return false;\n            }\n            return true;\n        }\n    })\n    preLoadUrl: boolean = true;\n\n    /*******************本地加载**************************/\n    @property({\n        tooltip: \"分包包名,不填则默认为'resources'\",\n        visible() {\n            if (this.modelType != GifRenderLoadModel.LOCAL) {\n                return false;\n            }\n            return true;\n        }\n    })\n    bundleName: string = \"resources\"!;\n\n    @property({\n        tooltip: \"相对包名的相对资源路径,不可为空,不带后缀\",\n        visible() {\n            if (this.modelType != GifRenderLoadModel.LOCAL) {\n                return false;\n            }\n            return true;\n        }\n    })\n    resPath: string = \"\"!;\n\n    /** 类名 */\n    private _className: string = \"GifRenderLoad\";\n    /** 当前用于显示的sprite */\n    private _showSprite: Sprite = null;\n    /** 真实加载的资源数据 */\n    private _realLoadSprite = null;\n    /** 本类是否加载完毕 */\n    private _isLoad = false;\n    /** ui界面原本是否有Sprite组件(非代码添加) */\n    private _uiHaveSprite = true;\n    /** 是否可以一启动就加载 */\n    private _isCanOnloadRevire = false;\n\n    private _mainCavas = null;\n    private _tmpCavas = null;\n    private _mainCtx = null;\n    private _tmpCtx = null;\n    //实例化\n    constructor(name?: string) {\n        super(name);\n        this.checkPreLoad();\n    };\n\n\n    /** 检查预加载 */\n    private checkPreLoad() {\n        if (this._isCanOnloadRevire == true) {\n            return;\n        }\n        this._isCanOnloadRevire = false;\n        if (this.modelType == GifRenderLoadModel.LOCAL) {\n            if (Utils.string_isEmpty(this.bundleName) == false && Utils.string_isEmpty(this.resPath) == false) {\n                this._isCanOnloadRevire = true;\n                this.setLocalLoad(this.bundleName, this.resPath);\n            }\n        } else if (this.modelType == GifRenderLoadModel.REMOTE) {\n            if (Utils.string_isEmpty(this.remoteUrl) == false) {\n                this._isCanOnloadRevire = true;\n            }\n        }\n        if (this.modelType == GifRenderLoadModel.REMOTE && this.preLoadUrl == true) {\n            this.setRemoteUrl(this.remoteUrl);\n        }\n    }\n\n    /** 检查uiTransform和spritefram组件 */\n    private checkSpriteComp(): Sprite {\n        let uiTransform = this.node.getComponent(UITransform);\n        if (!uiTransform) {\n            uiTransform = this.node.addComponent(UITransform);\n            uiTransform.width = 100;\n            uiTransform.height = 100;\n        }\n        let sprite = this.node.getComponent(Sprite);\n        if (!sprite) {\n            sprite = this.node.addComponent(Sprite);\n            sprite.spriteFrame = null;\n            sprite.sizeMode = 0;\n            sprite.type = 0;\n            this._uiHaveSprite = false;\n        } else {\n            if (this._uiHaveSprite == true) {\n                if (sprite.spriteFrame == null) {\n                    sprite.spriteFrame = null;\n                }\n            }\n        }\n        return sprite;\n    }\n    onLoad() {\n        this.checkPreLoad();\n\n        this._mainCavas = this.__createCanvas();\n        this._tmpCavas = this.__createCanvas();\n        if (!this._mainCavas) {\n            console.error(`${this._className} 初始化画布出错 `)\n            return;\n        }\n        this._mainCtx = this._mainCavas.getContext('2d');\n        this._tmpCtx = this._tmpCavas.getContext(\"2d\");\n\n        this._isLoad = true;\n        this.updateView();\n    }\n    start() {\n\n    }\n\n    /** Local:本地Gif资源加载 */\n    setLocalLoad(bundle: string, path: string) {\n        if ((bundle == null || bundle == \"\") && (path == null || path == \"\")) {\n            return;\n        }\n        if (Utils.string_isEmpty(bundle) || Utils.string_isEmpty(bundle)) {\n            console.error(`${this._className} 本地资源加载失败，bundle:${bundle} path:${path}`);\n            return;\n        }\n        this.modelType = GifRenderLoadModel.LOCAL;\n        let self = this;\n        this.bundleName = bundle;\n        this.resPath = path;\n        //资源地址不包含后缀\n        let realPath = this.resPath.replace(/\\.(?:gif|png|jpg|webp|jpeg)$/i, \"\");\n        resLoader.loadBundle(this.bundleName, (err, bundle: AssetManager.Bundle) => {\n            if (err) {\n                console.log(err);\n                console.error(`${self._className} 加载本地包出错，bundle:${bundle}`);\n                return;\n            }\n            bundle.load(realPath, (err2, data) => {\n                if (err2) {\n                    console.log(err2);\n                    console.error(`${self._className} 加载本地文件出错，bundle:${bundle} path:${path},realPath`);\n                    return;\n                }\n                self._realLoadSprite = data;\n                self._getArrayBufferFromUrl(self.resPath, data.nativeUrl);\n\n                if (self._isLoad == true) {\n                    self._isCanOnloadRevire = true;\n                    self.updateView();\n                }\n            })\n        })\n    }\n\n    /** REMOTE:设置Url */\n    setRemoteUrl(url: string) {\n        if (url == null || url == \"\") {\n            return;\n        }\n        this.modelType = GifRenderLoadModel.REMOTE;\n        let self = this;\n        this.remoteUrl = url;\n        if (String(url).includes(\"http://\") || String(url).includes(\"https://\")) {\n            resLoader.loadRemote(url, (err, imageAsset) => {\n                if (err) {\n                    console.error(`${self._className} 加载远端资源出错，url:${url}`);\n                    return;\n                }\n                if (!imageAsset) { //资源可能还在加载中\n                    return;\n                }\n                self._realLoadSprite = imageAsset;\n                self._getArrayBufferFromUrl(self.remoteUrl, imageAsset.nativeUrl)\n                if (self._isLoad == true) {\n                    self._isCanOnloadRevire = true;\n                    self.updateView();\n                }\n            });\n        } else {\n            console.error(`${this._className}加载Url出错 url不正确 url=${url}`)\n        }\n    }\n\n    /** 更新界面 */\n    updateView() {\n        if (this._isLoad == false || this._isCanOnloadRevire != true) {\n            return;\n        }\n        this.clear();\n        if (this.modelType == GifRenderLoadModel.REMOTE) {\n            if (!this._realLoadSprite) {\n                this.setRemoteUrl(this.remoteUrl);\n                return;\n            }\n            if (!GifArrayBufferList[this.remoteUrl]) {\n                this._getArrayBufferFromUrl(this.remoteUrl, this._realLoadSprite.nativeUrl)\n                return;\n            }\n            this._showSprite = this.checkSpriteComp();\n            if (this._uiHaveSprite == false) {//自己添加的 就改为自适应\n                this._showSprite.sizeMode = 2;\n                this._showSprite.type = 0;\n            }\n            this._startDraw(GifArrayBufferList[this.remoteUrl]);\n        } else {\n            if (!this._realLoadSprite) {\n                this.setLocalLoad(this.bundleName, this.resPath);\n                return;\n            }\n            if (!GifArrayBufferList[this.resPath]) {\n                this._getArrayBufferFromUrl(this.resPath, this._realLoadSprite.nativeUrl)\n                return;\n            }\n\n            this._showSprite = this.checkSpriteComp();\n            if (this._uiHaveSprite == false) {//自己添加的 就改为和父节点一致\n                this._showSprite.sizeMode = 0;\n                this._showSprite.type = 0;\n            }\n            this._startDraw(GifArrayBufferList[this.resPath]);\n        }\n    }\n\n    /** 创建一个画布 */\n    private __createCanvas() {\n        if (globalThis.tt && globalThis.tt.createCanvas) {\n            return globalThis.tt.createCanvas()\n        }\n        if (globalThis.wx && globalThis.wx.createCanvas) {\n            return globalThis.wx.createCanvas()\n        }\n        if (document && document.createElement) {\n            return document.createElement(\"canvas\");\n        }\n        return null\n    }\n    /**\n     * 从远程资源获取arraybuffer数据\n     * @param url 远程资源地址\n     */\n    private _getArrayBufferFromUrl(key, url: string) {\n        if (GifArrayBufferList[key]) {\n            return;\n        }\n\n        let self = this;\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (!xhr.response) {\n                    console.warn(`${self._className} getArrayBuffer读取数据为空`);\n                    return;\n                }\n                if (GifArrayBufferList[key]) {\n                    // console.warn(`${self._className} getArrayBuffer数据重复`);\n                    return;\n                }\n                let frames = []\n                try {\n                    frames = decompressFrames(parseGIF(xhr.response), true);\n                } catch (error) {\n                    console.error(`${self._className} getArrayBuffer: read gif frame error`, error);\n                    return;\n                }\n                if (frames.length === 0) {\n                    console.warn(`${self._className} getArrayBuffer读取frames长度为空`);\n                    return;\n                }\n                GifArrayBufferList[key] = {\n                    url: url,\n                    refs: [],\n                    frames: frames\n                }\n                // console.log(\"ArrayBuffer结果：\", GifArrayBufferList[key])\n                xhr.abort();\n                if (self._isLoad == true) {\n                    self.updateView();\n                }\n            }\n        };\n        xhr.onerror = function (err) {\n            console.error(`${self._className} getArrayBuffer错误`);\n        };\n        xhr.send(null);\n        xhr.timeout = 10 * 10000;\n        xhr.ontimeout = (a) => {\n            GifArrayBufferList[key] = null;\n            console.error(`${self._className} getArrayBuffer超时`);\n        }\n    }\n\n    /**\n     * 开始绘制\n     * @param oneCache GifArrayBufferList中的一个\n     */\n    private _startDraw(oneCache) {\n        if (!oneCache) {\n            return;\n        }\n        // 至此，所有准备数据有了，准备绘制\n        let _needsDisposal = true;\n        let _frameIndex = 0;\n        let _frameWidth = 9999;\n        let _frameHeight = 9999;\n        let _frameData = null;\n        this._mainCavas.width = oneCache.frames[0].dims.width;\n        this._mainCavas.height = oneCache.frames[0].dims.height;\n        // 检查引用信息\n        if (oneCache.refs.indexOf(this.uuid) < 0) {\n            oneCache.refs.push(this.uuid)\n        }\n        // 开始绘制\n        let self = this;\n        let drawFunc = null;\n        drawFunc = function () {\n            if (!self._showSprite || !self.node || self.node.isValid == false) {\n                return;\n            }\n            let cache = oneCache;\n            let frame = cache.frames[_frameIndex];\n            let start = Date.now();\n            if (_needsDisposal == true) {\n                self._mainCtx.clearRect(0, 0, _frameWidth, _frameHeight);\n                _needsDisposal = false;\n            }\n\n            let dims = frame.dims;\n            if (!_frameData || dims.width !== _frameData.width || dims.height !== _frameData.height) {\n                self._tmpCavas.width = dims.width;\n                self._tmpCavas.height = dims.height;\n                _frameData = self._mainCtx.createImageData(dims.width, dims.height);\n            }\n            _frameData.data.set(frame.patch);\n\n            self._tmpCtx.putImageData(_frameData, 0, 0);\n            self._mainCtx.drawImage(self._tmpCavas, dims.left, dims.top);\n\n            _frameIndex++;\n            if (_frameIndex >= cache.frames.length) {\n                _frameIndex = 0\n            }\n            if (frame.disposalType === 2) {\n                _needsDisposal = true;\n            }\n            self._showSprite.spriteFrame = SpriteFrame.createWithImage(new ImageAsset(self._mainCavas));\n\n            let diff = Date.now() - start;\n            self.scheduleOnce(() => {\n                drawFunc();\n            }, Math.max(0, Math.floor(frame.delay - diff)) / 1000)\n        }\n\n        drawFunc();\n    }\n    /** 停止绘制 */\n    public clear() {\n        this.unscheduleAllCallbacks();\n        this._showSprite = this.checkSpriteComp();\n        this._showSprite.spriteFrame = null;\n    }\n}\n\n\n"]}