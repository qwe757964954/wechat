{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/vc/BaseComponent.ts"],"names":["Component","_decorator","Logger","EventManager","ResLoaderManager","SchedulerManager","ccclass","menu","BaseComponent","constructor","preLoadMap","Map","extent_onLoad","extent_onDestroy","_Eventlistener","_schedulerHandler","_schedulerHandlerOnce","onLoad","onLoadBefore","onDestroy","onDestroyBefore","removeAllModelListener","onInitModuleEvent","onEnable","start","onSchedulerUpdate","dt","addSchedulerOnce","time","callback","content","handler","schedulerTimeout","call","stopSchedulerOnce","unscheduleTimeout","addScheduler","schedulerInterval","_handler","stopScheduler","unscheduleInterval","stopAllScheduler","Object","prototype","hasOwnProperty","Number","addModelListener","name","removeModelListener","addListener","dispatchEvent","args","dispatch","removeListener","event","removePreLoadMap","forEach","VALUE","KEY","getInstance","removePreLoaderRecord","clear","getPreLoaderRes","bundle","path","resType","isReload","self","res","key","node","isValid","delete","set","getPreLoaderArrayRes","list","length","next","index","resConf","ddzRes","resIndex","getPreLoaderRemoteRes","print","logView"],"mappings":"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","sourcesContent":["\nimport { Component, _decorator } from 'cc';\nimport { Logger } from '../log/Logger';\nimport { EventManager } from '../manager/EventManager';\nimport { ResLoaderManager } from '../manager/ResLoaderManager';\nimport { SchedulerManager } from '../manager/SchedulerManager';\nconst { ccclass, menu } = _decorator;\n\n/**\n * Name = BaseComponent\n * URL = db://assets/framework/vc/BaseComponent.ts\n * Time = Tue Apr 19 2022 15:46:20 GMT+0800 (中国标准时间)\n * Author = xueya\n *\n * Life: onLoad-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n */\n\n\n@ccclass('BaseComponent')\n//方便编辑器识别的菜单项目\n@menu('vc/BaseComponent')\n\nexport class BaseComponent extends Component {\n\n\t/** 当前类预加载的资源 */\n\tprivate preLoadMap = new Map();\n\t/**子类继承的onload函数 */\n\tprivate extent_onLoad = null;\n\t/**子类继承的销毁函数 */\n\tprivate extent_onDestroy = null;\n\tconstructor() {\n\t\tsuper();\n\t\t/**重载onLoad */\n\t\tthis.extent_onLoad = this.onLoad;\n\t\tthis.onLoad = function () {\n\t\t\tthis.onLoadBefore()\n\t\t\tthis.extent_onLoad()\n\t\t}\n\n\t\t/**重载销毁 加入自动清理 */\n\t\tthis.extent_onDestroy = this.onDestroy\n\t\tthis.onDestroy = function () {\n\t\t\tthis.onDestroyBefore()\n\t\t\tthis.extent_onDestroy()\n\t\t}\n\t}\n\n\tprotected _Eventlistener = {};\n\tprotected _schedulerHandler = {};\n\tprotected _schedulerHandlerOnce = {};\n\t/**\n\t * 在onload之前调用\n\t */\n\tprivate onLoadBefore() {\n\t\tthis.removeAllModelListener()\n\t\tthis.onInitModuleEvent()\n\t};\n\n\tonLoad() {\n\t\tthis.onLoadBefore()\n\t};\n\n\tonEnable() {\n\t\t//当状态被激活时会调用\n\t}\n\tstart() {\n\n\t};\n\n\t/**override 定时器的回调更新，子类需重写该方法 */\n\tprotected onSchedulerUpdate(dt?: number) {\n\n\t}\n\t/**override 初始化模块事件，子类需重写该方法 */\n\tprotected onInitModuleEvent() {\n\n\t}\n\t/**\n\t * 添加一个延时\n\t * @param time 时间 单位:秒\n\t * @param callback 更新函数(默认为:onSchedulerUpdate) \n\t * @param return 定时器句柄number\n\t */\n\tpublic addSchedulerOnce(time: number = 0, callback: Function = this.onSchedulerUpdate): number {\n\t\tconst content = this\n\t\tlet handler = SchedulerManager.schedulerTimeout((dt: number) => {\n\t\t\tcallback.call(content, dt, handler);\n\t\t\tcontent.stopSchedulerOnce(handler);\n\t\t}, time)\n\t\tthis._schedulerHandlerOnce[handler] = true;\n\t\treturn handler\n\t}\n\t/** 停止延时定时器 */\n\tpublic stopSchedulerOnce(handler: number) {\n\t\tSchedulerManager.unscheduleTimeout(handler);\n\t\tif (handler != null && this._schedulerHandlerOnce[handler] == true) {\n\t\t\tthis._schedulerHandlerOnce[handler] = null;\n\t\t}\n\t}\n\n\t/**\n\t * 添加一个定时器\n\t * @param time 时间 单位:秒\n\t * @param callback 更新函数(默认为:onSchedulerUpdate) \n\t * @param return 定时器句柄number\n\t */\n\tpublic addScheduler(time: number = 0, callback: Function = this.onSchedulerUpdate): number {\n\t\tconst content = this\n\t\tlet handler = SchedulerManager.schedulerInterval((dt: number, _handler) => {\n\t\t\tcallback.call(content, dt, handler);\n\t\t}, time)\n\t\tthis._schedulerHandler[handler] = true;\n\t\treturn handler\n\t}\n\t/** 停止定时器 */\n\tpublic stopScheduler(handler: number) {\n\t\tSchedulerManager.unscheduleInterval(handler);\n\t\tif (handler != null && this._schedulerHandler[handler] == true) {\n\t\t\tthis._schedulerHandler[handler] = null;\n\t\t}\n\t}\n\t/** 停止所有定时器 */\n\tpublic stopAllScheduler() {\n\t\tfor (let handler in this._schedulerHandler) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this._schedulerHandler, handler)) {\n\t\t\t\tthis.stopScheduler(Number(handler));\n\t\t\t}\n\t\t}\n\t\tfor (let handler in this._schedulerHandlerOnce) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this._schedulerHandlerOnce, handler)) {\n\t\t\t\tthis.stopSchedulerOnce(Number(handler));\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * 添加事件绑定\n\t * @param name 事件名称\n\t * @param callback 回调函数\n\t */\n\tprotected addModelListener(name: string, callback: Function) {\n\t\tthis.removeModelListener(name);\n\t\tthis._Eventlistener[name] = name\n\t\tEventManager.addListener(name, callback, this)\n\t}\n\t/**\n\t * 发送事件\n\t * @param name 事件名称\n\t * @param callback 回调函数\n\t */\n\tprotected dispatchEvent(name: string, ...args: any[]) {\n\t\tEventManager.dispatch(name, ...args)\n\t}\n\n\n\t/**\n\t * 移除事件\n\t * @param name \n\t */\n\tprotected removeModelListener(name: string) {\n\t\tif (this._Eventlistener[name]) {\n\t\t\tEventManager.removeListener(name, this)\n\t\t\tthis._Eventlistener[name] = null;\n\t\t}\n\n\t}\n\t/**\n\t * 移除所有事件\n\t * @param name \n\t */\n\tprotected removeAllModelListener() {\n\t\tfor (const event in this._Eventlistener) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this._Eventlistener, event)) {\n\t\t\t\tthis.removeModelListener(event)\n\t\t\t}\n\t\t}\n\t\tthis._Eventlistener = {}\n\t}\n\t/** 移除当前类所有加载 */\n\tprotected removePreLoadMap() {\n\t\tthis.preLoadMap.forEach((VALUE, KEY) => {\n\t\t\tResLoaderManager.getInstance().removePreLoaderRecord(KEY);\n\t\t});\n\t\tthis.preLoadMap.clear();\n\t}\n\t/**\n\t * 清理(在调用 onDestroy 前自动清理)\n\t */\n\tprivate onDestroyBefore() {\n\t\tthis.stopAllScheduler()\n\t\tthis.removeAllModelListener()\n\t\tthis.removePreLoadMap();\n\t}\n\n\t//销毁\n\tonDestroy() {\n\t\tthis.onDestroyBefore()\n\t};\n\n\t/**\n\t * 获取预加载的资源\n\t * @param bundle 包名\n\t * @param path 资源路径\n\t * @param resType 资源类型\n\t * @param callback 成功回调\n\t * @param isReload 是否重新加载 默认为false\n\t */\n\tprotected getPreLoaderRes(bundle, path, resType = null, callback = null, isReload = false) {\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\t\tlet self = this;\n\t\tResLoaderManager.getInstance().getPreLoaderRes(bundle, path, resType, (res, key) => {\n\t\t\tif (!self.node) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (self.node && self.node.isValid == true) {\n\t\t\t\tself.preLoadMap.delete(key)\n\t\t\t\tself.preLoadMap.set(key, true);\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(res);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}, isReload)\n\t}\n\n\t/** 获取列表中的预加载资源 */\n\tprotected getPreLoaderArrayRes(list: any[], callback: Function = null, isReload = false) {\n\t\tif (!list.length) {\n\t\t\treturn;\n\t\t}\n\t\tlet next = (index, isReload) => {\n\t\t\tlet self = this;\n\t\t\tlet resConf = list[index];\n\t\t\tlet ddzRes = resConf.ddzRes;\n\t\t\tlet resIndex = index;\n\t\t\tResLoaderManager.getInstance().getPreLoaderRes(ddzRes.bundle, ddzRes.path, resConf.resType, (res, key) => {\n\t\t\t\tif (self.preLoadMap) {\n\t\t\t\t\tself.preLoadMap.delete(key)\n\t\t\t\t\tself.preLoadMap.set(key, true);\n\t\t\t\t}\n\t\t\t\tresIndex++;\n\t\t\t\tif (resIndex < list.length) {\n\t\t\t\t\tnext(resIndex, isReload);\n\t\t\t\t} else {\n\t\t\t\t\tcallback && callback();\n\t\t\t\t}\n\t\t\t}, isReload);\n\t\t}\n\t\tnext(0, isReload);\n\t}\n\n\n\t/**\n\t * 获取预加载的远端资源\n\t * @param bundle 包名\n\t * @param path 资源路径\n\t * @param resType 资源类型 string 例'.jpg'\n\t * @param callback 成功回调\n\t * @param isReload 是否重新加载 默认为false\n\t */\n\tprotected getPreLoaderRemoteRes(path: string, resType = null, callback = null, isReload = false) {\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\t\tlet self = this;\n\t\tResLoaderManager.getInstance().getPreLoaderRemoteRes(path, resType, (res, key) => {\n\t\t\tif (!self) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (self.node && self.node.isValid == true) {\n\t\t\t\tself.preLoadMap.delete(key)\n\t\t\t\tself.preLoadMap.set(key, true);\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(res);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}, isReload)\n\t}\n\n\tprotected print(...args: any[]) {\n\t\tLogger.logView(5, args);\n\t}\n}\n\n"]}