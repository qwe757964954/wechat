{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/cache/PlayerMgr.ts"],"names":["PlayerMgr","GCache","BaseCache","MahjongMap","CardUtil","RoomMgr","constructor","name","playerList","handOpGroup","myPlayerInfo","gangCount","observers","getInstance","instance","addObserver","observer","push","removeObserver","index","indexOf","splice","setPlayerList","data","parseUseInfo","sortPlayersBySeatId","mySeatId","resertPlayer","notifyObservers","updatePlayerList","getOpIndexs","opCards","myPlayer","getMyPlayerInfo","indexs","i","length","handCards","updateMyhands","nums","getMyhands","getLastMyhands","includesMyhands","opcard","getHandCardByIndex","deleteMyHands","bytes","getIndexByHandCards","insertCard","removeCard","myCards","cards","getCardValue","card","checkIndex","dumpMyHands","majiangMap","cardStr","get","console","log","updatePlayerCardsNum","cardsCount","player","findPlayerWithSeatId","cardCount","findOtherPlayer","filter","user","seatId","findPlayerWithUserId","userId","User","getUserMid","addPlayerList","info","Array","isArray","newItems","item","some","exists","forEach","gameUserInfo","JSON","parse","strUserInfo","deletePlayerList","otherItem","clear","getPlayerReadyStatus","isReady","updatePlayerReadyStatus","updatePlayerMoney","moneys","money","updateUserMoneyByID","updateOutCards","resp","status","outCards","updateHandCards","huCard","opGroups","tingCard","isUnTing","customData","deletePlayerLeave","updatePlayerAiStatus","isAi"],"mappings":"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","sourcesContent":["\n\nimport { GCache } from \"../../../cache/GCache\";\nimport { BaseCache } from \"../../../framework/vc/BaseCache\";\nimport { MahjongMap } from \"../common/FXJConfig\";\nimport { Common } from \"../common/idl/Common\";\nimport { Game } from \"../common/idl/Game\";\nimport { CardUtil } from \"../util/CardUtil\";\nimport { RoomMgr } from \"./RoomMgr\";\n\nexport interface Observer {\n\tupdatePlayerList(data: Common.IPlayerInfo[]): void;\n\tupdateCardsCount():void;\n}\n\n\n  \n\n\nexport class PlayerMgr extends BaseCache {\n    public playerList?: Common.IPlayerInfo[] = [];\n    public handOpGroup?: Common.IHandOpGroup = null;\n    public myPlayerInfo?: Common.IPlayerInfo = null;\n\tpublic gangCount?: number = 0;\n\tpublic observers: Observer[] = [];\n\t\n\n    private static instance: PlayerMgr | null = null;\n    constructor(name = \"\") {\n\t\tsuper(name);\n\t};\n    public static getInstance(): PlayerMgr {\n        if (!PlayerMgr.instance) {\n            PlayerMgr.instance = new PlayerMgr();\n        }\n        return PlayerMgr.instance;\n    }\n\taddObserver(observer: Observer) {\n\t\tthis.observers.push(observer);\n\t}\n\t\n\t  // 取消注册观察者\n\tremoveObserver(observer: Observer) {\n\t\tconst index = this.observers.indexOf(observer);\n\t\tif (index !== -1) {\n\t\t\tthis.observers.splice(index, 1);\n\t\t}\n\t}\n\t\n\t  // 当数据发生变化时，通知所有观察者\n\n\tpublic setPlayerList(data: Common.IPlayerInfo[]): void {\n\t\tthis.parseUseInfo(data);\n\t\tthis.playerList = CardUtil.sortPlayersBySeatId(data,RoomMgr.getInstance().mySeatId);\n\t}\n\n\tpublic resertPlayer():void{\n\t\tthis.playerList = [];\n\t}\n\n\tpublic notifyObservers(): void {\n\t\tfor (const observer of this.observers) {\n\t\t  \tobserver.updatePlayerList(this.playerList);\n\t\t}\n\t}\n\n\tpublic getOpIndexs(opCards:number[]):number[]{\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\tlet indexs:number[] = []\n\t\tfor (let i = 0; i < opCards.length; i++) {\n\t\t\tconst index = myPlayer.handCards.indexOf(opCards[i]);\n\t\t\t//如果存在则添加\n\t\t\tif(index !== -1){\n\t\t\t\tindexs.push(index);\n\t\t\t}\n\t\t}\n\t\treturn indexs;\n\t}\n\n\tpublic updateMyhands(nums:number[]){\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\tmyPlayer.handCards = nums;\n\t}\n\n\tpublic getMyhands(): number[]{\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\treturn myPlayer.handCards\n\t}\n\n\tpublic getLastMyhands(): number{\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\treturn myPlayer.handCards[myPlayer.handCards.length - 1];\n\t}\n\n\tpublic includesMyhands(opcard?:number): boolean{\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\treturn myPlayer.handCards.indexOf(opcard) !== -1\n\t}\n\n\tpublic getHandCardByIndex(index:number):number{\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\treturn myPlayer.handCards[index];\n\t}\n\n\tdeleteMyHands(bytes:number[]){\n\t\t\n\t}\n\n\t//要插入的牌在手牌中应有的位置\n    public getIndexByHandCards(insertCard: number, removeCard: number): number {\n        let myCards = this.getMyhands();\n        let cards = [...myCards];\n        for (let i = cards.length - 1; i >= 0; i--) { //如果此时手牌中还存在要移除的牌，则先移除，再计算插入牌的index\n            if (cards[i] === removeCard) {\n                cards.splice(i, 1);\n                break;\n            }\n        }\n        // console.log(\"=getIndexByHandCards=cards==\", cards, insertCard.toString(16), removeCard);\n\t\t//如果要插入的牌是小鸡，放在第一位\n\t\tif(CardUtil.getCardValue(insertCard) === \"0x21\"){\n\t\t\treturn 0;\n\t\t}\n\n        for (let index = 0; index < cards.length; index++) {\n            let card = cards[index];\n\t\t\tlet checkIndex\n            if (card == insertCard) {\n                checkIndex = index;\n            } else if (card < insertCard && index + 1 < cards.length && insertCard <= cards[index + 1]) {\n                checkIndex = index + 1;\n            } else if (index == cards.length - 1 && insertCard > card) {\n                checkIndex = cards.length;\n            }\n\t\t\t\n            if (checkIndex) {\n                return checkIndex;\n            }\n        }\n\t\t\n        return 0;\n    }\n\n\tpublic dumpMyHands(){\n\t\tlet myPlayer:Common.IPlayerInfo = PlayerMgr.getInstance().getMyPlayerInfo();\n\t\tlet majiangMap:string[] = [];\n\t\tfor (let i = 0; i < myPlayer.handCards.length; i++) {\n            let cardStr = CardUtil.getCardValue(myPlayer.handCards[i]);\n\t\t\tmajiangMap.push(MahjongMap.get(cardStr));\n        }\n\t\tconsole.log(\"dumpMyHands______________________\",majiangMap);\n\t}\n\n\tpublic updatePlayerCardsNum(cardsCount:number[]){\n\t\tfor (let i = 0; i < cardsCount.length; i++) {\n\t\t\tlet player :Common.IPlayerInfo = this.findPlayerWithSeatId(i+1);\n\t\t\tplayer.cardCount = cardsCount[i];\n\t\t}\n\t}\n\n\tpublic findOtherPlayer():Common.IPlayerInfo[]{\n\t\treturn this.playerList.filter(user => user.seatId === RoomMgr.getInstance().mySeatId);\n\t}\n\n\tpublic findPlayerWithUserId( userId: number): Common.IPlayerInfo {\n\t\treturn this.playerList.filter(user => user.userId === userId)[0];\n\t}\n\n\tpublic findPlayerWithSeatId( seatId: number): Common.IPlayerInfo {\n\t\treturn this.playerList.filter(user => user.seatId === seatId)[0];\n\t}\n\n\tpublic getMyPlayerInfo(): Common.IPlayerInfo{\n\t\tthis.myPlayerInfo = this.findPlayerWithUserId(GCache.User.getUserMid());\n\t\treturn this.myPlayerInfo;\n\t}\n\n    //增加玩家\n\tpublic addPlayerList(info: Common.IPlayerInfo | Common.IPlayerInfo[]): void {\n\t\tthis.parseUseInfo(info);\n\t\tif (Array.isArray(info)) {\n\t\t\tconst newItems = info.filter(item => !this.playerList.some(({ userId }) => userId === item.userId));\n\t\t\tthis.playerList.push(...newItems);\n\t\t} else {\n\t\t\t\n\t\t\tconst exists = this.playerList.some(user => user.userId === info.userId);\n\t\t\tif(!exists){\n\t\t\t\tthis.playerList.push(info);\n\t\t\t}\n\t\t}\n\t\tthis.playerList = CardUtil.sortPlayersBySeatId(this.playerList,RoomMgr.getInstance().mySeatId);\n\t}\n\t//将玩家str解析\n\tpublic parseUseInfo(info: Common.IPlayerInfo | Common.IPlayerInfo[]){\n\t\tif (Array.isArray(info)) {\n\t\t\tinfo.forEach(item => {\n\t\t\t\titem.gameUserInfo = JSON.parse(item.strUserInfo)\n\t\t\t});\n\t\t} else {\n\t\t\tinfo.gameUserInfo = JSON.parse(info.strUserInfo)\n\t\t}\n\t}\n\t//删除玩家\n\tpublic deletePlayerList(info: Common.IPlayerInfo | Common.IPlayerInfo[]): void {\n\t\tif (Array.isArray(info)) {\n\t\t\tthis.playerList = this.playerList.filter((item) =>\n\t\t\t\t!info.some((otherItem) => otherItem.userId === item.userId)\n\t\t\t);\n\t\t} else {\n\t\t\tthis.playerList = this.playerList.filter(item => item.userId !== info.userId);\n\t\t}\n\t\tthis.playerList = CardUtil.sortPlayersBySeatId(this.playerList,RoomMgr.getInstance().mySeatId);\n\t}\n\t\n\n    //清理房间数据\n\tpublic clear(): void {\n\t\tthis.playerList = null;\n\t}\n\tgetPlayerReadyStatus(userId:number):number{\n\t\tlet player :Common.IPlayerInfo = this.findPlayerWithUserId(userId);\n\t\treturn player.isReady;\n\t}\n\tupdatePlayerReadyStatus(userId:number):void {\n\t\tlet player :Common.IPlayerInfo = this.findPlayerWithUserId(userId);\n\t\tplayer.isReady = 1;\n\t}\n\n\tupdatePlayerMoney(moneys:number[]):void {\n\t\tfor (let i = 0; i < moneys.length; i++) {\n\t\t\tlet player :Common.IPlayerInfo = this.findPlayerWithSeatId(i+1);\n\t\t\tplayer.money = moneys[i];\n\t\t\tif(player.userId === GCache.User.getUserMid()){\n\t\t\t\tGCache.User.updateUserMoneyByID(0, player.money);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tupdateOutCards(resp:Game.IGrabCard): void {\n\t\tlet player :Common.IPlayerInfo = this.findPlayerWithUserId(resp.userId);\n\t\tlet card:Common.ICard = {\n\t\t\tcard: resp.card,\n\t\t\tstatus:0\n\t\t}\n\t\tplayer.outCards.push(card); \n\t}\n\n\tupdateHandCards(resp:Game.IHandCards):void {\n\t\tfor (let i = 0; i < resp.handCards.length; i++) {\n\t\t\tlet player :Common.IPlayerInfo = this.findPlayerWithSeatId(i+1);\n\t\t\tplayer.handCards = resp.handCards[i].handCards;\n\t\t\tplayer.huCard = resp.handCards[i].huCard;\n\t\t\tplayer.opGroups = resp.handCards[i].opGroups;\n\t\t\tplayer.tingCard = resp.handCards[i].tingCard;\n\t\t\tplayer.isUnTing = resp.handCards[i].isUnTing;\n\t\t\tplayer.customData = resp.handCards[i].customData;\n\t\t}\n\t}\n\t\n\t// public userOperationResult(resp:Game.IOperationResult) : void {\n\t// \tPlayerMgr.getInstance().userOperationResult(resp);\n\t// }\n\n\tdeletePlayerLeave(userId:number):void {\n\t\tthis.playerList = this.playerList.filter(item => item.userId !== userId);\n\t}\n\t\n\tupdatePlayerAiStatus(userId:number,isAi:number):void {\n\t\tlet player :Common.IPlayerInfo = this.findPlayerWithUserId(userId);\n\t\tplayer.isAi = isAi;\n\t}\n\n}"]}