{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/crypto/Encrypto.ts"],"names":["_base64keyStr","_sendByteList","_receiveByteList","UnicodeDecode","str","delFault","eval","UnicodeEncode","convertStr","stringBytes","stringToByte","escape","replace","isUTF8","String","bytes","Array","len","c","length","i","charCodeAt","push","bytesToString","_arr","one","toString","v","match","bytesLength","store","slice","st","fromCharCode","parseInt","join","bytesToHexString","arrBytes","tmp","num","stringToHex","arr","val","hexStringToString","substring","console","log","hexToByte","hexStringToBytes","hexlen","uint8Array","Uint8Array","j","result","index","byteLength","utf8to16","out","char2","char3","charAt","utf8_encode","utftext","n","utf8_decode","c1","c2","base64_encode","input","isUtf8Encode","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","base64_decode","isUtf8Decode","outBytes","indexOf","base64ToUint8Array","base64String","padding","repeat","base64","rawData","outputArray","uint8ArrayToBase64","buffer","binary","arrayBufferToString","isSymbol","isUTF","byteArray","Int8Array","stringToArrayBuffer","newBuffer","ArrayBuffer","newDataView","DataView","setInt8","setUint8","arrayBuffer","bytesToUint8Array","array","createWordArray","utf8Parse","aesEncrypt","msg","key","iv","encrypt","CryptoJS","AES","mode","CBC","pad","Pkcs7","aesDecrypt","decrypt","enc","Utf8","stringify","utf8Str","parse","JsonEncode","value","replacer","space","res","JSON","error","JsonEncode2","JsonDecode","text","reviver","UnZlibZip","data","pako","inflate","to","ZlibZip","level","binaryString","deflate","UnZlibZipRaw","inflateRaw","ZlibZipRaw","deflateRaw","UnGZip","ungzip","GZip","gzip","consoleStr","startIndex","endIndex","code","strData","reduce","prev","next","encodeBuffer","headLen","maxBufferSize","dataView","isLittle","getUint8","nSize","getInt32","wDataSize","cbCheckCode","headBuffer","hBuffer","commondBuffer","uBuffer","newB","_newBuffer","decodeBuffer","Encrypt"],"mappings":"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","sourcesContent":["/**\n * Name = Encrypt\n * URL = db://assets/framework/crypto/Encrypt.ts\n * Time = Thu Apr 07 2022 15:30:42 GMT+0800 (中国标准时间)\n * Author = xueya\n * 加解密\n */\n\nconst _base64keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n//发送字节映射表\nconst _sendByteList = [\n    0x70, 0x2F, 0x40, 0x5F, 0x44, 0x8E, 0x6E, 0x45, 0x7E, 0xAB, 0x2C, 0x1F, 0xB4, 0xAC, 0x9D, 0x91,\n    0x0D, 0x36, 0x9B, 0x0B, 0xD4, 0xC4, 0x39, 0x74, 0xBF, 0x23, 0x16, 0x14, 0x06, 0xEB, 0x04, 0x3E,\n    0x12, 0x5C, 0x8B, 0xBC, 0x61, 0x63, 0xF6, 0xA5, 0xE1, 0x65, 0xD8, 0xF5, 0x5A, 0x07, 0xF0, 0x13,\n    0xF2, 0x20, 0x6B, 0x4A, 0x24, 0x59, 0x89, 0x64, 0xD7, 0x42, 0x6A, 0x5E, 0x3D, 0x0A, 0x77, 0xE0,\n    0x80, 0x27, 0xB8, 0xC5, 0x8C, 0x0E, 0xFA, 0x8A, 0xD5, 0x29, 0x56, 0x57, 0x6C, 0x53, 0x67, 0x41,\n    0xE8, 0x00, 0x1A, 0xCE, 0x86, 0x83, 0xB0, 0x22, 0x28, 0x4D, 0x3F, 0x26, 0x46, 0x4F, 0x6F, 0x2B,\n    0x72, 0x3A, 0xF1, 0x8D, 0x97, 0x95, 0x49, 0x84, 0xE5, 0xE3, 0x79, 0x8F, 0x51, 0x10, 0xA8, 0x82,\n    0xC6, 0xDD, 0xFF, 0xFC, 0xE4, 0xCF, 0xB3, 0x09, 0x5D, 0xEA, 0x9C, 0x34, 0xF9, 0x17, 0x9F, 0xDA,\n    0x87, 0xF8, 0x15, 0x05, 0x3C, 0xD3, 0xA4, 0x85, 0x2E, 0xFB, 0xEE, 0x47, 0x3B, 0xEF, 0x37, 0x7F,\n    0x93, 0xAF, 0x69, 0x0C, 0x71, 0x31, 0xDE, 0x21, 0x75, 0xA0, 0xAA, 0xBA, 0x7C, 0x38, 0x02, 0xB7,\n    0x81, 0x01, 0xFD, 0xE7, 0x1D, 0xCC, 0xCD, 0xBD, 0x1B, 0x7A, 0x2A, 0xAD, 0x66, 0xBE, 0x55, 0x33,\n    0x03, 0xDB, 0x88, 0xB2, 0x1E, 0x4E, 0xB9, 0xE6, 0xC2, 0xF7, 0xCB, 0x7D, 0xC9, 0x62, 0xC3, 0xA6,\n    0xDC, 0xA7, 0x50, 0xB5, 0x4B, 0x94, 0xC0, 0x92, 0x4C, 0x11, 0x5B, 0x78, 0xD9, 0xB1, 0xED, 0x19,\n    0xE9, 0xA1, 0x1C, 0xB6, 0x32, 0x99, 0xA3, 0x76, 0x9E, 0x7B, 0x6D, 0x9A, 0x30, 0xD6, 0xA9, 0x25,\n    0xC7, 0xAE, 0x96, 0x35, 0xD0, 0xBB, 0xD2, 0xC8, 0xA2, 0x08, 0xF3, 0xD1, 0x73, 0xF4, 0x48, 0x2D,\n    0x90, 0xCA, 0xE2, 0x58, 0xC1, 0x18, 0x52, 0xFE, 0xDF, 0x68, 0x98, 0x54, 0xEC, 0x60, 0x43, 0x0F\n]\n//接收字节映射表\nconst _receiveByteList = [\n    0x51, 0xA1, 0x9E, 0xB0, 0x1E, 0x83, 0x1C, 0x2D, 0xE9, 0x77, 0x3D, 0x13, 0x93, 0x10, 0x45, 0xFF,\n    0x6D, 0xC9, 0x20, 0x2F, 0x1B, 0x82, 0x1A, 0x7D, 0xF5, 0xCF, 0x52, 0xA8, 0xD2, 0xA4, 0xB4, 0x0B,\n    0x31, 0x97, 0x57, 0x19, 0x34, 0xDF, 0x5B, 0x41, 0x58, 0x49, 0xAA, 0x5F, 0x0A, 0xEF, 0x88, 0x01,\n    0xDC, 0x95, 0xD4, 0xAF, 0x7B, 0xE3, 0x11, 0x8E, 0x9D, 0x16, 0x61, 0x8C, 0x84, 0x3C, 0x1F, 0x5A,\n    0x02, 0x4F, 0x39, 0xFE, 0x04, 0x07, 0x5C, 0x8B, 0xEE, 0x66, 0x33, 0xC4, 0xC8, 0x59, 0xB5, 0x5D,\n    0xC2, 0x6C, 0xF6, 0x4D, 0xFB, 0xAE, 0x4A, 0x4B, 0xF3, 0x35, 0x2C, 0xCA, 0x21, 0x78, 0x3B, 0x03,\n    0xFD, 0x24, 0xBD, 0x25, 0x37, 0x29, 0xAC, 0x4E, 0xF9, 0x92, 0x3A, 0x32, 0x4C, 0xDA, 0x06, 0x5E,\n    0x00, 0x94, 0x60, 0xEC, 0x17, 0x98, 0xD7, 0x3E, 0xCB, 0x6A, 0xA9, 0xD9, 0x9C, 0xBB, 0x08, 0x8F,\n    0x40, 0xA0, 0x6F, 0x55, 0x67, 0x87, 0x54, 0x80, 0xB2, 0x36, 0x47, 0x22, 0x44, 0x63, 0x05, 0x6B,\n    0xF0, 0x0F, 0xC7, 0x90, 0xC5, 0x65, 0xE2, 0x64, 0xFA, 0xD5, 0xDB, 0x12, 0x7A, 0x0E, 0xD8, 0x7E,\n    0x99, 0xD1, 0xE8, 0xD6, 0x86, 0x27, 0xBF, 0xC1, 0x6E, 0xDE, 0x9A, 0x09, 0x0D, 0xAB, 0xE1, 0x91,\n    0x56, 0xCD, 0xB3, 0x76, 0x0C, 0xC3, 0xD3, 0x9F, 0x42, 0xB6, 0x9B, 0xE5, 0x23, 0xA7, 0xAD, 0x18,\n    0xC6, 0xF4, 0xB8, 0xBE, 0x15, 0x43, 0x70, 0xE0, 0xE7, 0xBC, 0xF1, 0xBA, 0xA5, 0xA6, 0x53, 0x75,\n    0xE4, 0xEB, 0xE6, 0x85, 0x14, 0x48, 0xDD, 0x38, 0x2A, 0xCC, 0x7F, 0xB1, 0xC0, 0x71, 0x96, 0xF8,\n    0x3F, 0x28, 0xF2, 0x69, 0x74, 0x68, 0xB7, 0xA3, 0x50, 0xD0, 0x79, 0x1D, 0xFC, 0xCE, 0x8A, 0x8D,\n    0x2E, 0x62, 0x30, 0xEA, 0xED, 0x2B, 0x26, 0xB9, 0x81, 0x7C, 0x46, 0x89, 0x73, 0xA2, 0xF7, 0x72\n]\n\nexport module Encrypt {\n    //Unicode 转中文\n    export function UnicodeDecode(str: string, delFault?: any) {\n        if (!str) {\n            return delFault || null\n        }\n        return eval(\"'\" + str + \"'\");\n\n    }\n    //中文 转 Unicode \n    export function UnicodeEncode(convertStr: string, delFault?: any) {\n        let stringBytes = stringToByte(convertStr)\n        if (!stringBytes) {\n            return delFault || null\n        }\n        return escape(convertStr).replace(/\\%u/g, '\\\\u')\n    }\n\n    /**\n     * 字符串转字节数组序列\n     * @param str 要转换的字符串\n     * @param isUTF8 是否UTF8编码 默认true\n     * @returns \n     */\n    export function stringToByte(str: string, isUTF8 = true): Array<number> | null {\n        if (!str) {\n            return null\n        }\n        str = String(str);\n        let bytes = new Array();\n        let len, c;\n        len = str.length;\n        if (isUTF8 == true) {\n            for (let i = 0; i < len; i++) {\n                c = str.charCodeAt(i);\n                if (c >= 0x010000 && c <= 0x10FFFF) {\n                    bytes.push(((c >> 18) & 0x07) | 0xF0);\n                    bytes.push(((c >> 12) & 0x3F) | 0x80);\n                    bytes.push(((c >> 6) & 0x3F) | 0x80);\n                    bytes.push((c & 0x3F) | 0x80);\n                } else if (c >= 0x000800 && c <= 0x00FFFF) {\n                    bytes.push(((c >> 12) & 0x0F) | 0xE0);\n                    bytes.push(((c >> 6) & 0x3F) | 0x80);\n                    bytes.push((c & 0x3F) | 0x80);\n                } else if (c >= 0x000080 && c <= 0x0007FF) {\n                    bytes.push(((c >> 6) & 0x1F) | 0xC0);\n                    bytes.push((c & 0x3F) | 0x80);\n                } else {\n                    bytes.push(c & 0xFF);\n                }\n            }\n        } else {\n            for (let i = 0; i < len; i++) {\n                c = null;\n                c = str.charCodeAt(i);\n                bytes.push(c);\n            }\n            return bytes;\n        }\n        return bytes;\n    }\n    /**\n     * 字节数组序列转字符串 默认UTF8编码 [0x24, 0x26, 0x28, 0x2A] ==> \"$&C*\"\n     * @param bytes 要转换的字节数组\n     * @param isUTF8 是否UTF8编码  默认true\n     * @returns \n     */\n    export function bytesToString(bytes: Array<number> | string | null, isUTF8 = true): string | null {\n        if (!bytes) {\n            return null\n        }\n        if (typeof bytes === 'string') {\n            return bytes;\n        }\n        let str = [];\n        let _arr = bytes;\n\n        if (isUTF8 == true) {\n            for (let i = 0; i < _arr.length; i++) {\n                let one = _arr[i].toString(2);\n                let v = one.match(/^1+?(?=0)/);\n                if (v && one.length == 8) {\n                    let bytesLength = v[0].length;\n                    let store = _arr[i].toString(2).slice(7 - bytesLength);\n                    for (let st = 1; st < bytesLength; st++) {\n                        store += _arr[st + i].toString(2).slice(2);\n                    }\n\n                    str.push(String.fromCharCode(parseInt(store, 2)));\n\n                    i += bytesLength - 1;\n                } else {\n                    str.push(String.fromCharCode(_arr[i]));\n                }\n            }\n        } else {\n            for (let i = 0; i < bytes.length; i++) {\n                str.push(String.fromCharCode(bytes[i]));\n            }\n        }\n\n        return str.join(\"\");\n    }\n\n    /**\n     * 字节数组转16进制字符串\n     * @param arrBytes 字节数组\n     * @return 转化后的字符串\n     */\n    export function bytesToHexString(arrBytes: any[]): string {\n        let str = \"\";\n        for (var i = 0; i < arrBytes.length; i++) {\n            let tmp;\n            let num: number = arrBytes[i];\n            if (num < 0) {\n                //此处填坑，当byte因为符合位导致数值为负时候，需要对数据进行处理\n                tmp = (255 + num + 1).toString(16);\n            } else {\n                tmp = num.toString(16);\n            }\n            if (tmp.length == 1) {\n                tmp = \"0\" + tmp;\n            }\n            str += tmp;\n        }\n        return str;\n    }\n    /**\n     * 字符串转16进制\n     * @param arr \n     * @returns \n     */\n    export function stringToHex(arr: string) {\n        if (!arr) {\n            return null\n        }\n        arr = String(arr);\n        let val = \"\";\n        for (let i = 0; i < arr.length; i++) {\n            if (val == \"\") {\n                val = arr.charCodeAt(i).toString(16);\n            }\n            else {\n                val += arr.charCodeAt(i).toString(16);\n            }\n        }\n        return val;\n\n    }\n\n    /**\n     * 将16进制转为字符串\n     * @param str \n     */\n    export function hexStringToString(arr: string): string {\n        if (!arr) {\n            return null\n        }\n        arr = String(arr);\n        let val = \"\", len = arr.length / 2;\n        for (var i = 0; i < len; i++) {\n            val += String.fromCharCode(parseInt(arr.substring(i * 2, 2), 16));\n        }\n        console.log('16进制转字符串', val)\n        return val;\n    }\n    /**\n     * 将16进制字符串转为字节\n     * @param arr \n     * @returns \n     */\n    export function hexToByte(arr: string): number {\n        return parseInt(arr, 16)\n    }\n    /**\n     * 将16进制字符串转为字节数组\n     * @param str \n     */\n    export function hexStringToBytes(arr: string): [] {\n        let hexlen = arr.length;\n        let uint8Array: Uint8Array;\n\n        if (hexlen % 2 == 1) {\n            // 奇数\n            hexlen++;\n            uint8Array = new Uint8Array(hexlen / 2);\n            arr = \"0\" + arr;\n        } else {\n            // 偶数\n            uint8Array = new Uint8Array(hexlen / 2);\n        }\n        let j = 0;\n        for (let i = 0; i < hexlen; i += 2) {\n            uint8Array[j] = hexToByte(arr.substring(i, i + 2));\n            j++;\n        }\n        let result: any = []; // byte队列\n        for (let index = 0; index < uint8Array.byteLength; index++) {\n            result.push(uint8Array[index])\n        }\n        return result;\n    }\n\n    //处理中文乱码问题\n    export function utf8to16(str) {\n        var out, i, len, c;\n        var char2, char3;\n        out = \"\";\n        len = str.length;\n        i = 0;\n        while (i < len) {\n            c = str.charCodeAt(i++);\n            switch (c >> 4) {\n                case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n                    out += str.charAt(i - 1);\n                    break;\n                case 12: case 13:\n                    char2 = str.charCodeAt(i++);\n                    out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n                    break;\n                case 14:\n                    char2 = str.charCodeAt(i++);\n                    char3 = str.charCodeAt(i++);\n                    out += String.fromCharCode(((c & 0x0F) << 12) |\n                        ((char2 & 0x3F) << 6) |\n                        ((char3 & 0x3F) << 0));\n                    break;\n            }\n        }\n\n        console.log('out:', out)\n        return out;\n    }\n    //----------------UTF8 start---------------\n    /**\n     * utf8编码\n     * @param str \n     * @returns \n     */\n    export function utf8_encode(str: string): string {\n        if (!str || !str.replace) {\n            return;\n        }\n        str = str.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n        for (let n = 0; n < str.length; n++) {\n            let c = str.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n        return utftext;\n    }\n    /**\n     * utf8解码\n     * @param utftext \n     * @returns \n     */\n    export function utf8_decode(utftext: string) {\n        if (!utftext) {\n            return \"\"\n        }\n        utftext = String(utftext);\n\n        let str = \"\";\n        let i = 0;\n        let c = 0;\n        let c1 = c;\n        let c2 = c;\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            if (c < 128) {\n                str += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c1 = utftext.charCodeAt(i + 1);\n                str += String.fromCharCode(((c & 31) << 6) | (c1 & 63));\n                i += 2;\n            } else {\n                c1 = utftext.charCodeAt(i + 1);\n                c2 = utftext.charCodeAt(i + 2);\n                str += String.fromCharCode(((c & 15) << 12) | ((c1 & 63) << 6) | (c2 & 63));\n                i += 3;\n            }\n        }\n        return str;\n    }\n    //----------------base64 start---------------\n    /**\n     * base64 编码\n     * @param input \n     * @param isUtf8Encode \n     * @returns \n     */\n    export function base64_encode(input: string, isUtf8Encode?: boolean) {\n        if (!input) {\n            return null\n        }\n        input = String(input);\n        let output = \"\";\n        let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        let i = 0;\n        if (isUtf8Encode) {\n            input = utf8_encode(input);\n        }\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output +\n                _base64keyStr.charAt(enc1) + _base64keyStr.charAt(enc2) +\n                _base64keyStr.charAt(enc3) + _base64keyStr.charAt(enc4);\n        }\n        if (input.length > 0 && output.length < 1) {\n            return null\n        }\n        return output;\n    }\n\n    /**\n     * base64解密\n     * @param input \n     * @param isUtf8Decode \n     * @returns \n     */\n    export function base64_decode(input: string, isUtf8Decode?: boolean) {\n        if (!input) {\n            return null\n        }\n        input = String(input);\n\n        let output = \"\";\n        let outBytes = [];\n        let chr1, chr2, chr3;\n        let enc1, enc2, enc3, enc4;\n        let i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while (i < input.length) {\n            enc1 = _base64keyStr.indexOf(input.charAt(i++));\n            enc2 = _base64keyStr.indexOf(input.charAt(i++));\n            enc3 = _base64keyStr.indexOf(input.charAt(i++));\n            enc4 = _base64keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output = output + String.fromCharCode(chr1);\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n        if (isUtf8Decode) {\n            output = utf8_decode(output);\n        }\n\n        if (input.length > 0 && output.length < 1) {\n            return null\n        }\n        return output;\n    };\n    /**\n     * base64转无符号字节数组\n     * @param base64String \n     * @returns \n     */\n    export function base64ToUint8Array(base64String) {\n        let padding = '='.repeat((4 - base64String.length % 4) % 4);\n        let base64 = (base64String + padding)\n            .replace(/\\-/g, '+')\n            .replace(/_/g, '/');\n\n        let rawData = base64_decode(base64);\n        let outputArray = new Uint8Array(rawData.length);\n\n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n    /**\n     * 无符号字节数组转base64字符串\n     * @param buffer \n     * @returns \n     */\n    export function uint8ArrayToBase64(buffer) {\n        let binary = '';\n        let bytes;\n        if (buffer instanceof Uint8Array) {\n            bytes = buffer;\n        } else {\n            bytes = new Uint8Array(buffer);\n        }\n        let len = bytes.byteLength;\n        for (var i = 0; i < len; i++) {\n            binary += String.fromCharCode(bytes[i]);\n        }\n        return base64_encode(binary);\n    }\n\n    /**\n     * ArrayBuffer转字符串\n     * @param buffer 待转换的ArrayBuffer\n     * @param isSymbol 是否有符号 默认false 无符号\n     * @param isUTF 是否UTF编码 默认 false 非UTF编码\n     * @returns \n     */\n    export function arrayBufferToString(buffer: ArrayBuffer, isSymbol: boolean = false, isUTF = false): string | null {\n        if (!buffer || buffer?.byteLength == null) {\n            return null;\n        }\n        let bytes = [];\n        let byteArray;\n        let str = \"\";\n        if (isSymbol == true) {\n            byteArray = new Int8Array(buffer);\n            for (let index = 0; index < byteArray.byteLength; index++) {\n                bytes[index] = byteArray[index]\n            }\n        } else {\n            byteArray = new Uint8Array(buffer);\n            for (let index = 0; index < byteArray.byteLength; index++) {\n                bytes[index] = byteArray[index]\n            }\n        }\n        if (bytes.length > 0) {\n            str = bytesToString(bytes, isUTF);\n        }\n        return str;\n    }\n\n    /**\n     * 字符串转ArrayBuffer\n     * @param str 待转换的字符串\n     * @param isSymbol 是否有符号 默认false 无符号\n     * @param isUTF 是否UTF编码 默认 false 非UTF编码\n     * @returns ArrayBuffer\n     */\n    export function stringToArrayBuffer(str: string, isSymbol: boolean = false, isUTF = false): ArrayBuffer | null {\n        if (!str) {\n            return null;\n        }\n        str = String(str);\n        let bytes = stringToByte(str, isUTF);\n        //构建正文数据\n        let newBuffer = new ArrayBuffer(bytes.length);\n        let newDataView = new DataView(newBuffer);\n        //写正文\n        if (isSymbol == true) {\n            for (let index = 0; index < bytes.length; index++) {\n                newDataView.setInt8(index, bytes[index]);\n            }\n        } else {\n            for (let index = 0; index < bytes.length; index++) {\n                newDataView.setUint8(index, bytes[index]);\n            }\n        }\n        let arrayBuffer = newDataView.buffer.slice(0, newDataView.buffer.byteLength)\n        return arrayBuffer;\n    }\n\n    /**\n     * 字节数组转Uint8数组\n     * @param bytes 待转换的字节数组 Array<number>\n     * @param isSymbol 是否带符号 默认false不带\n     * @returns Uint8Array | Int8Array | null\n     */\n    export function bytesToUint8Array(bytes: Array<number>, isSymbol: boolean = false): Uint8Array | Int8Array | null {\n        if (!bytes || bytes.length == null) {\n            return null;\n        }\n        //构建正文数据\n        let newBuffer = new ArrayBuffer(bytes.length);\n        let newDataView = new DataView(newBuffer);\n        let array: Uint8Array | Int8Array;\n        if (isSymbol == true) {\n            for (let index = 0; index < bytes.length; index++) {\n                newDataView.setInt8(index, bytes[index]);\n            }\n            let arrayBuffer = newDataView.buffer.slice(0, newDataView.buffer.byteLength)\n            array = new Int8Array(arrayBuffer);\n        } else {\n            for (let index = 0; index < bytes.length; index++) {\n                newDataView.setUint8(index, bytes[index]);\n            }\n            let arrayBuffer = newDataView.buffer.slice(0, newDataView.buffer.byteLength)\n            array = new Uint8Array(arrayBuffer);\n        }\n        return array\n    }\n    //-------------------------------AES-----------------------------------------\n    export function createWordArray(): WordArray {\n        return utf8Parse(\"\");\n    }\n\n    /**\n     * AES 加密\n     * @param msg \n     * @param key \n     * @param iv \n     * @returns \n     */\n    export function aesEncrypt(msg: string, key: string, iv: string): string {\n        msg = String(msg);\n        key = String(key);\n        iv = String(iv);\n\n        let encrypt = CryptoJS.AES.encrypt(msg, utf8Parse(key), {\n            iv: utf8Parse(iv),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return encrypt.toString(); //base64输出的\n    }\n\n    /**\n     * AES 解密\n     * @param str \n     * @param key \n     * @param iv \n     * @returns \n     */\n    export function aesDecrypt(str: string, key: string, iv: string): string {\n        str = String(str);\n        key = String(key);\n        iv = String(iv);\n        let decrypt = CryptoJS.AES.decrypt(str, utf8Parse(key), {\n            iv: utf8Parse(iv),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return CryptoJS.enc.Utf8.stringify(decrypt);\n    }\n\n\n    /**\n     * 字符串转WordArray\n     * @param utf8Str \n     * @returns 单词集合 WordArray\n     */\n    function utf8Parse(utf8Str: any): WordArray {\n        return CryptoJS.enc.Utf8.parse(utf8Str);\n    }\n\n    //-------------------------------Json扩展-----------------------------------------\n    /**\n     * json编码,通常将一个对象或数组编码成字符串的形式,等价于 json.stringify\n     * @param value 值要转换的JavaScript值，通常是对象或数组。\n     * @param replacer 替换用于转换结果的函数。\n     * @param space 空格将缩进、空格和换行字符添加到返回值JSON文本中，以便于阅读。\n     * @returns 结果:字符串\n     */\n    export function JsonEncode(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string {\n        let res = \"\"\n        try {\n            res = JSON.stringify(value, replacer, space)\n        } catch (error) {\n            console.error(\"JsonEncode Error:\" + error)\n        }\n        return res\n    }\n    export function JsonEncode2(value: any, replacer?: (number | string)[] | null, space?: string | number): string {\n        let res = \"\"\n        try {\n            return JSON.stringify(value, replacer, space)\n        } catch (error) {\n            console.error(\"JsonEncode Error:\" + error)\n        }\n        return res\n    }\n    /**\n     * json解码，将一个json格式的字符串解码成对象的形式,等价于 json.parse\n     * @param text json字符串\n     * @param reviver \n     */\n    export function JsonDecode(text: string, reviver?: (this: any, key: string, value: any) => any): any {\n        if (!text || text == \"\") {\n            return text\n        }\n        let res = null\n        try {\n            return JSON.parse(text, reviver)\n        } catch (error) {\n            console.error(\"解析Json出错,\", text)\n            console.error(\"JsonDecode Error:\" + error)\n        }\n        return res\n    }\n\n    /**\n     * pako.js基于zlib实现的inflate解压 有 {head+扩展数据} 组成\n     * @param str \n     * @returns \n     */\n    export function UnZlibZip(str) {\n        if (!str) {\n            return null\n        }\n        let data = null\n        try {\n            // @ts-ignore\n            data = pako.inflate(str, { to: 'string' });\n        } catch (error) {\n            console.error(error)\n        }\n        return data;\n    }\n    /**\n     * pako.js基于zlib实现的deflate压缩 有 {head+扩展数据} 组成\n     * @param data 要压缩的数据 支持 Uint8Array | String\n     * @param level 默认 9 压缩等级 0~9 0表示不压缩 数字越大压缩率越高 时间越久\n     * @returns \n     */\n    export function ZlibZip(data, level?: number) {\n        if (!data) {\n            return null\n        }\n        let binaryString = null\n        try {\n            //@ts-ignore\n            binaryString = pako.deflate(data, {\n                to: 'string',\n                level: level || 9\n            });\n        } catch (error) {\n            console.error(error)\n        }\n        return binaryString;\n    }\n\n    /**\n     * pako.js基于zlib实现的inflateRaw解压 无格式头\n     * @param str \n     * @returns \n     */\n    export function UnZlibZipRaw(str) {\n        if (!str) {\n            return null\n        }\n        let data = null\n        try {\n            // @ts-ignore\n            data = pako.inflateRaw(str, { to: 'string' });\n        } catch (error) {\n            console.error(error)\n        }\n        return data;\n    }\n    /**\n     * pako.js基于zlib实现的deflateRaw压缩 无格式头\n     * @param data 要压缩的数据 支持 Uint8Array | String\n     * @param level 默认 9 压缩等级 0~9 0表示不压缩 数字越大压缩率越高 时间越久\n     * @returns \n     */\n    export function ZlibZipRaw(data, level?: number) {\n        if (!data) {\n            return null\n        }\n        let binaryString = null\n        try {\n            //@ts-ignore\n            binaryString = pako.deflateRaw(data, {\n                to: 'string',\n                level: level || 9\n            });\n        } catch (error) {\n            console.error(error)\n        }\n        return binaryString;\n    }\n\n    /**\n     * pako.js基于zlib实现的unzip解压\n     * @param str \n     * @returns \n     */\n    export function UnGZip(str) {\n        if (!str) {\n            return null\n        }\n        let data = null\n        try {\n            // @ts-ignore\n            data = pako.ungzip(str, { to: 'string' });\n        } catch (error) {\n            console.error(error)\n        }\n        return data;\n    }\n    /**\n     * pako.js基于zlib实现的gzip压缩  有 {head+扩展数据} 组成\n     * 用gzip压缩的内容,infalte和ungzip都是可以解压的，因为解压的内容只包含数据\n     * @param data 要压缩的数据 支持 Uint8Array | String\n     * @param level 默认 9 压缩等级 0~9 0表示不压缩 数字越大压缩率越高 时间越久\n     * @returns \n     */\n    export function GZip(data, level?: number) {\n        if (!data) {\n            return null\n        }\n        let binaryString = null\n        try {\n            //@ts-ignore\n            binaryString = pako.gzip(data, {\n                gzip: true,\n                to: 'string',\n                level: level || 9\n            });\n        } catch (error) {\n            console.error(error)\n        }\n        return binaryString;\n    }\n\n    export function consoleStr(data) {\n        let startIndex = 0\n        let endIndex = data.byteLength\n        let code = [] // Unicode编码字符\n        for (let index = startIndex; index < endIndex; index++) {\n            code.push(data[index])\n        }\n        // UTF.Decode_UTF8(()=>{\n        //     if(startIndex < endIndex){\n        //         return data[startIndex++]\n        //     }else{\n        //         return null  // 返回null时会退出此转换函数\n        //     }\n        // },(resCode)=>{\n        //     code.push(resCode)\n        // });\n        // UTF.Decode_UTF8_to_UTF16(function () {\n        //     console.log(`startIndex:${startIndex}  endIndex:${endIndex}`)\n        //     if(startIndex < endIndex){\n        //         return data[startIndex++]\n        //     }else{\n        //         return null  // 返回null时会退出此转换函数\n        //     }\n        // }, (char) => {\n        //     if(char){\n        //         code.push(char);\n        //     }else{\n        //         // console.log(\"空数据==>\")\n        //     }\n        // })\n        let strData: string = code.reduce((prev, next) => {\n            return prev + String.fromCharCode(next);\n        }, '');\n        console.log(\"输出字符串>>>\")\n        console.log(utf8_decode(strData))\n        return strData\n    }\n\n\n    /**\n     * buffer加密\n     * @param headLen \n     * @param maxBufferSize \n     * @param dataView \n     * @param isLittle \n     * @returns DataView | null\n     */\n    export function encodeBuffer(headLen: number, maxBufferSize: number, dataView: DataView, isLittle: boolean = false): DataView | null {\n        // console.log(\"加密前==>\")\n        // Utils.dump(dataView)\n        if (!dataView) {\n            return null\n        }\n        if (dataView.getUint8(14) != 0) { //已加密\n            console.log(\"已加密 无需加密\")\n            return dataView\n        }\n        //头部中定义的长度\n        let nSize = dataView.getInt32(0, isLittle)  //0~3 正文数据长度\n        // console.log(`头部中定义的长度 ${nSize} 总长度 ${dataView.byteLength} 长度 ${dataView.buffer.byteLength}`)\n        //求得整个正文长度（不含包头）\n        let wDataSize = nSize + 4 - headLen\n        if (wDataSize < 0 || wDataSize > maxBufferSize) {\n            console.log(`EncryptBuffer Error：length error!!! wDataSize Size:${wDataSize} max Size:${maxBufferSize}`)\n            return null\n        } else if (wDataSize == 0) {\n            return dataView\n        }\n        let cbCheckCode = new Uint8Array(1);\n        //头buffer\n        let headBuffer = dataView.buffer.slice(0, headLen)\n        let hBuffer = new Uint8Array(headBuffer)\n        //正文Buffer\n        let commondBuffer = dataView.buffer.slice(headLen, dataView.buffer.byteLength)\n        let uBuffer = new Uint8Array(commondBuffer)\n\n        wDataSize = uBuffer.byteLength\n        for (let index = 0; index < wDataSize; index++) {\n            // console.log(`加密过程 之前: code = ${cbCheckCode[0]}  value = ${uBuffer[index]}`)\n\n            cbCheckCode[0] += uBuffer[index]     // 校验码求和  从正文数据开始 不含包头\n            uBuffer[index] = _sendByteList[uBuffer[index]]\n            // console.log(`加密过程  之后: code = ${cbCheckCode[0]}  value = ${uBuffer[index]}`)\n        }\n        //合并\n        let newB = new Int8Array(hBuffer.byteLength + uBuffer.byteLength)\n        for (let index = 0; index < newB.length; index++) {\n            if (index < hBuffer.byteLength) {\n                newB[index] = hBuffer[index]\n            } else {\n                newB[index] = uBuffer[index - hBuffer.byteLength]\n            }\n        }\n        let _newBuffer = newB.buffer.slice(0, newB.byteLength)\n        let newDataView = new DataView(_newBuffer)\n        //设置加密标识\n        newDataView.setUint8(14, ~cbCheckCode[0] + 1) // 取反加一\n        // console.log(\"加密后==>\")\n        // Utils.dump(newDataView)\n        return newDataView\n    }\n    /** buffer解密\n     * @param headLen \n     * @param maxBufferSize \n     * @param dataView \n     * @param isLittle \n     * @returns DataView | null\n     */\n    export function decodeBuffer(headLen: number, maxBufferSize: number, dataView: DataView, isLittle: boolean = false): DataView | null {\n        if (!dataView) {\n            return null\n        }\n        // if (dataView.getUint8(14) == 0) { //未加密\n        //     console.log(\"已解密 无需解密\", dataView);\n        //     // alert(\"已解密 无需解密===>\" + dataView)\n        //     return dataView\n        // }\n        //头部中定义的长度\n        let nSize = dataView.getInt32(0, isLittle)  //0~3 正文数据长度\n\n        //求得整个正文长度（不含包头）\n        let wDataSize = nSize + 4 - headLen\n        if (wDataSize < 0 || wDataSize > maxBufferSize) {\n            console.log(`DecryptBuffer Error：length error!!! wDataSize Size:${wDataSize} max Size:${maxBufferSize}`)\n            return null\n        } else if (wDataSize == 0) {\n            //设置解密标识\n            dataView.setUint8(14, 0) // 解密成功标识\n            return dataView\n        }\n        //效验码与字节映射\n        let cbCheckCode = new Uint8Array(1);\n        cbCheckCode[0] = dataView.getUint8(14);\n\n        let headBuffer = dataView.buffer.slice(0, headLen)\n        let hBuffer = new Uint8Array(headBuffer)\n        let newBuffer = dataView.buffer.slice(headLen, dataView.buffer.byteLength)\n        let uBuffer = new Uint8Array(newBuffer)\n\n        wDataSize = uBuffer.byteLength\n\n        for (let index = 0; index < wDataSize; index++) {\n            // console.log(`解密过程 之前: code = ${cbCheckCode[0]}  value = ${uBuffer[index]}`)\n\n            uBuffer[index] = _receiveByteList[uBuffer[index]]  //还原字节映射 解密\n            cbCheckCode[0] += uBuffer[index]                   //校验码求和,从正文数据开始 不含包头\n\n            // console.log(`解密过程 之后: code = ${cbCheckCode[0]}  value = ${uBuffer[index]}`)\n        }\n        if (cbCheckCode[0] != 0)   // 不等于0则校验失败\n        {\n            console.log(\"校验失败===>\" + cbCheckCode[0])\n            return null;\n        }\n        //合并Map\n        let newB = new Int8Array(hBuffer.byteLength + uBuffer.byteLength)\n        for (let index = 0; index < newB.length; index++) {\n            if (index < hBuffer.byteLength) {\n                newB[index] = hBuffer[index]\n            } else {\n                newB[index] = uBuffer[index - hBuffer.byteLength]\n            }\n        }\n        let _newBuffer = newB.buffer.slice(0, newB.byteLength)\n        let newDataView = new DataView(_newBuffer)\n\n        //设置解密标识\n        newDataView.setUint8(14, 0) // 解密成功标识\n\n        return newDataView\n    }\n\n}\n\n"]}