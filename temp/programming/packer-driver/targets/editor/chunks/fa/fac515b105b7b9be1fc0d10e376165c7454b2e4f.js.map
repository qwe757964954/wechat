{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/GameDeskPrefabCtr.ts"],"names":["Node","_decorator","EventManager","Utils","BaseComponent","PlayerMgr","RoomMgr","OPCode","FXJController","FXJEvent","FXJSound","GameEvent","GameViewConfig","NodeClockCtr","NodeDiceCtr","NodeHandCardCtr","NodeHuCardCtr","NodeMeldCardCtr","NodeOutCardCtr","NodeWallCtr","ccclass","property","menu","GameDeskPrefabCtr","tooltip","type","constructor","_gangCount","_soundConfig","console","log","init","getInstance","GameDeskCtr","onInitModuleEvent","addModelListener","VIEW_BROADCAST_GAME_START","onGameStart","VIEW_BROADCAST_ZHI_TOU","onRollDices","VIEW_BROADCAST_DEAL_CARD","onDealCard","VIEW_BROADCAST_OPERATION_START","onOperationStart","VIEW_USER_OPERATION","onOperationSelect","UPDATE_USER_OPERATION_RESULT","onOperationResult","VIEW_BROADCAST_GRAB_CARD","onTakeCard","VIEW_BROADCAST_GAME_OVER","onGameOver","onLoad","initData","initView","start","updateView","resetView","OnChangedSeat","hostDir","nodeWall","nodeHandCard","nodeOutCard","nodeMeldCard","nodeHuCard","nodeClock","mySeatId","node","setRotationFromEuler","nodeDesk","dataAnim","seatId","aniType","AnimType","GameStart","dispatch","VIEW_OUT_CARD_ANI_PLAY","event","data","isNull","table_isEmpty","diceInfo","bankerSeatId","diceList","dices","length","i","dice","nodeDice","cards","opCode","OPE_OUT_CARD","onOutCard","OPE_RIGHT_CHI","OPE_MIDDLE_CHI","OPE_LEFT_CHI","OPE_PENG","OPE_QIANG_PENG","onPengGang","OPE_AN_GANG","OPE_GANG","OPE_BU_GANG","OPE_HU","OPE_ZI_MO","onHu","OPE_DIAO","playEffect","roleName","player","findPlayerWithSeatId","isNotNull","sex","number_valueOf","gameUserInfo","cardValue","opCard","cardType","path","string_format","GameDiscard","SYS_PLAY_EFFECT","bundle","GameChi","GamePeng","GameGang","GameHu","GameZiMo","dataTakeCard","gangCount","remian","remainCardNum","cardSeatId","handCards","onReconnect","onDestroy","args"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AACNC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,S,kBAAAA,S;;AACAC,MAAAA,c,kBAAAA,c;;AAEAC,MAAAA,Y,kBAAAA,Y;;AACAC,MAAAA,W,kBAAAA,W;;AACAC,MAAAA,e,kBAAAA,e;;AACAC,MAAAA,a,kBAAAA,a;;AACAC,MAAAA,e,kBAAAA,e;;AACAC,MAAAA,c,kBAAAA,c;;AACAC,MAAAA,W,kBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA8BrB,U;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;mCAKasB,iB,WAHZH,OAAO,CAAC,mBAAD,C,UAEPE,IAAI,CAAC,+BAAD,C,UAGAD,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI,EAAEzB;AAAzB,OAAD,C,UAIRqB,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI;AAAA;AAAA;AAAvB,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI;AAAA;AAAA;AAAvB,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI;AAAA;AAAA;AAAvB,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,IAAI;AAAA;AAAA;AAAxB,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI;AAAA;AAAA;AAAvB,OAAD,C,UAIRJ,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI;AAAA;AAAA;AAAvB,OAAD,C,WAIRJ,QAAQ,CAAC;AAAEG,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,IAAI;AAAA;AAAA;AAAvB,OAAD,C,0CAjCb,MAGaF,iBAHb;AAAA;AAAA,0CAGqD;AACjD;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;;AAGA;AAGAG,QAAAA,WAAW,GAAG;AACV;;AADU;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eALNC,UAKM,GALe,CAKf;AAAA,eAFNC,YAEM,GAFS,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,MAAxB,EAAgC,MAAhC,CAET;AAEVC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,eAAKC,IAAL;AACH,SA3CgD,CA6CjD;;;AACAA,QAAAA,IAAI,GAAG;AACH;AAAA;AAAA,8CAAcC,WAAd,GAA4BC,WAA5B,GAA0C,IAA1C;AACH;AAED;;;AACUC,QAAAA,iBAAiB,GAAG;AAC1B;AACA,eAAKC,gBAAL,CAAsB;AAAA;AAAA,sCAAUC,yBAAhC,EAA2D,KAAKC,WAAhE,EAF0B,CAG1B;;AACA,eAAKF,gBAAL,CAAsB;AAAA;AAAA,sCAAUG,sBAAhC,EAAwD,KAAKC,WAA7D,EAJ0B,CAK1B;;AACA,eAAKJ,gBAAL,CAAsB;AAAA;AAAA,sCAAUK,wBAAhC,EAA0D,KAAKC,UAA/D,EAN0B,CAO1B;;AACA,eAAKN,gBAAL,CAAsB;AAAA;AAAA,sCAAUO,8BAAhC,EAAgE,KAAKC,gBAArE,EAR0B,CAS1B;;AACA,eAAKR,gBAAL,CAAsB;AAAA;AAAA,sCAAUS,mBAAhC,EAAqD,KAAKC,iBAA1D,EAV0B,CAW1B;;AACA,eAAKV,gBAAL,CAAsB;AAAA;AAAA,sCAAUW,4BAAhC,EAA8D,KAAKC,iBAAnE,EAZ0B,CAa1B;;AACA,eAAKZ,gBAAL,CAAsB;AAAA;AAAA,sCAAUa,wBAAhC,EAA0D,KAAKC,UAA/D,EAd0B,CAe1B;;AACA,eAAKd,gBAAL,CAAsB;AAAA;AAAA,sCAAUe,wBAAhC,EAA0D,KAAKC,UAA/D,EAhB0B,CAkB1B;AAEH;;AAEDC,QAAAA,MAAM,GAAG;AACL,eAAKC,QAAL;AACA,eAAKC,QAAL;AACH;;AAGDC,QAAAA,KAAK,GAAG,CAEP;;AAED;AACAF,QAAAA,QAAQ,GAAG,CAEV;;AAED;AACAC,QAAAA,QAAQ,GAAG,CAEV;;AAED;AACAE,QAAAA,UAAU,GAAG,CAEZ;;AAED;AACAC,QAAAA,SAAS,GAAG;AACR,eAAK9B,UAAL,GAAkB,CAAlB;AACH;AAED;;;AACA+B,QAAAA,aAAa,CAACC,OAAD,EAAkB;AAC3B,eAAKC,QAAL,CAAcF,aAAd,CAA4BC,OAA5B;AACA,eAAKE,YAAL,CAAkBH,aAAlB,CAAgCC,OAAhC;AACA,eAAKG,WAAL,CAAiBJ,aAAjB,CAA+BC,OAA/B;AACA,eAAKI,YAAL,CAAkBL,aAAlB,CAAgCC,OAAhC;AACA,eAAKK,UAAL,CAAgBN,aAAhB,CAA8BC,OAA9B;AACA,eAAKM,SAAL,CAAeP,aAAf,CAA6BC,OAA7B;AACH,SA/GgD,CAiHjD;;AACA;;;AACAtB,QAAAA,WAAW,GAAG;AACV,eAAKP,GAAL,CAAS,+BAAT,EADU,CAEV;;AACA,cAAI6B,OAAO,GAAG;AAAA;AAAA,kCAAQ3B,WAAR,GAAsBkC,QAAtB,GAAiC,CAA/C;AACA,eAAKC,IAAL,CAAUC,oBAAV,CAA+B,CAA/B,EAAkC,CAAC,EAAD,GAAMT,OAAxC,EAAiD,CAAjD;AACA,eAAKU,QAAL,CAAcD,oBAAd,CAAmC,CAAnC,EAAsC,KAAKT,OAA3C,EAAoD,CAApD,EALU,CAK8C;;AACxD,eAAKF,SAAL;AAEA,eAAKG,QAAL,CAAcvB,WAAd;AACA,eAAKwB,YAAL,CAAkBxB,WAAlB;AACA,eAAKyB,WAAL,CAAiBzB,WAAjB;AACA,eAAK0B,YAAL,CAAkB1B,WAAlB;AACA,eAAK2B,UAAL,CAAgB3B,WAAhB;AACA,eAAK4B,SAAL,CAAe5B,WAAf;AAEA,cAAIiC,QAAmC,GAAG;AACtCC,YAAAA,MAAM,EAAG;AAAA;AAAA,oCAAQvC,WAAR,GAAsBkC,QADO;AAEtCM,YAAAA,OAAO,EAAG;AAAA;AAAA,kDAAeC,QAAf,CAAwBC;AAFI,WAA1C;AAIA;AAAA;AAAA,4CAAaC,QAAb,CAAsB;AAAA;AAAA,oCAASC,sBAA/B,EAAuDN,QAAvD;AACH;AAED;;;AACA/B,QAAAA,WAAW,CAACsC,KAAD,EAAQC,IAAR,EAA8B;AACrC,eAAKhD,GAAL,CAAS,+BAAT,EAA0CgD,IAA1C;;AAEA,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAME,aAAN,CAAoBF,IAAI,CAACG,QAAzB,CAA1B,EAA8D;AAC1D,iBAAKnD,GAAL,CAAS,+BAAT,EAA0C,MAA1C,EAAkDgD,IAAlD;AACA;AACH;;AAED,cAAII,YAAY,GAAGJ,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBV,MAApC;AACA,cAAIY,QAAQ,GAAGL,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBG,KAAhC;;AAEA,cAAI;AAAA;AAAA,8BAAML,MAAN,CAAaG,YAAb,KAA8BA,YAAY,GAAG,CAA7C,IAAkDA,YAAY,GAAG,CAArE,EAAwE;AACpE,iBAAKpD,GAAL,CAAS,+BAAT,EAA0C,QAA1C,EAAoDoD,YAApD;AACA;AACH;;AAED,cAAI;AAAA;AAAA,8BAAMF,aAAN,CAAoBG,QAApB,KAAiCA,QAAQ,CAACE,MAAT,IAAmB,CAAxD,EAA2D;AACvD,iBAAKvD,GAAL,CAAS,+BAAT,EAA0C,QAA1C,EAAoDqD,QAApD;AACA;AACH;;AAED,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACE,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;AACtC,gBAAIC,IAAI,GAAGJ,QAAQ,CAACG,CAAD,CAAnB;;AACA,gBAAIC,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,CAAvB,EAA0B;AACtB,mBAAKzD,GAAL,CAAS,+BAAT,EAA0C,QAA1C,EAAoDqD,QAApD;AACA;AACH;AACJ;;AAED,eAAKvB,QAAL,CAAcrB,WAAd,CAA0BuC,IAA1B;AACA,eAAKU,QAAL,CAAcjD,WAAd,CAA0BuC,IAA1B;AACH;AAED;;;AACArC,QAAAA,UAAU,CAACoC,KAAD,EAAQC,IAAR,EAA8B;AACpC,eAAKhD,GAAL,CAAS,8BAAT,EAAyCgD,IAAzC;;AACA,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAME,aAAN,CAAoBF,IAAI,CAACW,KAAzB,CAA1B,EAA2D;AACvD,iBAAK3D,GAAL,CAAS,8BAAT,EAAyC,QAAzC;AACA;AACH;;AAED,eAAK8B,QAAL,CAAcnB,UAAd,CAAyBqC,IAAzB;AACA,eAAKjB,YAAL,CAAkBpB,UAAlB,CAA6BqC,IAA7B;AACH;AAED;;;AACAnC,QAAAA,gBAAgB,CAACkC,KAAD,EAAQC,IAAR,EAA+B;AAC3C,eAAKhD,GAAL,CAAS,oCAAT,EAA+CgD,IAA/C;AAEA,eAAKb,SAAL,CAAetB,gBAAf,CAAgCmC,IAAhC;AACA,eAAKU,QAAL,CAAc7C,gBAAd,CAA+BmC,IAA/B;AACH;AAED;;;AACAjC,QAAAA,iBAAiB,CAACgC,KAAD,EAAQC,IAAR,EAA+B;AAC5C,eAAKhD,GAAL,CAAS,qCAAT,EAAgDgD,IAAhD;AAEA,eAAKb,SAAL,CAAepB,iBAAf,CAAiCiC,IAAjC;AACH;AAED;;;AACA/B,QAAAA,iBAAiB,CAAC8B,KAAD,EAAQC,IAAR,EAAqC;AAClD,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAI,CAACP,MAAlB,CAAtB,IAAmD;AAAA;AAAA,8BAAMQ,MAAN,CAAaD,IAAI,CAACY,MAAlB,CAAvD,EAAkF;AAC9E,iBAAK5D,GAAL,CAAS,qCAAT,EAAgD,MAAhD,EAAwDgD,IAAxD;AACA;AACH;;AAGD,kBAAQA,IAAI,CAACY,MAAb;AACI,iBAAK;AAAA;AAAA,kCAAOC,YAAZ;AAA0B;AACtB,mBAAKC,SAAL,CAAef,KAAf,EAAsBC,IAAtB;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOe,aAAZ,CAJJ,CAI+B;;AAC3B,iBAAK;AAAA;AAAA,kCAAOC,cAAZ,CALJ,CAKgC;;AAC5B,iBAAK;AAAA;AAAA,kCAAOC,YAAZ,CANJ,CAM8B;;AAC1B,iBAAK;AAAA;AAAA,kCAAOC,QAAZ,CAPJ,CAO0B;;AACtB,iBAAK;AAAA;AAAA,kCAAOC,cAAZ;AAA4B;AACxB,mBAAKC,UAAL,CAAgBrB,KAAhB,EAAuBC,IAAvB;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOqB,WAAZ,CAXJ,CAW6B;;AACzB,iBAAK;AAAA;AAAA,kCAAOC,QAAZ,CAZJ,CAY0B;;AACtB,iBAAK;AAAA;AAAA,kCAAOC,WAAZ;AAAyB;AACrB,mBAAKH,UAAL,CAAgBrB,KAAhB,EAAuBC,IAAvB;AACA,mBAAKnD,UAAL;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAO2E,MAAZ,CAjBJ,CAiBwB;;AACpB,iBAAK;AAAA;AAAA,kCAAOC,SAAZ;AAAuB;AACnB,mBAAKC,IAAL,CAAU3B,KAAV,EAAiBC,IAAjB;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAO2B,QAAZ;AAAqB;AACjB;;AACJ;AACI;AAxBR;;AA2BA,eAAKC,UAAL,CAAgB7B,KAAhB,EAAuBC,IAAvB;AACH;;AAEO4B,QAAAA,UAAU,CAAC7B,KAAD,EAAQC,IAAR,EAAqC;AACnD,cAAI6B,QAAQ,GAAG,QAAf;AACA,cAAIC,MAAM,GAAG;AAAA;AAAA,sCAAU5E,WAAV,GAAwB6E,oBAAxB,CAA6C/B,IAAI,CAACP,MAAlD,CAAb;;AACA,cAAI;AAAA;AAAA,8BAAMuC,SAAN,CAAgBF,MAAhB,CAAJ,EAA6B;AACzB,gBAAIG,GAAG,GAAG;AAAA;AAAA,gCAAMC,cAAN,CAAqBJ,MAAM,CAACK,YAAP,CAAoBF,GAAzC,CAAV;;AACA,gBAAIA,GAAG,IAAI,CAAX,EAAc;AACVJ,cAAAA,QAAQ,GAAG,QAAX;AACH;AACJ;;AAED,kBAAQ7B,IAAI,CAACY,MAAb;AACI,iBAAK;AAAA;AAAA,kCAAOC,YAAZ;AAA0B;AACtB,kBAAIuB,SAAS,GAAGpC,IAAI,CAACqC,MAAL,IAAe,CAAf,GAAmB,IAAnC;AACA,kBAAIC,QAAQ,GAAGtC,IAAI,CAACqC,MAAL,IAAe,EAA9B;;AACA,kBAAI;AAAA;AAAA,kCAAML,SAAN,CAAgB,KAAKlF,YAAL,CAAkBwF,QAAlB,CAAhB,CAAJ,EAAkD;AAC9C,oBAAIC,IAAI,GAAG;AAAA;AAAA,oCAAMC,aAAN,CAAoB;AAAA;AAAA,0CAASC,WAAT,CAAqBF,IAAzC,EAA+CV,QAA/C,EAAyD,KAAK/E,YAAL,CAAkBwF,QAAlB,CAAzD,EAAsFF,SAAtF,CAAX;AACA;AAAA;AAAA,kDAAavC,QAAb,CAAsB;AAAA;AAAA,0CAAS6C,eAA/B,EAAgD;AAACC,kBAAAA,MAAM,EAAE;AAAA;AAAA,4CAASF,WAAT,CAAqBE,MAA9B;AAAsCJ,kBAAAA,IAAI,EAAEA;AAA5C,iBAAhD;AACH;;AACD;;AACJ,iBAAK;AAAA;AAAA,kCAAOxB,aAAZ,CATJ,CAS+B;;AAC3B,iBAAK;AAAA;AAAA,kCAAOC,cAAZ,CAVJ,CAUgC;;AAC5B,iBAAK;AAAA;AAAA,kCAAOC,YAAZ;AAA0B;AACtB;AAAA;AAAA,gDAAapB,QAAb,CAAsB;AAAA;AAAA,wCAAS6C,eAA/B,EAAgD;AAACC,gBAAAA,MAAM,EAAE;AAAA;AAAA,0CAASC,OAAT,CAAiBD,MAA1B;AAAkCJ,gBAAAA,IAAI,EAAE;AAAA;AAAA,oCAAMC,aAAN,CAAoB;AAAA;AAAA,0CAASI,OAAT,CAAiBL,IAArC,EAA2CV,QAA3C;AAAxC,eAAhD;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOX,QAAZ,CAdJ,CAc0B;;AACtB,iBAAK;AAAA;AAAA,kCAAOC,cAAZ;AAA4B;AACxB;AAAA;AAAA,gDAAatB,QAAb,CAAsB;AAAA;AAAA,wCAAS6C,eAA/B,EAAgD;AAACC,gBAAAA,MAAM,EAAE;AAAA;AAAA,0CAASE,QAAT,CAAkBF,MAA3B;AAAmCJ,gBAAAA,IAAI,EAAE;AAAA;AAAA,oCAAMC,aAAN,CAAoB;AAAA;AAAA,0CAASK,QAAT,CAAkBN,IAAtC,EAA4CV,QAA5C;AAAzC,eAAhD;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOR,WAAZ,CAlBJ,CAkB6B;;AACzB,iBAAK;AAAA;AAAA,kCAAOC,QAAZ,CAnBJ,CAmB0B;;AACtB,iBAAK;AAAA;AAAA,kCAAOC,WAAZ;AAAyB;AACrB;AAAA;AAAA,gDAAa1B,QAAb,CAAsB;AAAA;AAAA,wCAAS6C,eAA/B,EAAgD;AAACC,gBAAAA,MAAM,EAAE;AAAA;AAAA,0CAASG,QAAT,CAAkBH,MAA3B;AAAmCJ,gBAAAA,IAAI,EAAE;AAAA;AAAA,oCAAMC,aAAN,CAAoB;AAAA;AAAA,0CAASM,QAAT,CAAkBP,IAAtC,EAA4CV,QAA5C;AAAzC,eAAhD;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOL,MAAZ;AAAoB;AAChB;AAAA;AAAA,gDAAa3B,QAAb,CAAsB;AAAA;AAAA,wCAAS6C,eAA/B,EAAgD;AAACC,gBAAAA,MAAM,EAAE;AAAA;AAAA,0CAASI,MAAT,CAAgBJ,MAAzB;AAAiCJ,gBAAAA,IAAI,EAAE;AAAA;AAAA,oCAAMC,aAAN,CAAoB;AAAA;AAAA,0CAASO,MAAT,CAAgBR,IAApC,EAA0CV,QAA1C;AAAvC,eAAhD;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOJ,SAAZ;AAAuB;AACnB;AAAA;AAAA,gDAAa5B,QAAb,CAAsB;AAAA;AAAA,wCAAS6C,eAA/B,EAAgD;AAACC,gBAAAA,MAAM,EAAE;AAAA;AAAA,0CAASK,QAAT,CAAkBL,MAA3B;AAAmCJ,gBAAAA,IAAI,EAAE;AAAA;AAAA,oCAAMC,aAAN,CAAoB;AAAA;AAAA,0CAASQ,QAAT,CAAkBT,IAAtC,EAA4CV,QAA5C;AAAzC,eAAhD;AACA;;AACJ,iBAAK;AAAA;AAAA,kCAAOF,QAAZ;AAAqB;AACjB;;AACJ;AACI;AAhCR;AAkCH;AAED;;;AACAxD,QAAAA,UAAU,CAAC4B,KAAD,EAAQC,IAAR,EAA8B;AAEpC,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,CAAJ,EAAwB;AACpB,iBAAKhD,GAAL,CAAS,8BAAT,EAAyC,QAAzC;AACA;AACH;;AAED,cAAIiG,YAAY,GAAG;AACfxD,YAAAA,MAAM,EAAEO,IAAI,CAACP,MADE;AAEfyD,YAAAA,SAAS,EAAE,KAAKrG,UAFD;AAGfsG,YAAAA,MAAM,EAAEnD,IAAI,CAACoD;AAHE,WAAnB;AAKA,eAAKpG,GAAL,CAAS,8BAAT,EAAyCiG,YAAzC;AACA,eAAKnE,QAAL,CAAcX,UAAd,CAAyB8E,YAAzB;AACA,eAAKlE,YAAL,CAAkBZ,UAAlB,CAA6B8E,YAA7B;AACA,eAAK9D,SAAL,CAAehB,UAAf,CAA0B8E,YAA1B;AACH,SA3SgD,CA6SjD;;AACA;;;AACAnC,QAAAA,SAAS,CAACf,KAAD,EAAQC,IAAR,EAAqC;AAC1C,eAAKhD,GAAL,CAAS,6BAAT,EAAwCgD,IAAxC;;AACA,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAI,CAACP,MAAlB,CAAtB,IAAmD;AAAA;AAAA,8BAAMQ,MAAN,CAAaD,IAAI,CAACqC,MAAlB,CAAvD,EAAkF;AAC9E,iBAAKrF,GAAL,CAAS,6BAAT,EAAwC,QAAxC;AACA;AACH;;AAED,eAAKgC,WAAL,CAAiB8B,SAAjB,CAA2Bd,IAA3B;AACA,eAAKjB,YAAL,CAAkB+B,SAAlB,CAA4Bd,IAA5B;AACH;AAED;;;AACAoB,QAAAA,UAAU,CAACrB,KAAD,EAAQC,IAAR,EAAqC;AAC3C,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAI,CAACP,MAAlB,CAAtB,IAAmD;AAAA;AAAA,8BAAMQ,MAAN,CAAaD,IAAI,CAACqD,UAAlB,CAAnD,IAAoF;AAAA;AAAA,8BAAMpD,MAAN,CAAaD,IAAI,CAACqC,MAAlB,CAAxF,EAAmH;AAC/G,iBAAKrF,GAAL,CAAS,8BAAT,EAAyC,QAAzC;AACA;AACH;;AAED,cAAIgD,IAAI,CAACqD,UAAL,IAAmB,CAAvB,EAA0B;AACtB,iBAAKrG,GAAL,CAAS,8BAAT,EAAyC,OAAzC;AACA;AACH;;AAED,eAAKA,GAAL,CAAS,8BAAT,EAAyCgD,IAAzC;AAEA,eAAKhB,WAAL,CAAiBoC,UAAjB,CAA4BpB,IAA5B;AACA,eAAKjB,YAAL,CAAkBqC,UAAlB,CAA6BpB,IAA7B;AACA,eAAKf,YAAL,CAAkBmC,UAAlB,CAA6BpB,IAA7B;AACH;AAED;;;AACA0B,QAAAA,IAAI,CAAC3B,KAAD,EAAQC,IAAR,EAAqC;AACrC,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAI,CAACP,MAAlB,CAAtB,IAAmD;AAAA;AAAA,8BAAMQ,MAAN,CAAaD,IAAI,CAACqD,UAAlB,CAAnD,IAAoF;AAAA;AAAA,8BAAMpD,MAAN,CAAaD,IAAI,CAACqC,MAAlB,CAAxF,EAAmH;AAC/G,iBAAKrF,GAAL,CAAS,wBAAT,EAAmC,QAAnC;AACA;AACH;;AAED,cAAIgD,IAAI,CAACqD,UAAL,IAAmB,CAAvB,EAA0B;AACtB,iBAAKrG,GAAL,CAAS,wBAAT,EAAmC,OAAnC;AACA;AACH;;AAED,eAAKA,GAAL,CAAS,wBAAT,EAAmCgD,IAAnC;AAEA,eAAKhB,WAAL,CAAiB0C,IAAjB,CAAsB1B,IAAtB;AACA,eAAKjB,YAAL,CAAkB2C,IAAlB,CAAuB1B,IAAvB;AACA,eAAKd,UAAL,CAAgBwC,IAAhB,CAAqB1B,IAArB;AACH;AAED;;;AACA3B,QAAAA,UAAU,CAAC0B,KAAD,EAAQC,IAAR,EAA+B;AACrC,eAAKhD,GAAL,CAAS,8BAAT,EAAyCgD,IAAzC;;AACA,cAAI;AAAA;AAAA,8BAAMC,MAAN,CAAaD,IAAb,KAAsB;AAAA;AAAA,8BAAME,aAAN,CAAoBF,IAAI,CAACsD,SAAzB,CAA1B,EAA+D;AAC3D,iBAAKtG,GAAL,CAAS,8BAAT,EAAyC,QAAzC;AACA;AACH;;AAED,eAAK8B,QAAL,CAAcT,UAAd,CAAyB2B,IAAzB;AACA,eAAKjB,YAAL,CAAkBV,UAAlB,CAA6B2B,IAA7B;AACA,eAAKhB,WAAL,CAAiBX,UAAjB,CAA4B2B,IAA5B;AACA,eAAKf,YAAL,CAAkBZ,UAAlB,CAA6B2B,IAA7B;AACA,eAAKd,UAAL,CAAgBb,UAAhB,CAA2B2B,IAA3B;AACA,eAAKb,SAAL,CAAed,UAAf,CAA0B2B,IAA1B;AAEA,cAAIR,QAAmC,GAAG;AACtCC,YAAAA,MAAM,EAAG;AAAA;AAAA,oCAAQvC,WAAR,GAAsBkC,QADO;AAEtCM,YAAAA,OAAO,EAAG;AAAA;AAAA,kDAAeC,QAAf,CAAwBC;AAFI,WAA1C;AAIA;AAAA;AAAA,4CAAaC,QAAb,CAAsB;AAAA;AAAA,oCAASC,sBAA/B,EAAuDN,QAAvD;AACH,SApXgD,CAuXjD;;AAEA;;;AACA+D,QAAAA,WAAW,GAAG;AACV,eAAKzE,QAAL,CAAcyE,WAAd;AACA,eAAKxE,YAAL,CAAkBwE,WAAlB;AACA,eAAKvE,WAAL,CAAiBuE,WAAjB;AACA,eAAKtE,YAAL,CAAkBsE,WAAlB;AACA,eAAKrE,UAAL,CAAgBqE,WAAhB;AACA,eAAKpE,SAAL,CAAeoE,WAAf;AACH,SAjYgD,CAmYjD;;;AACAC,QAAAA,SAAS,GAAG,CAEX;;AAEDxG,QAAAA,GAAG,CAAC,GAAGyG,IAAJ,EAAiB;AAChB1G,UAAAA,OAAO,CAACC,GAAR,CAAYyG,IAAZ;AACN;;AA1YmD,O;;;;;iBAGxB,I;;;;;;;iBAIO,I;;;;;;;iBAIM,I;;;;;;;iBAIE,I;;;;;;;iBAIA,I;;;;;;;iBAIJ,I;;;;;;;iBAIF,I;;;;;;;iBAIF,I","sourcesContent":["\nimport { Node, _decorator } from 'cc';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { Utils } from '../../../framework/Utils';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { PlayerMgr } from '../cache/PlayerMgr';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { OPCode } from '../common/FXJConfig';\nimport { FXJController } from '../common/FXJController';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { FXJSound } from '../common/FXJSound';\nimport { GameEvent } from '../common/GameEvent';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { NodeClockCtr } from './NodeClockCtr';\nimport { NodeDiceCtr } from './NodeDiceCtr';\nimport { NodeHandCardCtr } from './NodeHandCardCtr';\nimport { NodeHuCardCtr } from './NodeHuCardCtr';\nimport { NodeMeldCardCtr } from './NodeMeldCardCtr';\nimport { NodeOutCardCtr } from './NodeOutCardCtr';\nimport { NodeWallCtr } from './NodeWallCtr';\nconst { ccclass, property, menu } = _decorator;\n\n/**\n * Name = GameDeskPrefabCtr\n * URL = db://assets/package/game/scripts/GameDeskPrefabCtr.ts\n * Time = Thu Aug 03 2023 11:48:42 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('GameDeskPrefabCtr')\n//方便编辑器识别的菜单项目\n@menu('prefab/game/GameDeskPrefabCtr')\nexport class GameDeskPrefabCtr extends BaseComponent {\n    // 桌子节点\n    @property({ tooltip: \"桌子节点\", type: Node })\n    private nodeDesk: Node = null;\n\n    // 牌墙节点\n    @property({ tooltip: \"牌墙节点\", type: NodeWallCtr })\n    private nodeWall: NodeWallCtr = null;\n\n    // 出牌节点\n    @property({ tooltip: \"出牌节点\", type: NodeOutCardCtr })\n    private nodeOutCard: NodeOutCardCtr = null;\n\n    // 手牌节点\n    @property({ tooltip: \"手牌节点\", type: NodeHandCardCtr })\n    private nodeHandCard: NodeHandCardCtr = null;\n\n    // 碰杠牌节点\n    @property({ tooltip: \"碰杠牌节点\", type: NodeMeldCardCtr })\n    private nodeMeldCard: NodeMeldCardCtr = null;\n\n    // 胡牌节点\n    @property({ tooltip: \"胡牌节点\", type: NodeHuCardCtr })\n    private nodeHuCard: NodeHuCardCtr = null;\n\n    // 闹钟节点\n    @property({ tooltip: \"闹钟节点\", type: NodeClockCtr })\n    private nodeClock: NodeClockCtr = null;\n\n    // 色子节点\n    @property({ tooltip: \"色子节点\", type: NodeDiceCtr })\n    private nodeDice: NodeDiceCtr = null;\n\n    // 杠牌数 计数，用于界面逻辑\n    private _gangCount: number = 0;\n\n    /** 音效配置 */\n    private _soundConfig = [\"wan\", \"tong\", \"tiao\", \"feng\", \"jian\"];\n\n    constructor() {\n        super()\n        console.log(\"==============飞小鸡游戏桌子初始化========\");\n        this.init();\n    }\n\n    //加载初始化\n    init() {\n        FXJController.getInstance().GameDeskCtr = this;\n    }\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n        // 游戏开始\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GAME_START, this.onGameStart);\n        // 摇色子\n        this.addModelListener(GameEvent.VIEW_BROADCAST_ZHI_TOU, this.onRollDices);\n        // 发牌\n        this.addModelListener(GameEvent.VIEW_BROADCAST_DEAL_CARD, this.onDealCard);\n        // 操作开始\n        this.addModelListener(GameEvent.VIEW_BROADCAST_OPERATION_START, this.onOperationStart);\n        // 操作选项\n        this.addModelListener(GameEvent.VIEW_USER_OPERATION, this.onOperationSelect);\n        // 出牌 吃碰杠 胡\n        this.addModelListener(GameEvent.UPDATE_USER_OPERATION_RESULT, this.onOperationResult);\n        // 抓牌\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GRAB_CARD, this.onTakeCard);\n        // 游戏结束\n        this.addModelListener(GameEvent.VIEW_BROADCAST_GAME_OVER, this.onGameOver);\n        \n        // this.addModelListener(GameEvent.RECEIVE_DEAL_CARD, this.onReconnect);\n        \n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    };\n\n    /** 初始化数据 */\n    initData() {\n\n    };\n\n    /** 初始化界面 */\n    initView() {\n\n    };\n\n    /** 更新界面 */\n    updateView() {\n\n    };\n\n    /** 重置界面 */\n    resetView() {\n        this._gangCount = 0;\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this.nodeWall.OnChangedSeat(hostDir);\n        this.nodeHandCard.OnChangedSeat(hostDir);\n        this.nodeOutCard.OnChangedSeat(hostDir);\n        this.nodeMeldCard.OnChangedSeat(hostDir);\n        this.nodeHuCard.OnChangedSeat(hostDir);\n        this.nodeClock.OnChangedSeat(hostDir);\n    }\n\n    // 牌墙 ---------------------------------------------------------------------\n    /** 开始游戏 */\n    onGameStart() {\n        this.log(\"GameDeskPrefabCtr.onGameStart\");\n        // 需要根据玩家位置旋转方位\n        let hostDir = RoomMgr.getInstance().mySeatId - 1;\n        this.node.setRotationFromEuler(0, -90 * hostDir, 0);\n        this.nodeDesk.setRotationFromEuler(0, 90 * hostDir, 0); // 为了保留桌子水印，反向旋转桌子\n        this.resetView();\n        \n        this.nodeWall.onGameStart();\n        this.nodeHandCard.onGameStart();\n        this.nodeOutCard.onGameStart();\n        this.nodeMeldCard.onGameStart();\n        this.nodeHuCard.onGameStart();\n        this.nodeClock.onGameStart();\n\n        let dataAnim: GameViewConfig.AnimConfig = {\n            seatId : RoomMgr.getInstance().mySeatId,\n            aniType : GameViewConfig.AnimType.GameStart,\n        }\n        EventManager.dispatch(FXJEvent.VIEW_OUT_CARD_ANI_PLAY, dataAnim);\n    }\n\n    /** 摇色子 */\n    onRollDices(event, data: Game.IRollDice) {\n        this.log(\"GameDeskPrefabCtr.onRollDices\", data);\n\n        if (Utils.isNull(data) || Utils.table_isEmpty(data.diceInfo)) {\n            this.log(\"GameDeskPrefabCtr.onRollDices\", \"数据异常\", data);\n            return;\n        }\n\n        let bankerSeatId = data.diceInfo[0].seatId;\n        let diceList = data.diceInfo[0].dices;\n\n        if (Utils.isNull(bankerSeatId) || bankerSeatId < 1 || bankerSeatId > 4) {\n            this.log(\"GameDeskPrefabCtr.onRollDices\", \"庄家座位非法\", bankerSeatId);\n            return;\n        }\n\n        if (Utils.table_isEmpty(diceList) || diceList.length != 2) {\n            this.log(\"GameDeskPrefabCtr.onRollDices\", \"骰子数量非法\", diceList);\n            return;\n        }\n\n        for (let i = 0; i < diceList.length; i++) {\n            let dice = diceList[i];\n            if (dice < 1 || dice > 6) {\n                this.log(\"GameDeskPrefabCtr.onRollDices\", \"骰子数值非法\", diceList);\n                return;\n            }\n        }\n\n        this.nodeWall.onRollDices(data);\n        this.nodeDice.onRollDices(data);\n    }\n\n    /** 发牌 */\n    onDealCard(event, data: Game.IDealCard) {\n        this.log(\"GameDeskPrefabCtr.onDealCard\", data);\n        if (Utils.isNull(data) || Utils.table_isEmpty(data.cards)) {\n            this.log(\"GameDeskPrefabCtr.onDealCard\", \"没有手牌数据\");\n            return;\n        }\n\n        this.nodeWall.onDealCard(data);\n        this.nodeHandCard.onDealCard(data);\n    }\n\n    /** 操作开始 */\n    onOperationStart(event, data: Game.IFixBanker) {\n        this.log(\"GameDeskPrefabCtr.onOperationStart\", data);\n        \n        this.nodeClock.onOperationStart(data);\n        this.nodeDice.onOperationStart(data);\n    }\n\n    /** 操作选项 */\n    onOperationSelect(event, data: Game.IOperation) {\n        this.log(\"GameDeskPrefabCtr.onOperationSelect\", data);\n\n        this.nodeClock.onOperationSelect(data);\n    }\n\n    /** 操作结果 */\n    onOperationResult(event, data: Game.IOperationResult) {\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.opCode)) {\n            this.log(\"GameDeskPrefabCtr.onOperationResult\", \"数据异常\", data);\n            return;\n        }\n        \n        \n        switch (data.opCode) {\n            case OPCode.OPE_OUT_CARD: // 出牌\n                this.onOutCard(event, data);       \n                break;\n            case OPCode.OPE_RIGHT_CHI: // 右吃\n            case OPCode.OPE_MIDDLE_CHI: // 中吃\n            case OPCode.OPE_LEFT_CHI: // 左吃\n            case OPCode.OPE_PENG: // 碰\n            case OPCode.OPE_QIANG_PENG: // 抢碰\n                this.onPengGang(event, data)\n                break;\n            case OPCode.OPE_AN_GANG: // 暗杠\n            case OPCode.OPE_GANG: // 杠\n            case OPCode.OPE_BU_GANG: // 补杠\n                this.onPengGang(event, data)\n                this._gangCount++;\n                break;\n            case OPCode.OPE_HU: // 胡\n            case OPCode.OPE_ZI_MO: // 自摸\n                this.onHu(event, data)\n                break;\n            case OPCode.OPE_DIAO:// 调牌\n                break;\n            default:\n                break;\n        }\n\n        this.playEffect(event, data);\n    }\n\n    private playEffect(event, data: Game.IOperationResult) {\n        let roleName = \"xiaobo\"\n        let player = PlayerMgr.getInstance().findPlayerWithSeatId(data.seatId);\n        if (Utils.isNotNull(player)) {\n            let sex = Utils.number_valueOf(player.gameUserInfo.sex);\n            if (sex == 2) {\n                roleName = \"xiaoya\"\n            }\n        }\n\n        switch (data.opCode) {\n            case OPCode.OPE_OUT_CARD: // 出牌\n                let cardValue = data.opCard >> 8 & 0x0F;\n                let cardType = data.opCard >> 12;\n                if (Utils.isNotNull(this._soundConfig[cardType])) {\n                    let path = Utils.string_format(FXJSound.GameDiscard.path, roleName, this._soundConfig[cardType], cardValue)\n                    EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, {bundle: FXJSound.GameDiscard.bundle, path: path});\n                }\n                break;\n            case OPCode.OPE_RIGHT_CHI: // 右吃\n            case OPCode.OPE_MIDDLE_CHI: // 中吃\n            case OPCode.OPE_LEFT_CHI: // 左吃\n                EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, {bundle: FXJSound.GameChi.bundle, path: Utils.string_format(FXJSound.GameChi.path, roleName)});\n                break;\n            case OPCode.OPE_PENG: // 碰\n            case OPCode.OPE_QIANG_PENG: // 抢碰\n                EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, {bundle: FXJSound.GamePeng.bundle, path: Utils.string_format(FXJSound.GamePeng.path, roleName)});\n                break;\n            case OPCode.OPE_AN_GANG: // 暗杠\n            case OPCode.OPE_GANG: // 杠\n            case OPCode.OPE_BU_GANG: // 补杠\n                EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, {bundle: FXJSound.GameGang.bundle, path: Utils.string_format(FXJSound.GameGang.path, roleName)});\n                break;\n            case OPCode.OPE_HU: // 胡\n                EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, {bundle: FXJSound.GameHu.bundle, path: Utils.string_format(FXJSound.GameHu.path, roleName)});\n                break;\n            case OPCode.OPE_ZI_MO: // 自摸\n                EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, {bundle: FXJSound.GameZiMo.bundle, path: Utils.string_format(FXJSound.GameZiMo.path, roleName)});\n                break;\n            case OPCode.OPE_DIAO:// 调牌\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** 抓牌 */\n    onTakeCard(event, data: Game.IGrabCard) {\n        \n        if (Utils.isNull(data)) {\n            this.log(\"GameDeskPrefabCtr.onTakeCard\", \"没有抓牌数据\");\n            return;\n        }\n\n        let dataTakeCard = {\n            seatId: data.seatId,\n            gangCount: this._gangCount,\n            remian: data.remainCardNum,\n        }\n        this.log(\"GameDeskPrefabCtr.onTakeCard\", dataTakeCard);\n        this.nodeWall.onTakeCard(dataTakeCard);\n        this.nodeHandCard.onTakeCard(dataTakeCard);\n        this.nodeClock.onTakeCard(dataTakeCard);\n    }\n\n    // 出牌 ---------------------------------------------------------------------\n    /** 出牌 */\n    onOutCard(event, data: Game.IOperationResult) {\n        this.log(\"GameDeskPrefabCtr.onOutCard\", data);\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.opCard)) {\n            this.log(\"GameDeskPrefabCtr.onOutCard\", \"出牌数据错误\");\n            return;\n        }\n\n        this.nodeOutCard.onOutCard(data);\n        this.nodeHandCard.onOutCard(data);\n    }\n\n    /** 碰杠 */\n    onPengGang(event, data: Game.IOperationResult) {\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.cardSeatId) || Utils.isNull(data.opCard)) {\n            this.log(\"GameDeskPrefabCtr.onPengGang\", \"碰杠数据错误\");\n            return;\n        }\n\n        if (data.cardSeatId == 0) {\n            this.log(\"GameDeskPrefabCtr.onPengGang\", \"无效座位号\");\n            return;\n        }\n\n        this.log(\"GameDeskPrefabCtr.onPengGang\", data);\n        \n        this.nodeOutCard.onPengGang(data);\n        this.nodeHandCard.onPengGang(data);\n        this.nodeMeldCard.onPengGang(data);\n    }\n\n    /** 胡牌 */\n    onHu(event, data: Game.IOperationResult) {\n        if (Utils.isNull(data) || Utils.isNull(data.seatId) || Utils.isNull(data.cardSeatId) || Utils.isNull(data.opCard)) {\n            this.log(\"GameDeskPrefabCtr.onHu\", \"胡牌数据错误\");\n            return;\n        }\n\n        if (data.cardSeatId == 0) {\n            this.log(\"GameDeskPrefabCtr.onHu\", \"无效座位号\");\n            return;\n        }\n\n        this.log(\"GameDeskPrefabCtr.onHu\", data);\n\n        this.nodeOutCard.onHu(data);\n        this.nodeHandCard.onHu(data);\n        this.nodeHuCard.onHu(data);\n    }\n\n    /** 清理 */\n    onGameOver(event, data: Game.IHandCards) {\n        this.log(\"GameDeskPrefabCtr.onGameOver\", data);\n        if (Utils.isNull(data) || Utils.table_isEmpty(data.handCards)) {\n            this.log(\"GameDeskPrefabCtr.onGameOver\", \"结算数据错误\");\n            return;\n        }\n\n        this.nodeWall.onGameOver(data);\n        this.nodeHandCard.onGameOver(data);\n        this.nodeOutCard.onGameOver(data);\n        this.nodeMeldCard.onGameOver(data);\n        this.nodeHuCard.onGameOver(data);\n        this.nodeClock.onGameOver(data);\n\n        let dataAnim: GameViewConfig.AnimConfig = {\n            seatId : RoomMgr.getInstance().mySeatId,\n            aniType : GameViewConfig.AnimType.GameStart,\n        }\n        EventManager.dispatch(FXJEvent.VIEW_OUT_CARD_ANI_PLAY, dataAnim);\n    }\n\n\n    // ---------------------------------------------------------------------\n\n    /** 重连 */\n    onReconnect() {\n        this.nodeWall.onReconnect();\n        this.nodeHandCard.onReconnect();\n        this.nodeOutCard.onReconnect();\n        this.nodeMeldCard.onReconnect();\n        this.nodeHuCard.onReconnect();\n        this.nodeClock.onReconnect();\n    }   \n\n    //销毁\n    onDestroy() {\n\n    };\n\n    log(...args: any[]) {\n        console.log(args);\n\t}\n\n}\n\n"]}