{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/network/WebSocketTask.ts"],"names":["WebSocketTask","sys","WXSdk","Logger","BaseControll","onConnectedCB","callback","_onConnected","onMessageCB","_onMessage","onErrorCB","_onError","onCloseCB","_onClosed","constructor","_wsPlatform","platform","_ws","_readyState","WebSocket","CLOSED","_errorTimeOut","_handlerErrorTimeOut","connect","options","readyState","CONNECTING","logNet","url","ip","port","protocol","_stopCheckErrorTimeOut","self","Platform","WECHAT_GAME","print","onOpen","onError","onClose","onMessage","instance","connectSocket","onSuccessCreated","onFailCreated","res","onOpened","errMsg","onErrored","onClosed","data","onMessaged","onopen","onerror","onclose","onmessage","ws","binaryType","ev","msg","param","OPEN","_startCheckErrorTimeOut","stopScheduler","addScheduler","code","reason","send","buffer","close","CLOSING","WsPlatForm"],"mappings":"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","sourcesContent":["/*\n * websocket\n */\nimport { sys } from \"cc\";\nimport { WXSdk } from \"../../platform/weixin/WXSdk\";\nimport { Logger } from \"../log/Logger\";\nimport { BaseControll } from \"../vc/BaseController\";\n\n/*\n*   WebSocketTask封装(基于微信平台)\n*   1. 连接/断开相关接口\n*   2. 网络异常回调\n*   3. 数据发送与接收\n*/\nexport class WebSocketTask extends BaseControll {\n    private _wsPlatform = sys.platform;   //当前使用平台\n    private _ws = null;                   // 当前websocket对象\n    private _readyState = WebSocket.CLOSED; //当前连接的状态\n\n    private _errorTimeOut: number = 6;     //错误超时时间 从出现错误开始计算\n    private _handlerErrorTimeOut = null;    //错误超时句柄\n\n    protected _onConnected: Function = null;\n    protected _onMessage: Function = null;\n    protected _onError: Function = null;\n    protected _onClosed: Function = null;\n    /** 设置回调 */\n    set onConnectedCB(callback: Function) {\n        this._onConnected = callback;\n    }\n    set onMessageCB(callback: Function) {\n        this._onMessage = callback;\n    }\n    set onErrorCB(callback: Function) {\n        this._onError = callback;\n    }\n    set onCloseCB(callback: Function) {\n        this._onClosed = callback;\n    }\n\n    // onConnected: ((this: WebSocket, ev: Event | any) => any) | null = null;\n    // onMessage: MessageFunc | null = null;\n    // onError: ((this: WebSocket, ev: Event) => any) | null = null;\n    // onClosed: ((this: WebSocket, ev: CloseEvent) => any) | null = null;\n\n    constructor() {\n        super(\"WebSocketTask\");\n    }\n    /** 开启连接 */\n    connect(options: any) {\n        if (this._ws) {\n            if (this._ws.readyState === WebSocket.CONNECTING) {\n                Logger.logNet(\"websocket connecting, wait for a moment...\")\n                return false;\n            }\n        }\n\n        let url = null;\n        if (options.url) {\n            url = options.url;\n        }\n        else {\n            let ip = options.ip;\n            let port = options.port;\n            let protocol = options.protocol;\n            url = `${protocol}://${ip}:${port}`;\n        }\n        //关闭错误超时检测\n        this._stopCheckErrorTimeOut();\n        //当前类\n        const self = this;\n        if (this._wsPlatform == sys.Platform.WECHAT_GAME) {\n            if (this._ws) {\n                this.print(\"***websocket开启连接 当前已经存在了一个连接 将上个连接的回调重置***\");\n                this._ws.onOpen(null);\n                this._ws.onError(null);\n                this._ws.onClose(null);\n                this._ws.onMessage(null);\n            }\n\n            this._ws = WXSdk.instance.connectSocket(url, () => {\n                self.onSuccessCreated();\n            }, () => {\n                self.onFailCreated();\n            }, null, null, 6000);\n\n            if (!this._ws) {\n                return false;\n            }\n            this._readyState = WebSocket.CONNECTING;\n            this._ws.onOpen((res) => {\n                self.onOpened(res);\n            });\n            this._ws.onError((errMsg) => {\n                self.onErrored(errMsg);\n            });\n            this._ws.onClose((res) => {\n                self.onClosed(res);\n            });\n            this._ws.onMessage((data) => {\n                self.onMessaged(data);\n            });\n            return true;\n        } else {\n            if (this._ws) {\n                this.print(\"***websocket开启连接 当前已经存在了一个连接 将上个连接的回调重置***\");\n                this._ws.onopen(null);\n                this._ws.onerror(null);\n                this._ws.onclose(null);\n                this._ws.onmessage(null);\n            }\n\n            let ws = new WebSocket(url);\n            if (ws) {\n                this._ws = ws;\n                this._ws.binaryType = options.binaryType ? options.binaryType : \"arraybuffer\";\n                this.onSuccessCreated();\n            } else {\n                this.onFailCreated();\n            }\n            if (!this._ws) {\n                return false;\n            }\n            this._readyState = WebSocket.CONNECTING;\n\n            this._ws.onopen = (ev: Event) => {\n                self.onOpened(ev);\n            };\n            this._ws.onerror = (ev: Event) => {\n                self.onErrored(ev);\n            };\n            this._ws.onclose = (ev: CloseEvent) => {\n                self.onClosed(ev);\n            };\n            this._ws.onmessage = (msg) => {\n                self.onMessaged(msg);\n            };\n        }\n        return true;\n    }\n\n    /** 创建连接成功 */\n    onSuccessCreated() {\n        this.print(\"***websocket创建连接成功***\")\n    }\n    /** 创建连接失败 */\n    onFailCreated() {\n        this.print(\"***websocket创建连接失败***\")\n    }\n    /** 连接成功 */\n    onOpened(param: any = null) {\n        this.print(\"***websocket开启连接成功***\")\n        this._readyState = WebSocket.OPEN;\n        if (this._onConnected) {\n            this._onConnected(param);\n        }\n    }\n    /** 收到消息 */\n    onMessaged(param: any = null) {\n        if (this._onMessage) {\n            this._onMessage(param?.data);\n        }\n    }\n\n    /** 连接失败 */\n    onErrored(param: any = null) {\n        this.print(\"***websocket连接错误***\", param)\n        if (this._onError) {\n            this._onError(param);\n        }\n        this._startCheckErrorTimeOut()\n    }\n    /** 连接关闭 */\n    onClosed(param: any = null) {\n        this.print(\"***websocket连接关闭了***\")\n        this._readyState = WebSocket.CLOSED;\n        if (this._onClosed) {\n            this._onClosed(param);\n        }\n    }\n\n    //开启错误超时检测\n    private _startCheckErrorTimeOut() {\n        this.stopScheduler(this._handlerErrorTimeOut);\n        const self = this;\n        this._handlerErrorTimeOut = this.addScheduler(this._errorTimeOut, () => {\n            self.stopScheduler(self._handlerErrorTimeOut);\n            if (self._readyState == WebSocket.CLOSED) {\n                return;\n            }\n            if (this._ws) {\n                if (this._wsPlatform == sys.Platform.WECHAT_GAME) {\n                    this._ws.onClose(null);\n                } else {\n                    this._ws.onclose(null);\n                }\n            }\n            this.print(\"***websocket错误超时检测回调***\");\n            self.onClosed({ code: -1, reason: \"error-timeout\" });\n        });\n    }\n\n    //停止错误超时检测\n    private _stopCheckErrorTimeOut() {\n        this.stopScheduler(this._handlerErrorTimeOut);\n        this._handlerErrorTimeOut = null;\n    }\n\n\n    //发送消息\n    send(buffer: DataView): number {\n        let data = buffer?.buffer;\n        if (data && this._ws && this._readyState == WebSocket.OPEN) {\n            // this.print(Logger.getDateString() + \"Websocket 发送包===>\")\n            // Utils.dump(buffer)\n            if (this._wsPlatform == sys.Platform.WECHAT_GAME) {\n                this._ws.send({ data: data });\n            } else {\n                this._ws.send(data);\n            }\n\n            return 1;\n        }\n        return -1;\n    }\n    //关闭连接\n    close(code?: number, reason?: string) {\n        this.print(\"***websocket 主动调用关闭 ***当前状态:\", this._readyState)\n        this.print(\"所有State：\", WebSocket.CLOSED, WebSocket.CLOSING, WebSocket.CONNECTING, WebSocket.OPEN);\n        if (this._ws) {\n            if (this._readyState == WebSocket.CLOSED) {\n                this.print(\"***websocket：close 当前已经关闭了 不需要重复关闭***\")\n                return;\n            }\n            this._readyState = WebSocket.CLOSING;\n            if (this._wsPlatform == sys.Platform.WECHAT_GAME) {\n                this._ws.close({ code: code, reason: reason });\n            } else {\n                this._ws.close(code, reason);\n            }\n        }\n    }\n\n    /** 获取状态 */\n    readyState(): number {\n        return this._readyState;\n    };\n    /** 设置平台使用 */\n    set WsPlatForm(platform) {\n        this._wsPlatform = platform || sys.platform;\n    }\n    /** 获取当前使用平台 */\n    get WsPlatForm() {\n        return this._wsPlatform;\n    }\n}"]}