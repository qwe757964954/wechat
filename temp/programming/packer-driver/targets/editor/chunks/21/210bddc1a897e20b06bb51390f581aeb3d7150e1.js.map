{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/vc/BaseCache.ts"],"names":["BaseCache","Logger","Utils","constructor","name","_className","_data","print","args","logCache","setData","key","value","getData","mergeArray","keyArray","array","isNull","oldKeyArray","newArray","index","length","table_verify","Object","prototype","hasOwnProperty","call","mergeArrayDefault","keyValueArray","defaultValueArray","defaultKeyArray","undefined","JSON","stringify","clear"],"mappings":"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","sourcesContent":["/**\n * Name = BaseCache\n * URL = db://assets/framework/vc/BaseCache.ts\n * Time = Mon May 09 2022 14:31:39 GMT+0800 (中国标准时间)\n * Author = xueya\n * 缓存数据的基类\n */\n\nimport { Logger } from \"../log/Logger\";\nimport { Utils } from \"../Utils\";\n\n\nexport class BaseCache {\n\n\t_className: string = \"BaseCache\";\n\t//存储的数据\n\t_data: {};\n\t//实例化\n\tconstructor(name?: string) {\n\t\tthis._className = name || \"BaseCache\"\n\t\tLogger.logCache(5, `Cache: ${this._className}初始化...`)\n\t\tthis._data = {}\n\t};\n\t/** 设置数据 */\n\tsetData(key: any = null, value: any = null) {\n\t\tif (key) {\n\t\t\tthis._data[key] = value\n\t\t}\n\t\treturn this._data[key]\n\t}\n\t/** 获取数据 */\n\tgetData(key: any = null) {\n\t\tif (key && this._data[key]) {\n\t\t\treturn this._data[key]\n\t\t}\n\t\treturn null\n\t}\n\t//合并\n\tmergeArray(keyArray, array) {\n\t\tif (Utils.isNull(keyArray) || Utils.isNull(array)) {\n\t\t\treturn null\n\t\t}\n\t\tlet oldKeyArray = {}\n\t\tlet newArray = {}\n\t\tfor (let index = 0; index < keyArray.length; index++) {\n\t\t\toldKeyArray[keyArray[index]] = true\n\t\t\tnewArray[keyArray[index]] = null\n\t\t}\n\t\tarray = Utils.table_verify(array)\n\t\tfor (let key in array) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(array, key)) {\n\t\t\t\tlet value = array[key];\n\t\t\t\tif (oldKeyArray[key]) {\n\t\t\t\t\tnewArray[key] = value\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn newArray\n\t}\n\t/**\n\t * 合并（有默认值的Array<key-value>）\n\t * @param keyValueArray \n\t * @param array \n\t * @returns \n\t */\n\tmergeArrayDefault(keyValueArray, array) {\n\t\tif (Utils.isNull(keyValueArray) || Utils.isNull(array)) {\n\t\t\treturn null\n\t\t}\n\t\tlet defaultValueArray = {}\n\t\tlet defaultKeyArray = {}\n\t\tlet newArray = {}\n\t\tfor (let key in keyValueArray) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(keyValueArray, key)) {\n\t\t\t\tlet value = keyValueArray[key];\n\t\t\t\tdefaultValueArray[key] = value\n\t\t\t\tdefaultKeyArray[key] = true\n\t\t\t}\n\t\t}\n\t\tarray = Utils.table_verify(array)\n\n\t\tfor (let key in keyValueArray) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(keyValueArray, key)) {\n\t\t\t\tlet value = array[key];\n\t\t\t\tif (defaultKeyArray[key]) {\n\t\t\t\t\tif (value == null || value == undefined) {\n\t\t\t\t\t\tvalue = defaultValueArray[key]\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (typeof (value) == \"object\") {\n\t\t\t\t\t\t\tif ((JSON.stringify(value) != \"[]\" && JSON.stringify(value) != \"{}\")) {\n\t\t\t\t\t\t\t\tif ((JSON.stringify(keyValueArray[key]) == \"[]\" || JSON.stringify(keyValueArray[key]) == \"{}\")) {\n\t\t\t\t\t\t\t\t\tvalue = value;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvalue = this.mergeArrayDefault(defaultValueArray[key], value)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewArray[key] = value\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn newArray\n\n\t}\n\n\n\t/** 清理缓存数据 */\n\tclear() {\n\t\tLogger.logCache(5, `Cache:${this._className}清理数据...`)\n\t}\n\n\t//当前类日志输出\n\tprotected print = function (...args: any[]) {\n\t\tLogger.logCache(5, `【${this._className}】`, ...args)\n\t}\n}\n\n"]}