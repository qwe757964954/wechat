{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/SelectGame.ts"],"names":["SelectGame","AppEvent","GConstants","StoreKey","GameTxt","UIID","LocalStorage","Utils","Encrypt","EventManager","BaseCache","GCache","constructor","superClass","__User","_serverGameConfig","_serverGamePersonOnline","_serverGameLevelTabList","_serverGameLevelPersonList","_degradeRoomInfo","_upLevelRoomInfo","_intoGameData","intoGameData","param","setLastIntoRoomData","data","uid","getUserMid","realData","JsonEncode2","key","string_format","USER_INTO_GAME_RECORD","set","getLastIntoRoomData","get","lastLoginInfo","JsonDecode","updateServerGameConfig","body","oneGameConf","play_model_labels","gpm","tmpServerGameConfig","index","length","game","newGameConf","mergeArray","gpmArray","_gpmValue","gpmValue","push","setLocalSaveGameConfig","dump","console","log","HALL_GAME_CONF","updateServerGamePersonOnline","isNull","updateServerGameLevelTabList","gameID","isReset","levels","roomData","gameLevelTab","_level","roomDataArray","leaveID","Object","prototype","hasOwnProperty","call","_roomData","number_valueOf","onLevelTab","isFind","i","oldOneLevelTab","updateServerGameLevelPeson","initHallGameConfigByLocal","getServerGameConfig","table_isEmpty","obj","table_verify","getServerGamePersonOnline","getServerGameLevelTabListByGameID","getServerGameLevelPersonListByGameID","getServerGameLevelRoomPersonNum","leavePersonArray","getGameConfigByGameID","getGameVersionByGameID","getGameConfigLevelListByGameID","getGameLevelListByGameID","levelTab","getGameLevelRule","playModelList","getGameLevelTabInfo","levelTabID","levelTabList","leaveRoom","getGameLevelRoomListAll","roomListArray","oneLevelTab","levelID","getGameLevelRoomSortList","leaveTabData","map","Map","_levelID","size","resultArray","arrayLike","Array","from","sort","a","b","isLevelExist","roomList","getGameLevelRoomMinMoney","isNotNull","minMoney","getGameLevelRoomCanEnter","level","userMoney","getUserMoneyByID","base_chip_type","min_money","max_money","getGameRoomInfoByRoomLevelID","roomLevel","getGamePersonOnlineByGameID","setDegradeInfo","getDegradeInfo","setRoomUpLevelInfo","getRoomUpLevelInfo","getPropByLevelPropName","propName","roominfo","getIntoRoomData","willEnterGame","dispatch","SYS_TOAST_TIP","content","hall_goto_game_no_gameid","isDelay","print","hall_goto_game_no_levelList","NET_REQ_GAME_LEVEL_ROOM_TAB","GameID","Level","TableID","isReconn","GAME_GOTO_SHOW","checkQuickGame","gameId","tabId","hall_game_not_have","allRoomList","gameTabId","gameLevelId","playMode","brokeLevel","BankrupData","getBankruptLowestMoney","minRoomData","getBankruptRewardBol","isBankruptRewardRemain","NET_REQ_BANKRUPT_GIFT_CONF","VIEW_UI_OPEN","BankupGift","RECOMMEND_POP_SET_NO_TIP","hall_leave_not_data","RECOMMEND_POP_GET","PopupPos","POS_INTO_ROOM","lastIntoRoomData","checkIntoRoom","min","play_mode","max","moneyId","userGold","hall_goto_game_money_not_enough","hall_goto_game_too_money","checkQuickGameData","checkQuickGameName","levelId","gameIdShow","playModeShow","gameConfig","levelData","tabConfig","tab_name","levelname"],"mappings":"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","sourcesContent":["import { AppEvent } from \"../config/AppEvent\";\nimport { GConstants, StoreKey } from \"../config/GameConstant\";\nimport { GameTxt } from \"../config/GameTxt\";\nimport { UIID } from \"../config/UIConfig\";\nimport { inf_GameIntoParams } from \"../framework/InterfaceDefines\";\nimport { LocalStorage } from \"../framework/LocalStorage\";\nimport { Utils } from \"../framework/Utils\";\nimport { Encrypt } from \"../framework/crypto/Encrypto\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { GCache } from \"./GCache\";\nimport { User } from \"./User\";\n\n/**\n * Name = SelectGame\n * URL = db://assets/cache/SelectGame.ts\n * Time = Mon May 09 2022 14:43:04 GMT+0800 (中国标准时间)\n * Author = xueya\n * 选场游戏缓存\n */\n\nexport interface ILastLoginInfo {\n    gameId?: number | null\n    level?: number | null\n    playMode?: number | null\n}\n\nexport class SelectGame extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n\n    /** 服务端游戏配置 */\n    _serverGameConfig = [];\n    /** 服务端游戏实时在线人数 */\n    _serverGamePersonOnline = {};\n    /** 服务端单个游戏的场次标签栏信息 */\n    _serverGameLevelTabList = {};\n    /** 服务端单个游戏的场次人数信息 */\n    _serverGameLevelPersonList = {};\n\n    /** 降场数据 */\n    _degradeRoomInfo = null;\n    /** 升场数据 */\n    _upLevelRoomInfo = null;\n\n    /** 进入房间的数据缓存 */\n    _intoGameData: inf_GameIntoParams = null;\n\n    //实例化\n    constructor(superClass) {\n        super(\"SelectGame\");\n        this.__User = superClass;\n    };\n    /** set 进入房间的数据缓存 */\n    set intoGameData(param: inf_GameIntoParams) {\n        this._intoGameData = param || null;\n    }\n    /** get 进入房间的数据缓存 */\n    get intoGameData(): inf_GameIntoParams | null {\n        return this._intoGameData;\n    }\n\n    /** 设置上次进入房间的数据(必须是已经进入成功了)) */\n    setLastIntoRoomData(data: ILastLoginInfo) {\n        let uid = this.__User.getUserMid();\n        if (uid == null) {\n            return;\n        }\n        let realData = Encrypt.JsonEncode2(data);\n        let key = Utils.string_format(StoreKey.USER_INTO_GAME_RECORD, uid);\n        LocalStorage.set(key, realData);\n    }\n\n    /** 获取上次进入房间的数据(必须是已经进入成功了)) */\n    getLastIntoRoomData(): ILastLoginInfo {\n        let uid = this.__User.getUserMid();\n        if (uid == null) {\n            return null;\n        }\n        let key = Utils.string_format(StoreKey.USER_INTO_GAME_RECORD, uid);\n        let data = LocalStorage.get(key, null);\n        let lastLoginInfo = Encrypt.JsonDecode(data);\n        return lastLoginInfo;\n    }\n\n    /** 更新游戏配置 */\n    updateServerGameConfig(body) {\n        if (!body) {\n            return\n        }\n        //单个游戏的配置\n        let oneGameConf = [\n            \"desc\",       //游戏下载描述\n            \"name\",       //游戏名称\n            \"id\",         //唯一ID\n            \"game_pkg\",   //包名\n            \"display\",    //显示位置(0为大厅 1为更多游戏  2为固定游戏位 3为推荐游戏)\n            \"has_free\",\n            \"hash\",\n            \"icon\",       //游戏图标\n            \"icon_more\",\n            \"iconcomming\", //游戏图标(黑白)\n            \"isCartoon\",   //是否显示icon动画；1：显示；0：不显示\n            \"isMatch\",     //是否有比赛\n            \"isPrivate\",   //是否有私人房\n            \"isnew\",       //是否新游戏（0为否 1为是）\n            \"play_model_labels\",  //游戏玩法\n            \"pushdate\",\n            \"size\",\n            \"url\",\n            \"version\",\n        ]\n        //游戏玩法\n        let play_model_labels = [\n            \"pushdate\",\n            \"size\",\n            \"url\",\n            \"version\",\n            \"gpm\"         //场次\n        ]\n        //场次\n        let gpm = [\n            \"sort\",\n            \"gpid\",  //也是leaveID\n            \"icon\",\n            \"label\",\n        ]\n        let tmpServerGameConfig = [];\n\n        for (let index = 0; index < body.length; index++) {\n            let game = body[index];\n            if (game) {\n                let newGameConf = this.mergeArray(oneGameConf, game)\n                if (newGameConf) {\n                    if (newGameConf[\"play_model_labels\"]) {\n                        newGameConf[\"play_model_labels\"] = this.mergeArray(play_model_labels, newGameConf[\"play_model_labels\"])\n                        if (newGameConf[\"play_model_labels\"][\"gpm\"]) {\n                            let gpmArray = []\n                            for (let index = 0; index < newGameConf[\"play_model_labels\"][\"gpm\"].length; index++) {\n                                let _gpmValue = newGameConf[\"play_model_labels\"][\"gpm\"][index];\n                                if (_gpmValue) {\n                                    let gpmValue = this.mergeArray(gpm, _gpmValue)\n                                    if (gpmValue) {\n                                        gpmArray.push(gpmValue)\n                                    }\n                                }\n                            }\n                            newGameConf[\"play_model_labels\"][\"gpm\"] = gpmArray\n                        }\n                    }\n                    tmpServerGameConfig.push(newGameConf)\n                }\n            }\n        }\n       \n        this._serverGameConfig = tmpServerGameConfig;\n        this.setLocalSaveGameConfig();\n        Utils.dump(this._serverGameConfig)\n        return this._serverGameConfig\n    }\n\n    /**\n     * 本地存储大厅游戏配置\n     * @returns \n     */\n    setLocalSaveGameConfig() {\n        console.log(\"大厅游戏配置返回:设置本地\",this._serverGameConfig)\n        LocalStorage.set(StoreKey.HALL_GAME_CONF, this._serverGameConfig);\n        return true;\n    }\n\n    \n\n    //更新游戏实时在线人数\n    updateServerGamePersonOnline(body) {\n        if (Utils.isNull(body)) {\n            return\n        }\n        this._serverGamePersonOnline = body\n    }\n    /**\n     * 更新服务端配置的游戏场次标签信息\n     * @param gameID 游戏ID\n     * @param body \n     * @param isReset 是否重置缓存\n     * @returns \n     */\n    updateServerGameLevelTabList(gameID: number, body, isReset: boolean = false) {\n        if (Utils.isNull(gameID) || Utils.isNull(body)) {\n            return\n        }\n        if (!this._serverGameLevelTabList[gameID]) {\n            this._serverGameLevelTabList[gameID] = []\n        }\n        //级别\n        let levels = [\n            \"data\",   //房间数据 参照 roomData\n            \"img_off\",\n            \"img_on\",\n            \"tab_desc\",\n            \"tab_id\",  //标签id（唯一）\n            \"tab_name\",\n            \"tab_sort\",\n        ]\n        //级别内的房间\n        let roomData = [\n            \"anti_cheating\",\n            \"base_chip\",           //底注\n            \"base_chip_type\",      //底注类型 0银币，1金条\n            \"canExit\",             //是否一局可退\n            \"defense_cfg\",         //防作弊时间段配置\n            \"desc\",                //比赛场描述\n            \"descend_seconds\",    //配桌等待的时间\n            \"descend_switch\",     //配桌降场开关', 0关， 1开\n            \"exchangedrop\",       //兑换任务描述\n            \"extra_info\",\n            \"icon\",               //场次图片\n            \"is_silver\",\n            \"is_team\",\n            \"is_zuan\",            //是否为钻石房\n            \"level\",              //房间级别\n            \"levelname\",          //房间名称\n            \"lowest_version\",\n            \"match\",               //是否为比赛场 1:是 0:否\n            \"max_money\",           //银币上限\n            \"min_money\",           //银币下限\n            \"play_mode\",           //玩法 0标准玩法，>=1 其他玩法\n            \"require_chips_continue\",  //退场下限(比银币下限低)\n            \"high_limit_exit\",     //退场上限(比银币上限高)\n            \"sort\",                //位置排序\n            \"times\",\n            \"broken_stat_in\",      //是否需要检查破产 0要  1 不要\n        ]\n        //单个游戏的tab\n        let gameLevelTab = []\n        for (let index = 0; index < body.length; index++) {\n            let _level = body[index];\n            _level = this.mergeArray(levels, _level)\n\n\n            if (_level) {\n                let roomDataArray = {}\n                if (_level[\"data\"]) {\n                    for (let leaveID in _level[\"data\"]) {\n                        if (Object.prototype.hasOwnProperty.call(_level[\"data\"], leaveID)) {\n                            let _roomData = _level[\"data\"][leaveID];\n                            _roomData = this.mergeArray(roomData, _roomData)\n                            if (_roomData) {\n                                //此处做一些处理\n                                _roomData[\"max_money\"] = Utils.number_valueOf(_roomData[\"max_money\"])\n                                _roomData[\"min_money\"] = Utils.number_valueOf(_roomData[\"min_money\"])\n                                _roomData[\"require_chips_continue\"] = Utils.number_valueOf(_roomData[\"require_chips_continue\"])\n                                if (_roomData[\"require_chips_continue\"] < 0) {\n                                    _roomData[\"require_chips_continue\"] = _roomData[\"min_money\"]\n                                }\n                                _roomData[\"high_limit_exit\"] = Utils.number_valueOf(_roomData[\"high_limit_exit\"])\n                                if (_roomData[\"high_limit_exit\"] < 0) {\n                                    _roomData[\"high_limit_exit\"] = _roomData[\"max_money\"]\n                                }\n\n                                _roomData[\"level\"] = Utils.number_valueOf(_roomData[\"level\"], null)\n                                _roomData[\"sort\"] = Utils.number_valueOf(_roomData[\"sort\"])\n\n                                _roomData[\"broken_stat_in\"] = Utils.number_valueOf(_roomData[\"broken_stat_in\"])\n\n                                roomDataArray[leaveID] = _roomData\n                            }\n                        }\n                    }\n                }\n                _level[\"data\"] = roomDataArray\n                gameLevelTab.push(_level)\n            }\n        }\n        if (isReset) {\n            this._serverGameLevelTabList[gameID] = gameLevelTab\n        } else {\n            if (gameLevelTab.length > 0) {\n                if (this._serverGameLevelTabList[gameID].length == 0) {\n                    this._serverGameLevelTabList[gameID] = gameLevelTab\n                } else {\n                    for (let index = 0; index < gameLevelTab.length; index++) {\n                        let onLevelTab = gameLevelTab[index];\n                        if (onLevelTab[\"tab_id\"] != null) {\n                            let isFind = false\n                            for (let i = 0; i < this._serverGameLevelTabList[gameID].length; i++) {\n                                let oldOneLevelTab = this._serverGameLevelTabList[gameID][i];\n                                if (onLevelTab[\"tab_id\"] == oldOneLevelTab[\"tab_id\"]) {\n                                    this._serverGameLevelTabList[gameID][i] = gameLevelTab[index]\n                                    isFind = true\n                                }\n                            }\n                            if (isFind == false) {\n                                this._serverGameLevelTabList[gameID].push(gameLevelTab[index])\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._serverGameLevelTabList[gameID]\n    }\n    /**\n     * 更新场次中的人数\n     * @param gameID \n     */\n    updateServerGameLevelPeson(gameID: number, body) {\n        if (Utils.isNull(gameID)) {\n            return\n        }\n        this._serverGameLevelPersonList[gameID] = body\n        return this._serverGameLevelPersonList[gameID]\n    }\n    \n    /** 初始化游戏配置 */\n    initHallGameConfigByLocal() {\n        this.getServerGameConfig();\n    }\n\n    /**获取游戏配置 */\n    getServerGameConfig() {\n\t\tlet key = StoreKey.HALL_GAME_CONF;\n\t\tif (Utils.table_isEmpty(this._serverGameConfig)) {\n            let obj = LocalStorage.get(key);\n\t\t\tthis._serverGameConfig = Utils.table_verify(obj);\n\t\t}\n\t\tif (Utils.table_isEmpty(this._serverGameConfig)) {\n\t\t\tthis._serverGameConfig = [];\n        }\n        \n\t\treturn this._serverGameConfig;\t\n    }\n    \n    /**获取游戏在线人数配置 */\n    getServerGamePersonOnline() {\n        return this._serverGamePersonOnline\n    }\n    /**\n     * 根据游戏ID获取游戏的场次级别房间信息\n     * @param gameID \n     * @returns \n     */\n    getServerGameLevelTabListByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        if (this._serverGameLevelTabList[gameID]) {\n            return this._serverGameLevelTabList[gameID]\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID获取游戏场次内所有房间的人数集合\n     * @param gameID \n     */\n    getServerGameLevelPersonListByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        if (this._serverGameLevelPersonList[gameID]) {\n            return this._serverGameLevelPersonList[gameID]\n        }\n        return null\n    }\n    /**\n     * 获取游戏的单个房间人数\n     * @param gameID 游戏id\n     * @param leaveID 场次ID\n     */\n    getServerGameLevelRoomPersonNum(gameID: number, leaveID: number) {\n        if (Utils.isNull(gameID) || Utils.isNull(leaveID)) {\n            return null\n        }\n        if (Utils.number_valueOf(leaveID, null) == null) {\n            return null\n        }\n        let leavePersonArray = this.getServerGameLevelPersonListByGameID(gameID)\n        if (leavePersonArray && leavePersonArray[leaveID]) {\n            return leavePersonArray[leaveID]\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID获取游戏配置\n     * @param gameID \n     * @returns \n     */\n    getGameConfigByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        for (let index = 0; index < this._serverGameConfig.length; index++) {\n            let game = this._serverGameConfig[index];\n            if (game && game[\"id\"] == gameID) {\n                return game\n            }\n\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID获取游戏版本\n     * @param gameID \n     * @returns \n     */\n    getGameVersionByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        let game = this.getGameConfigByGameID(gameID)\n        if (game) {\n            return game[\"version\"]\n        }\n        return null\n    }\n\n    /**\n     * 根据游戏ID获取大厅配置里面的游戏玩法列表\n     * @param gameID \n     * @returns \n     */\n    getGameConfigLevelListByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        let game = this.getGameConfigByGameID(gameID)\n        if (game && game[\"play_model_labels\"]) {\n            if (game[\"play_model_labels\"][\"gpm\"]) {\n                return game[\"play_model_labels\"][\"gpm\"]\n            }\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID获取游戏玩法列表\n     * @param gameID \n     * @returns \n     */\n    getGameLevelListByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        let levelTab = this.getServerGameLevelTabListByGameID(gameID)\n        if (levelTab && levelTab[\"data\"]) {\n            return levelTab[\"data\"]\n        }\n        return null\n    }\n\n    /**\n     * 根据游戏ID、游戏玩法 获取具体玩法\n     * @param gameID \n     * @param leaveID \n     * @returns \n     */\n    getGameLevelRule(gameID: number, leaveID: number) {\n        if (Utils.isNull(gameID) || Utils.isNull(leaveID)) {\n            return null\n        }\n        let playModelList = this.getGameConfigLevelListByGameID(gameID)\n\n        if (playModelList && playModelList.length > 0) {\n            for (let index = 0; index < playModelList.length; index++) {\n                let gpm = playModelList[index];\n                if (gpm[\"gpid\"] == leaveID) {\n                    return gpm\n                }\n            }\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID、场次id 获取场次内的所有信息\n     * @param gameID \n     * @param levelTabID 不传则获取该游戏的所有场次\n     * @returns \n     */\n    getGameLevelTabInfo(gameID: number, levelTabID: number = null) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        let levelTabList = this.getServerGameLevelTabListByGameID(gameID)\n        if (Utils.isNull(levelTabID)) {\n            return levelTabList\n        }\n        if (levelTabList) {\n            for (let index = 0; index < levelTabList.length; index++) {\n                let leaveRoom = levelTabList[index];\n                if (leaveRoom[\"tab_id\"] == levelTabID) {\n                    return leaveRoom\n                }\n\n            }\n        }\n        return null\n    }\n\n    /**\n     * 根据游戏ID 获取游戏内所有房间\n     * @param gameID \n     */\n    getGameLevelRoomListAll(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        let levelTabList = this.getServerGameLevelTabListByGameID(gameID)\n        if (levelTabList) {\n            let roomListArray = []\n            for (let index = 0; index < levelTabList.length; index++) {\n                let oneLevelTab = levelTabList[index];\n                if (oneLevelTab && oneLevelTab[\"data\"]) {\n                    for (let levelID in oneLevelTab[\"data\"]) {\n                        if (Object.prototype.hasOwnProperty.call(oneLevelTab[\"data\"], levelID)) {\n                            let roomData = oneLevelTab[\"data\"][levelID];\n                            if (roomData != null) {\n                                roomListArray.push(roomData)\n                            }\n                        }\n                    }\n                }\n            }\n            return roomListArray\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID、场次标签id 获取场次内排序后的房间列表\n     * @param gameID 游戏ID\n     * @param levelTabID 场次标签id\n     * @returns \n     */\n    getGameLevelRoomSortList(gameID: number, levelTabID: number) {\n        if (Utils.isNull(gameID) || Utils.isNull(levelTabID)) {\n            return null\n        }\n        let leaveTabData = this.getGameLevelTabInfo(gameID, levelTabID)\n        if (Utils.isNull(leaveTabData)) {\n            return null\n        }\n        let map = new Map()\n        for (let _levelID in leaveTabData[\"data\"]) {\n            if (Object.prototype.hasOwnProperty.call(leaveTabData[\"data\"], _levelID)) {\n                let roomData = leaveTabData[\"data\"][_levelID]\n                if (roomData) {\n                    roomData[\"sort\"] = Utils.number_valueOf(roomData[\"sort\"])\n                    map.set(_levelID, roomData)\n                }\n            }\n        }\n        if (map.size > 0) {\n            let resultArray = []\n            let arrayLike = Array.from(map)\n            //得到的array中索引0为map中的key,索引1为map中的value\n            arrayLike.sort(function (a, b) {\n                return a[1][\"sort\"] - b[1][\"sort\"]\n            })\n            for (let index = 0; index < arrayLike.length; index++) {\n                resultArray.push(arrayLike[index][1])\n            }\n            return resultArray\n        } else {\n            return null;\n        }\n    }\n    /**\n     * 场次是否存在\n     * @param gameID \n     * @param levelTabID 场次标签id\n     */\n    isLevelExist(gameID: number, levelTabID: number) {\n        let roomList = this.getGameLevelRoomSortList(gameID, levelTabID)\n        if (roomList) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * 根据游戏ID、场次级别获取最小银币房间\n     * @param gameID \n     * @param levelTabID 场次标签id 不传则获取当前游戏所有房间的最小银币值\n     * @returns \n     */\n    getGameLevelRoomMinMoney(gameID: number, levelTabID: number = null) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        levelTabID = Utils.number_valueOf(levelTabID, null)\n        let roomList\n        if (Utils.isNotNull(levelTabID)) {\n            roomList = this.getGameLevelRoomSortList(gameID, levelTabID)\n        } else {\n            roomList = this.getGameLevelRoomListAll(gameID)\n        }\n        if (roomList && roomList.length > 0) {\n            let index = 0\n            let minMoney = roomList[index][\"min_money\"]\n            for (let i = 0; i < roomList.length; i++) {\n                let roomData = roomList[i]\n                if (roomData[\"min_money\"] < minMoney) {\n                    minMoney = roomData[\"min_money\"]\n                    index = i\n                }\n            }\n            return roomList[index]\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID、场次级别获取最小银币房间\n     * @param gameID \n     * @param levelTabID 场次标签id \n     * @param levelID 场次id\n     * @returns \n     */\n    getGameLevelRoomCanEnter(gameID: number, levelTabID: number = null, levelID: number = null) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        levelTabID = Utils.number_valueOf(levelTabID, null)\n        let roomList\n        if (Utils.isNotNull(levelTabID)) {\n            roomList = this.getGameLevelRoomSortList(gameID, levelTabID)\n        } else {\n            roomList = this.getGameLevelRoomListAll(gameID)\n        }\n\n        if (roomList && roomList.length > 0) {\n            if (Utils.isNotNull(levelID)) {\n                // 先找满足的场次id能不能进\n                for (let i = roomList.length - 1; i >= 0; i--) {\n                    let roomData = roomList[i]\n                    let level = Utils.number_valueOf(roomData.level, null)\n                    let userMoney = this.__User.getUserMoneyByID(roomData.base_chip_type)\n                    if (levelID == level && roomData.min_money <= userMoney && userMoney <= roomData.max_money) {\n                        return roomData;\n                    }\n                }\n\n                // 再找可以进的场次\n                for (let i = roomList.length - 1; i >= 0; i--) {\n                    let roomData = roomList[i]\n                    let userMoney = this.__User.getUserMoneyByID(roomData.base_chip_type)\n                    if (roomData.min_money <= userMoney && userMoney <= roomData.max_money) {\n                        return roomData;\n                    }\n                }\n\n                // 找不到返回第一个场次（至少有一个不破产能进去的场次）\n                return roomList[0];\n            } else {\n                // 再找可以进的场次\n                for (let i = roomList.length - 1; i >= 0; i--) {\n                    let roomData = roomList[i]\n                    let userMoney = this.__User.getUserMoneyByID(roomData.base_chip_type)\n                    if (roomData.min_money <= userMoney && userMoney <= roomData.max_money) {\n                        return roomData;\n                    }\n                }\n                // 找不到返回第一个场次（至少有一个不破产能进去的场次）\n                return roomList[0];\n            }\n        }\n        return null\n    }\n\n    /**\n     * 根据游戏ID、房间Level 获取房间信息\n     * @param gameID \n     * @param roomLevel \n     */\n    getGameRoomInfoByRoomLevelID(gameID: number, roomLevel: number) {\n        roomLevel = Utils.number_valueOf(roomLevel, null)\n        if (Utils.isNull(gameID) || Utils.isNull(roomLevel)) {\n            return null\n        }\n        let levelTabList = this.getServerGameLevelTabListByGameID(gameID)\n        if (levelTabList) {\n            for (let index = 0; index < levelTabList.length; index++) {\n                let oneLevelTab = levelTabList[index];\n                if (oneLevelTab && oneLevelTab[\"data\"]) {\n                    if (oneLevelTab[\"data\"][roomLevel] != null) {\n                        return oneLevelTab[\"data\"][roomLevel]\n                    }\n                }\n            }\n        }\n        return null\n    }\n    /**\n     * 根据游戏ID获取在线人数\n     * @param gameID \n     * @returns \n     */\n    getGamePersonOnlineByGameID(gameID: number) {\n        if (Utils.isNull(gameID)) {\n            return null\n        }\n        return this._serverGamePersonOnline[gameID]\n    }\n    //设置降场数据\n    setDegradeInfo(data) {\n        this._degradeRoomInfo = data;\n    }\n    //获取降场数据\n    getDegradeInfo() {\n        return this._degradeRoomInfo\n    }\n\n    //设置升场数据\n    setRoomUpLevelInfo(data) {\n        this._upLevelRoomInfo = data;\n    }\n    //获取升场数据\n    getRoomUpLevelInfo() {\n        return this._upLevelRoomInfo\n    }\n\n    /**\n     * 根据名字来取对应的level属性的方法不需要一个属性对应一个接口\n     * @param gameID \n     * @param levelID \n     * @param propName =\n     * -- \"min_money\"          --进入房间的下限  没拿到返回null\n     * -- \"max_money\"          --进入房间的上限  没拿到返回null\n     * -- \"exitMinMoney\"       --退出房间的下限  没拿到返回null\n     * -- \"exitMaxMoney\"       --退出房间的上限  没拿到返回null\n     * -- \"readyDegradeSwitch\" --配桌降场开关,返回true和false,没拿到返回false\n     * -- \"readyDegradeTime\"   --配桌降场等待的时间，没拿到返回null\n     * -- \"base_chip\"           --底注 没拿到返回0\n     * -- \"broken_stat_in\"     --1:不检查破产，0：检查破产\n     * -- \"levelname\"          --场次名称\n     */\n    getPropByLevelPropName(gameID: number, levelID: number, propName: string) {\n        let roominfo = this.getGameRoomInfoByRoomLevelID(gameID, levelID);\n        if (!roominfo) {\n            return null;\n        }\n        if (propName == \"broken_stat_in\") {\n            if (levelID == 0) { //快速开始时的破产状态。\n                return roominfo[\"broken_stat_in\"] == 0;\n            } else {\n                return roominfo[\"broken_stat_in\"] == 0;\n            }\n        }\n        if (propName == \"min_money\") {\n            return Utils.number_valueOf(roominfo[\"min_money\"]);\n        }\n        if (propName == \"max_money\") {\n            return Utils.number_valueOf(roominfo[\"max_money\"]);\n        }\n        if (propName == \"levelname\") {\n            return roominfo[\"levelname\"] || \"\";\n        }\n        if (propName == \"base_chip\") {\n            return Utils.number_valueOf(roominfo[\"base_chip\"]);\n        }\n        if (propName == \"base_chip_type\") {\n            return Utils.number_valueOf(roominfo[\"base_chip_type\"]);\n        }\n        return null;\n    }\n\n    /** 获取进入游戏房间的数据 */\n    getIntoRoomData(): inf_GameIntoParams {\n        return this.intoGameData;\n    }\n\n    //即将请求进入房间\n    willEnterGame(gameID: number = null, roomLevel: number = null) {\n        if (Utils.isNull(gameID)) {\n            return\n        }\n        gameID = Utils.number_valueOf(gameID, 0)\n        if (gameID <= 0) {\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_no_gameid })\n            return\n        }\n        roomLevel = Utils.number_valueOf(roomLevel, 0)\n\n        //是否延迟\n        let isDelay = false\n        if (roomLevel == 0) { //快速开始\n            let roomList = GCache.SelectGame.getGameLevelRoomListAll(gameID)\n            if (!roomList || roomList.length <= 0) {\n                this.print(`Error：请求进入房间=>快速开始，获取到的房间列表为空 此时重新请求 ${gameID} 房间数据信息`)\n                EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_no_levelList })\n                EventManager.dispatch(AppEvent.NET_REQ_GAME_LEVEL_ROOM_TAB, gameID)\n                return\n            }\n            isDelay = true\n        } else {   //正常点击进入房间\n            let roomList = GCache.SelectGame.getGameRoomInfoByRoomLevelID(gameID, roomLevel)\n            if (!roomList || roomList.length <= 0) {\n                this.print(`Error：请求进入房间=>正常点击，获取到的房间列表为空 此时重新请求 ${gameID} 房间数据信息`)\n                EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_no_levelList })\n                EventManager.dispatch(AppEvent.NET_REQ_GAME_LEVEL_ROOM_TAB, gameID)\n                return\n            }\n        }\n        //设置缓存数据\n        let body: inf_GameIntoParams = {\n            GameID: gameID,\n            Level: roomLevel,\n            TableID: 0,\n            isReconn: false,\n        };\n\n        GCache.SelectGame.intoGameData = body;\n\n        //加载游戏场景\n        EventManager.dispatch(AppEvent.GAME_GOTO_SHOW)\n        // //显示网络loading\n        // EventManager.dispatch(AppEvent.SYS_SHOW_NETLOADING)\n    }\n\n    /**\n     * 检查快速开始\n     * @param gameId = 游戏Id\n     * @param tabId = 标签Id\n     */\n    checkQuickGame(gameId: number, tabId: number = null) {\n        this.print(\"checkQuickGame\", gameId, tabId)\n\n        if (Utils.isNull(gameId)) {\n            return\n        }\n        if (this.getGameConfigByGameID(gameId) == null) {\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_game_not_have })\n            return\n        }\n\n        let allRoomList = this.getGameLevelRoomListAll(gameId)\n        Utils.dump(allRoomList)\n        if (allRoomList == null || allRoomList.length == 0) {\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_goto_game_no_levelList })\n            return\n        }\n        let gameTabId = null;\n        let gameLevelId = null;\n        let data = this.getLastIntoRoomData();\n        this.print(\"checkQuickGame\", \"data\", data)\n        if (data && data.gameId && data.gameId == gameId) {\n            if (tabId && tabId == data.playMode) {\n                gameTabId = data.playMode;\n                gameLevelId = data.level;\n            } else {\n                gameTabId = tabId;\n                gameLevelId = null;\n            }\n        }\n        //获取破产线\n        let brokeLevel = GCache.BankrupData.getBankruptLowestMoney()\n        //获取最低银币的房间\n        let minRoomData = this.getGameLevelRoomCanEnter(gameId, gameTabId, gameLevelId)\n        if (!minRoomData) {\n            let getBankruptRewardBol = GCache.BankrupData.isBankruptRewardRemain()\n            if (minRoomData < brokeLevel && getBankruptRewardBol) {\n                console.log('破产了', minRoomData < brokeLevel)\n\n                EventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_GIFT_CONF, gameId, gameLevelId)\n                EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.BankupGift);\n                return\n            }\n            EventManager.dispatch(AppEvent.RECOMMEND_POP_SET_NO_TIP, GameTxt.hall_leave_not_data)\n            EventManager.dispatch(AppEvent.RECOMMEND_POP_GET, GConstants.PopupPos.POS_INTO_ROOM)\n\n            return\n        }\n        let level = Utils.number_valueOf(minRoomData[\"level\"]);\n        let playMode = Utils.number_valueOf(minRoomData[\"play_mode\"])\n        let lastIntoRoomData: ILastLoginInfo = {\n            gameId: gameId,\n            playMode: playMode,\n            level: level,\n        };\n        this.setLastIntoRoomData(lastIntoRoomData)\n        this.willEnterGame(gameId, level);\n    }\n\n    /** 检查进入房间 */\n    checkIntoRoom(gameId, roomData = null) {\n        this.print(\"checkIntoRoom\", roomData)\n        let level = roomData.level;\n        let min = roomData.min_money;\n        let playMode = roomData.play_mode;\n        let max = roomData.max_money;\n        let moneyId = Utils.number_valueOf(roomData.base_chip_type)\n        let userGold = this.__User.getUserMoneyByID(moneyId);\n        //获取破产线\n        let brokeLevel = GCache.BankrupData.getBankruptLowestMoney()\n        if (max == -1) {//一锅场、高级场，无上限\n            if (userGold < min) {\n                // 是否还有破产次数可以领\n                let getBankruptRewardBol = GCache.BankrupData.isBankruptRewardRemain()\n                if (userGold < brokeLevel && getBankruptRewardBol) {\n                    console.log('破产了', userGold < brokeLevel)\n                    EventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_GIFT_CONF, gameId, level)\n                    EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.BankupGift);\n                    return\n                }\n                EventManager.dispatch(AppEvent.RECOMMEND_POP_SET_NO_TIP, GameTxt.hall_goto_game_money_not_enough)\n                EventManager.dispatch(AppEvent.RECOMMEND_POP_GET, GConstants.PopupPos.POS_INTO_ROOM)\n            } else if (userGold >= min) {\n                let lastIntoRoomData: ILastLoginInfo = {\n                    gameId: gameId,\n                    playMode: playMode,\n                    level: level,\n                };\n                this.setLastIntoRoomData(lastIntoRoomData)\n                this.willEnterGame(gameId, level);\n            }\n        } else {\n            if (userGold < min) {\n                let getBankruptRewardBol = GCache.BankrupData.isBankruptRewardRemain()\n                if (userGold < brokeLevel && getBankruptRewardBol) {\n                    console.log('破产了', userGold, brokeLevel)\n                    EventManager.dispatch(AppEvent.NET_REQ_BANKRUPT_GIFT_CONF, gameId, level)\n                    EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.BankupGift);\n                    return\n                }\n                EventManager.dispatch(AppEvent.RECOMMEND_POP_SET_NO_TIP, GameTxt.hall_goto_game_money_not_enough)\n                EventManager.dispatch(AppEvent.RECOMMEND_POP_GET, GConstants.PopupPos.POS_INTO_ROOM)\n\n            } else if (userGold >= min && userGold < max) {\n                let lastIntoRoomData: ILastLoginInfo = {\n                    gameId: gameId,\n                    playMode: playMode,\n                    level: level,\n                };\n                this.setLastIntoRoomData(lastIntoRoomData)\n                this.willEnterGame(gameId, level);\n            } else if (userGold > max) {\n                EventManager.dispatch(AppEvent.RECOMMEND_POP_SET_NO_TIP, GameTxt.hall_goto_game_too_money)\n                EventManager.dispatch(AppEvent.RECOMMEND_POP_GET, GConstants.PopupPos.POS_INTO_ROOM)\n            }\n        }\n        console.log(min, max, this.__User.getUserMoneyByID(moneyId))\n    }\n\n    /**\n     * 检查快速开始\n     * @param gameId = 游戏Id\n     * @param tabId = 标签Id\n     */\n    checkQuickGameData(gameId: number, tabId: number = null) {\n        this.print(\"checkQuickGameData\", gameId, tabId)\n\n        if (Utils.isNull(gameId)) {\n            return\n        }\n        if (this.getGameConfigByGameID(gameId) == null) {\n            return\n        }\n\n        let allRoomList = this.getGameLevelRoomListAll(gameId)\n        Utils.dump(allRoomList)\n        if (allRoomList == null || allRoomList.length == 0) {\n            return\n        }\n        let gameTabId = null;\n        let gameLevelId = null;\n        let data = this.getLastIntoRoomData();\n        this.print(\"checkQuickGameData\", \"data\", data)\n        if (Utils.isNotNull(data) && Utils.isNotNull(data.gameId) && data.gameId == gameId) {\n            if (Utils.isNotNull(tabId) && tabId == data.playMode) {\n                gameTabId = data.playMode;\n                gameLevelId = data.level;\n            } else {\n                gameTabId = tabId;\n                gameLevelId = null;\n            }\n        }\n\n        //获取最低银币的房间\n        let minRoomData = this.getGameLevelRoomCanEnter(gameId, gameTabId, gameLevelId)\n        if (!minRoomData) {\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: GameTxt.hall_leave_not_data })\n            return\n        }\n        return minRoomData;\n    }\n\n    checkQuickGameName(gameId: number, tabId: number = null, levelId: number = null): string {\n        let data = this.getLastIntoRoomData();\n        let gameIdShow: number = null;\n        let playModeShow: number = null;\n        if (Utils.isNotNull(data) && Utils.isNotNull(data.gameId) && data.gameId > 0 && data.gameId == gameId) {\n            gameIdShow = data.gameId;\n            playModeShow = data.playMode;\n        } else {\n            gameIdShow = gameId;\n        }\n\n        let gameConfig = this.getGameConfigByGameID(gameIdShow);\n        if (gameConfig) {\n            let levelData = this.checkQuickGameData(gameIdShow, playModeShow);\n            if (levelData) {\n                let tabConfig = this.getGameLevelTabInfo(gameIdShow, levelData.play_mode);\n                if (tabConfig) {\n                    this.print(\"checkQuickGameName tabConfig\", tabConfig);\n                    return tabConfig.tab_name + \" \" + levelData.levelname;\n                } else {\n                    this.print(\"checkQuickGameName\", \"缺少标签配置\");\n                }\n            } else {\n                this.print(\"checkQuickGameName\", \"缺少场次配置\");\n            }\n        } else {\n            this.print(\"checkQuickGameName\", \"缺少游戏配置\");\n        }\n        return \"\"\n    }\n\n}\n\n"]}