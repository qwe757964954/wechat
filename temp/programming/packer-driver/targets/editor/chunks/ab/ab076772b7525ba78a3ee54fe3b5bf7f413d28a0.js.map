{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/manager/AudioManager.ts"],"names":["assetManager","AudioClip","AudioSource","director","Node","_decorator","AppEvent","AudioEffect","AudioMusic","LocalStorage","BaseControll","ccclass","LOCAL_STORE_KEY","AudioManager","_audioManagerNode","musicPNode","effectPNode","local_data","nodeEffectList","_volume_music","_volume_effect","_switch_music","_switch_effect","_uuid","_localStorageTag","_playMusicData","_lastPlayMusicData","getInstance","_instance","root","getScene","getChildByName","nodeAudioManager","addChild","nodeUIMusic","addComponent","music","getComponent","nodeUIEffect","initData","init","clear","onInitModuleEvent","addModelListener","SYS_PLAY_MUSIC_LAST","receivePlayMusicLast","SYS_PLAY_MUSIC","receivePlayMusic","SYS_PLAY_EFFECT","receivePlayEffect","SYS_STOP_PLAY_MUSIC","receiveStopPlayMusic","SYS_STOP_PLAY_EFFECT","receiveStopPlayEffect","preLoadAudioDir","bundle","dirPath","upFunc","cb","preKey","self","loadBundle","err","print","loadDir","finished","total","item","data","event","length","musicConf","pop","playMusic","param","path","callEndFunc","playEffect","startStop","clip","i","itemConf","isValid","effectPlayConf","getCurrowPlayConf","splice","get","JSON","parse","volume_music","volume_effect","switch_music","switch_effect","e","volume","setUuid","value","getNewEffect","nodeConf","isPlay","isPause","comp","node","push","bundleName","isLoop","callback","load","loop","onComplete","effectConf","setVolume","musicVolume","MusicVolume","effectVolume","EffectVolume","getSwitchMusic","setSwitchMusic","state","AudioState","PAUSED","startPlay","currowMusicConf","updatePauseState","getSwitchEffect","setSwitchEffect","resumeAll","pauseAll","startPause","PLAYING","stopAll","isCloseAll","save","stringify","set","releaseAll","release"],"mappings":"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","sourcesContent":["import { assetManager, AudioClip, AudioSource, director, Node, _decorator } from \"cc\";\nimport { AppEvent } from \"../../config/AppEvent\";\nimport { AudioEffect } from \"../audio/AudioEffect\";\nimport { AudioMusic } from \"../audio/AudioMusic\";\nimport { inf_AudioPlay } from \"../InterfaceDefines\";\nimport { LocalStorage } from \"../LocalStorage\";\nimport { BaseControll } from \"../vc/BaseController\";\n\nconst { ccclass } = _decorator;\n/**\n * Name = AudioManager\n * URL = db://assets/framework/manager/AudioManager.ts\n * Time = Thu Apr 28 2022 15:19:38 GMT+0800 (中国标准时间)\n * Author = xueya\n *\n * Life: onLoad-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * 音效管理\n */\n\nconst LOCAL_STORE_KEY = \"game_audio\";\n\n\n@ccclass('AudioManager')\nexport class AudioManager extends BaseControll {\n\n    private static _instance: AudioManager;\n\n    private _audioManagerNode: Node = null;\n\n    public musicPNode: Node = null;\n    public effectPNode: Node = null;\n\n    public static getInstance(): AudioManager {\n        if (!this._instance || this._instance == null) {\n            this._instance = new AudioManager(\"AudioManager\");\n        }\n        if (!this._instance._audioManagerNode) {\n            let root = director.getScene().getChildByName(\"root\");\n            let nodeAudioManager = root.getChildByName(\"NodeAudioManager\");\n            if (!nodeAudioManager) {\n                nodeAudioManager = new Node(\"UIAudioManager\");\n                root.addChild(nodeAudioManager);\n            }\n            this._instance._audioManagerNode = nodeAudioManager;\n\n            let nodeUIMusic = nodeAudioManager.getChildByName(\"NodeUIMusic\");\n            if (!nodeUIMusic) {\n                nodeUIMusic = new Node(\"NodeUIMusic\");\n                nodeUIMusic.addComponent(AudioMusic);\n                nodeAudioManager.addChild(nodeUIMusic);\n            }\n            this._instance.musicPNode = nodeUIMusic;\n            this._instance.music = nodeUIMusic.getComponent(AudioMusic);\n\n            let nodeUIEffect = nodeAudioManager.getChildByName(\"NodeUIEffect\");\n            if (!nodeUIEffect) {\n                nodeUIEffect = new Node(\"NodeUIEffect\");\n            }\n            this._instance.effectPNode = nodeUIEffect;\n\n            this._instance.initData();\n        }\n        return this._instance;\n    }\n    public static init(): AudioManager {\n        if (this._instance) {\n            this._instance.clear();\n        }\n        this._instance = null\n        AudioManager.getInstance();\n        return\n    }\n\n    /** 初始化模块事件 */\n    protected onInitModuleEvent() {\n        //播放上次播放的背景音乐\n        this.addModelListener(AppEvent.SYS_PLAY_MUSIC_LAST, this.receivePlayMusicLast);\n        //播放背景音乐\n        this.addModelListener(AppEvent.SYS_PLAY_MUSIC, this.receivePlayMusic);\n        //播放音效\n        this.addModelListener(AppEvent.SYS_PLAY_EFFECT, this.receivePlayEffect);\n        //停止播放背景音乐\n        this.addModelListener(AppEvent.SYS_STOP_PLAY_MUSIC, this.receiveStopPlayMusic);\n        //停止播放音效\n        this.addModelListener(AppEvent.SYS_STOP_PLAY_EFFECT, this.receiveStopPlayEffect);\n\n    }\n\n    /**\n     * 加载音效文件目录\n     * @param bundle 包名\n     * @param dirPath 根目录文件夹名\n     * @param upFunc 进度更新\n     * @param cb 完成回调\n     */\n    public preLoadAudioDir(bundle: string, dirPath: string, upFunc: Function = null, cb: Function = null) {\n        dirPath = dirPath || \"\";\n\n        let preKey = bundle + \"|\" + dirPath;\n        const self = this;\n\n        // 自动加载bundle\n        assetManager.loadBundle(bundle, (err, bundle) => {\n            if (err) {\n                self.print(\"加载包名出错\", err);\n                if (cb) {\n                    cb(err, bundle);\n                }\n                return;\n            }\n            bundle.loadDir(dirPath, AudioClip,\n                (finished: number, total: number, item) => {\n                    if (upFunc) {\n                        upFunc(finished, total, item);\n                    }\n                },\n                (err, data: any) => {\n                    if (err) {\n                        self.print(err);\n                        if (cb) {\n                            cb(err, data);\n                        }\n                        return;\n                    }\n                    // console.log(\"加载的数据：\", data)\n                    if (cb) {\n                        cb(null, data);\n                    }\n                });\n        })\n    }\n\n    /** 上次音乐文件的播放 */\n    private receivePlayMusicLast(event) {\n        if (this._lastPlayMusicData.length == 0 || this._lastPlayMusicData[0][\"path\"] == null) {\n            this._lastPlayMusicData = [];\n            return;\n        }\n        this._playMusicData = {};\n        let musicConf = this._lastPlayMusicData.pop();\n        this.playMusic(musicConf[\"path\"], musicConf[\"bundle\"], musicConf[\"isLoop\"], musicConf[\"callback\"]);\n    }\n\n    /** 音乐文件的播放 */\n    private receivePlayMusic(event, param: inf_AudioPlay) {\n        if (!param || param.path == null) {\n            return;\n        }\n        // this.print(\"背景音乐的播放：\", param)\n        this.playMusic(param.path, param.bundle, true, param.callEndFunc);\n    }\n    /** 音效文件的播放 */\n    private receivePlayEffect(event, param: inf_AudioPlay) {\n        if (!param || param.path == null) {\n            return;\n        }\n        this.playEffect(param.path, param.bundle);\n    }\n    /** 停止播放背景音乐 */\n    private receiveStopPlayMusic(event) {\n        if (this.music) {\n            this.music.startStop();\n            this.music.clip = null;\n        }\n    }\n    /**\n     * 停止播放音效\n     * @param event \n     * @param param 默认为空 可停止指定音效 { bundle: null, path: null }\n     */\n    private receiveStopPlayEffect(event, param: inf_AudioPlay = null) {\n        for (let i = (this.nodeEffectList.length - 1); i >= 0; i--) {\n            let itemConf;\n            itemConf = this.nodeEffectList[i];\n            if (itemConf && itemConf[\"node\"].isValid == true) {\n                if (param) {\n                    let effectPlayConf = itemConf[\"commp\"].getCurrowPlayConf();\n                    if (effectPlayConf[\"bundle\"] == param.bundle && effectPlayConf[\"path\"] == param.path) {\n                        itemConf[\"comp\"].startStop();\n                        itemConf[\"comp\"].clip = null;\n                    }\n                } else {\n                    itemConf[\"comp\"].startStop();\n                    itemConf[\"comp\"].clip = null;\n                }\n            } else {\n                this.nodeEffectList.splice(i, 1);\n            }\n        }\n    }\n\n    private local_data: any = {};\n\n    private music!: AudioMusic;\n    private effect!: AudioEffect;\n    /** 音效节点队列 */\n    private nodeEffectList: Array<{}> = [];\n    /** 音乐 0~1 */\n    private _volume_music: number = 1;\n    /** 音效 0~1 */\n    private _volume_effect: number = 1;\n    private _switch_music: boolean = true;\n    private _switch_effect: boolean = true;\n    private _uuid: string = \"10000\";                // 玩家唯一标识，一般为玩家数据库唯一编号\n    private _localStorageTag: string = \"\";          // 本地存储标签名\n    //播放背景音乐的数据\n    public _playMusicData = {};\n    //播放背景音乐的数据\n    public _lastPlayMusicData: Array<{}> = [];\n\n    private initData() {\n        let data = LocalStorage.get(this._localStorageTag);\n        if (data) {\n            try {\n                this.local_data = JSON.parse(data);\n                this._volume_music = this.local_data.volume_music;\n                this._volume_effect = this.local_data.volume_effect;\n                this._switch_music = this.local_data.switch_music;\n                this._switch_effect = this.local_data.switch_effect;\n            }\n            catch (e) {\n                this.local_data = {};\n                this._volume_music = 1;\n                this._volume_effect = 1;\n                this._switch_music = true;\n                this._switch_effect = true;\n            }\n\n            this.music.volume = this._volume_music;\n        }\n    }\n\n    /** 设置玩家唯一标识 */\n    public setUuid(value: string) {\n        this._uuid = value;\n        this._localStorageTag = `${LOCAL_STORE_KEY}_${this._uuid}`;\n    }\n    /** 获取一个全新的音效空节点 */\n    private getNewEffect() {\n        let nodeConf: { node: Node, comp: AudioEffect } = null;\n        for (let i = (this.nodeEffectList.length - 1); i >= 0; i--) {\n            let itemConf;\n            itemConf = this.nodeEffectList[i];\n            if (itemConf && itemConf[\"node\"].isValid == true) {\n                if (itemConf[\"comp\"].isPlay() == false && itemConf[\"comp\"].isPause() == false) {\n                    nodeConf = itemConf;\n                    break;\n                }\n            } else {\n                this.nodeEffectList.splice(i, 1);\n            }\n        }\n        if (!nodeConf) {\n            let nodeUIEffect = new Node(\"NodeUIEffect\");\n            nodeUIEffect.addComponent(AudioEffect);\n            this.effectPNode.addChild(nodeUIEffect);\n            let comp = nodeUIEffect.getComponent(AudioEffect);\n\n            nodeConf = { node: nodeUIEffect, comp: comp };\n            this.nodeEffectList.push(nodeConf);\n        }\n        nodeConf.comp.initData();\n        nodeConf.comp.volume = this._volume_effect;\n        return nodeConf;\n    }\n    /**\n     *  播放背景音乐\n     * @param path        资源地址\n     * @param bundleName  包名\n     * @param isLoop      是否循环 默认循环\n     * @param callback    音乐播放完成事件\n     */\n    playMusic(path: string, bundleName: string = \"resources\", isLoop: boolean = true, callback: Function | null = null) {\n        if (this._playMusicData[\"path\"]) {\n            this._lastPlayMusicData.push({\n                path: this._playMusicData[\"path\"],\n                bundle: this._playMusicData[\"bundle\"],\n                isLoop: this._playMusicData[\"isLoop\"],\n                callback: this._playMusicData[\"callback\"]\n            });\n        }\n\n        //保存参数配置\n        this._playMusicData = {\n            path: path,\n            bundle: bundleName,\n            isLoop: isLoop,\n            callback: callback\n        };\n        if (this._switch_music) {\n            this.music.load(bundleName, path);\n            this.music.loop = isLoop\n            this.music.onComplete = callback;\n        } else {\n            this.print(\"播放音乐失败,开关已关闭path=\", path);\n        }\n    }\n\n    /**\n     * 播放音效\n     * @param path        资源地址\n     * @param bundleName  包名\n     */\n    playEffect(path: string, bundleName: string = \"resources\") {\n        if (this._switch_effect) {\n            let effectConf = this.getNewEffect();\n            effectConf.comp.load(bundleName, path);\n            effectConf.comp.setVolume(this._volume_effect);\n        }\n    }\n\n    /** 获取背景音乐音量 */\n    public get musicVolume(): number {\n        return this._volume_music;\n    }\n    /** 设置音乐音量 */\n    public set MusicVolume(value: number) {\n        this._volume_music = value;\n        this.music.setVolume(value);\n    }\n\n    /** 获取音效音量 */\n    public get effectVolume(): number {\n        return this._volume_effect;\n    }\n    /** 设置音效音量 */\n    public set EffectVolume(value: number) {\n        this._volume_effect = value;\n    }\n\n    /** 获取音乐开关 */\n    public getSwitchMusic(): boolean {\n        return this._switch_music;\n    }\n    /** 设置背景音乐开关 */\n    public setSwitchMusic(value: boolean) {\n        this._switch_music = value;\n\n        if (this._switch_music == true) {\n            if (this.music.state == AudioSource.AudioState.PAUSED) {\n                this.music.startPlay();\n            } else if (this.music.isPlay() == false) {\n                if (this._playMusicData[\"path\"] && this._playMusicData[\"bundle\"]) {\n                    let currowMusicConf = {\n                        path: this._playMusicData[\"path\"],\n                        bundle: this._playMusicData[\"bundle\"],\n                        isLoop: this._playMusicData[\"isLoop\"],\n                        callback: this._playMusicData[\"callback\"]\n                    };\n                    this._playMusicData = {};\n                    this.music.updatePauseState(false);\n                    this.playMusic(currowMusicConf[\"path\"], currowMusicConf[\"bundle\"], currowMusicConf[\"isLoop\"], currowMusicConf[\"callback\"]);\n                } else {\n                    this.print(\"没有音乐文件配置\")\n                }\n            }\n        } else {\n            this.music.startStop();\n        }\n    }\n\n    /** 音效开关 */\n    public getSwitchEffect(): boolean {\n        return this._switch_effect;\n    }\n    /** 设置音效开关 */\n    public setSwitchEffect(value: boolean) {\n        this._switch_effect = value;\n        if (value == false) {\n            for (let i = (this.nodeEffectList.length - 1); i >= 0; i--) {\n                let itemConf;\n                itemConf = this.nodeEffectList[i];\n                if (itemConf && itemConf[\"node\"].isValid == true) {\n                    itemConf[\"comp\"].startStop();\n                    itemConf[\"comp\"].clip = null;\n                } else {\n                    this.nodeEffectList.splice(i, 1);\n                }\n            }\n        }\n    }\n\n    /** 恢复所有 */\n    public resumeAll() {\n        this.print(\"恢复所有:\", this._switch_music, this._switch_effect, this._playMusicData)\n        if (this._switch_music == true) {\n            if (this.music) {\n                this.print(\"当前音乐状态：===>\", this.music.state, this.music.clip);\n                if (this.music.state == AudioSource.AudioState.PAUSED && this.music.clip) {\n                    this.music.startPlay();\n                } else if (this.music.isPlay() == false) {\n                    if (this._playMusicData[\"path\"] && this._playMusicData[\"bundle\"]) {\n                        let currowMusicConf = {\n                            path: this._playMusicData[\"path\"],\n                            bundle: this._playMusicData[\"bundle\"],\n                            isLoop: this._playMusicData[\"isLoop\"],\n                            callback: this._playMusicData[\"callback\"]\n                        };\n                        this._playMusicData = {};\n                        this.music.updatePauseState(false);\n                        this.playMusic(currowMusicConf[\"path\"], currowMusicConf[\"bundle\"], currowMusicConf[\"isLoop\"], currowMusicConf[\"callback\"]);\n                    }\n                }\n            }\n        }\n        // if (this._switch_effect == true) {\n        //     if (this.effect && this.effect.clip) {\n        //         if (this.effect.state == AudioSource.AudioState.PAUSED) {\n        //             this.effect.play();\n        //         }\n        //     }\n        // }\n    }\n    /** 暂停所有 */\n    public pauseAll() {\n        if (this.music.isPlay() == true) {\n            this.music.startPause();\n        }\n        for (let i = (this.nodeEffectList.length - 1); i >= 0; i--) {\n            let itemConf;\n            itemConf = this.nodeEffectList[i];\n            if (itemConf && itemConf[\"node\"].isValid == true) {\n                if (itemConf[\"comp\"].state == AudioSource.AudioState.PLAYING) {\n                    itemConf[\"comp\"].startStop();\n                    itemConf[\"comp\"].clip = null;\n                }\n            } else {\n                this.nodeEffectList.splice(i, 1);\n            }\n        }\n    }\n    /** 停止播放 */\n    public stopAll() {\n        if (this.music) {\n            this.music.startStop();\n            this.music.clip = null;\n        }\n        for (let i = (this.nodeEffectList.length - 1); i >= 0; i--) {\n            let itemConf;\n            itemConf = this.nodeEffectList[i];\n            if (itemConf && itemConf[\"node\"].isValid == true) {\n                itemConf[\"comp\"].startStop();\n                itemConf[\"comp\"].clip = null;\n            } else {\n                this.nodeEffectList.splice(i, 1);\n            }\n        }\n    }\n    /** 是否关闭了所有 */\n    public isCloseAll() {\n        if (!this.getSwitchMusic() && !this.getSwitchMusic()) {\n            return true\n        }\n        return false\n    }\n    public save() {\n        this.local_data.volume_music = this._volume_music;\n        this.local_data.volume_effect = this._volume_effect;\n        this.local_data.switch_music = this._switch_music;\n        this.local_data.switch_effect = this._switch_effect;\n\n        let data = JSON.stringify(this.local_data);\n        LocalStorage.set(this._localStorageTag, data);\n    }\n    /** 清理所有 */\n    public releaseAll() {\n        this.print(\"AudioManager清理所有=====>\")\n        this.stopAll()\n        this._playMusicData = {};\n        if (this.music) {\n            this.music.release();\n        }\n        for (let i = (this.nodeEffectList.length - 1); i >= 0; i--) {\n            let itemConf;\n            itemConf = this.nodeEffectList[i];\n            if (itemConf && itemConf[\"node\"].isValid == true) {\n                itemConf[\"comp\"].release()\n            } else {\n                this.nodeEffectList.splice(i, 1);\n            }\n        }\n    }\n\n    clear() {\n        super.clear();\n        this.releaseAll();\n    }\n}\n\n"]}