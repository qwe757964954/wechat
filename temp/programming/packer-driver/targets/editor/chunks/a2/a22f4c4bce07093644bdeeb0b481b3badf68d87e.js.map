{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeDiceCtr.ts"],"names":["_decorator","Node","Vec3","EventManager","BaseComponent","RoomMgr","FXJEvent","FXJSound","GameViewConfig","ccclass","property","NodeDiceCtr","tooltip","type","_hostDir","_diceStatus","DiceStatus","Stop","_dices","_time","_config","LAP","LAP_LOCAL","TIME_ROTATE","TIME_MOVE","TIME_LOOK","SECOND_LAP_LOCAL","SECOND_LAP","BEGIN_X","MOVE_X","onInitModuleEvent","onLoad","start","initView","updateView","resetView","getInstance","mySeatId","updateViewDir","node","setRotationFromEuler","onGameStart","OnChangedSeat","hostDir","onRollDices","data","diceInfo","dices","nodeDice1","setPosition","nodeDice2","nodeGaiBan","active","Move","dispatch","SYS_PLAY_EFFECT","GameRoll","update","dt","dtLapLocal","rotation1","eulerAngles","x","y","z","rotation2","dtLap","rotaionView","nodeDiceView","endRotation1","getRotationByValue","endRotation2","Pause","value","rotateX","rotateZ","onOperationStart","onGameOver","onReconnect","onDestroy","log","args","console","name"],"mappings":"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","sourcesContent":["\nimport { _decorator, Node, Vec3 } from 'cc';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { FXJSound } from '../common/FXJSound';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeDiceCtr\n * URL = db://assets/package/game/scripts/NodeDiceCtr.ts\n * Time = Tue Aug 15 2023 15:37:25 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n \n@ccclass('NodeDiceCtr')\nexport class NodeDiceCtr extends BaseComponent {\n\t/** 麻将桌盖板节点 */\n    @property({ tooltip: \"麻将桌盖板节点\", type: Node })\n    private nodeGaiBan: Node = null;\n\n    /** 色子节点 */\n    @property({ tooltip: \"色子节点\", type: Node })\n    private nodeDiceView: Node = null;\n\n    /** 色子节点1 */\n    @property({ tooltip: \"色子节点1\", type: Node })\n    private nodeDice1: Node = null;\n\n    /** 色子节点2 */\n    @property({ tooltip: \"色子节点2\", type: Node })\n    private nodeDice2: Node = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n\n    /** 色子状态 */\n    private _diceStatus: GameViewConfig.DiceStatus = GameViewConfig.DiceStatus.Stop;\n    \n    /** 色子数 */\n    private _dices: number[] = null;\n\n    /** 计时 */\n    private _time: number = 0;\n\n    private _config = {\n        LAP : 5,\n        LAP_LOCAL : 10,\n        TIME_ROTATE : 1,\n        TIME_MOVE : 0.5,\n        TIME_LOOK : 0.5,\n        SECOND_LAP_LOCAL : 10/1, // LAP_LOCAL/TIME_ROTATE\n        SECOND_LAP : 5/1, // LAP/TIME_ROTATE\n        BEGIN_X : 2,\n        MOVE_X :  1,\n    }\n\n\t/** override 初始化模块事件 */\n\tprotected onInitModuleEvent() {\n\n\t};\n\t\n\tonLoad () {\n\t\n\t};\n\n\n\tstart () {\n\n\t};\n\t\n\t/** 初始化界面 */\n\tinitView () {\n\n\t};\n\t\n\t/** 更新界面 */\n\tupdateView () {\n\n\t};\n\t\n\tresetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n        this.updateViewDir();\n\n        this._time = 0;\n        this._diceStatus = GameViewConfig.DiceStatus.Stop;\n    }\n\n    /** 更新色子方位 */\n    private updateViewDir() {\n        this.node.setRotationFromEuler(0, 90 * this._hostDir, 0);\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir;\n        this.updateViewDir(); // 换位需要重置色子节点方向\n    }\n\n    /** 摇色子 */\n    onRollDices(data: Game.IRollDice) {\n        this._dices = data.diceInfo[0].dices;\n        this._time = 0;\n        this.nodeDice1.setPosition(this._config.BEGIN_X, 0, 0);\n        this.nodeDice2.setPosition(-this._config.BEGIN_X, 0, 0);\n        this.nodeGaiBan.active = false;\n        this._diceStatus = GameViewConfig.DiceStatus.Move;\n\n        EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, FXJSound.GameRoll);\n    }\n    \n    protected update(dt: number): void {\n        if (this._diceStatus == GameViewConfig.DiceStatus.Move) {\n            this._time += dt;\n            \n            let dtLapLocal = dt*360*this._config.SECOND_LAP_LOCAL;\n            let rotation1 = this.nodeDice1.eulerAngles;\n            this.nodeDice1.setRotationFromEuler(rotation1.x + dtLapLocal, rotation1.y + dtLapLocal, rotation1.z + dtLapLocal);\n\n            let rotation2 = this.nodeDice2.eulerAngles;\n            this.nodeDice2.setRotationFromEuler(rotation2.x + dtLapLocal, rotation2.y + dtLapLocal, rotation2.z + dtLapLocal);\n            \n            let dtLap = dt*360*this._config.SECOND_LAP;\n            let rotaionView = this.nodeDiceView.eulerAngles;\n            this.nodeDiceView.setRotationFromEuler(rotaionView.x, rotaionView.y + dtLap, rotaionView.z);\n            \n            if (this._time >= this._config.TIME_ROTATE) {\n                let endRotation1 = this.getRotationByValue(this._dices[0])\n                this.nodeDice1.setRotationFromEuler(endRotation1);\n                let endRotation2 = this.getRotationByValue(this._dices[1])\n                this.nodeDice2.setRotationFromEuler(endRotation2);\n                this._diceStatus = GameViewConfig.DiceStatus.Pause;\n            }\n        } else if (this._diceStatus == GameViewConfig.DiceStatus.Pause) {\n            if (this._time >= this._config.TIME_ROTATE + this._config.TIME_MOVE + this._config.TIME_ROTATE) {\n                this._diceStatus = GameViewConfig.DiceStatus.Stop;\n            }\n        } else if (this._diceStatus == GameViewConfig.DiceStatus.Stop) {\n            // 停止了\n        } \n    }\n\n    private getRotationByValue(value): Vec3 {\n        let rotateX = 0;\n        let rotateZ = 0;\n        switch(value) {\n            case 1:\n                rotateX = 90;\n                rotateZ = 0;\n                break;\n            case 2:\n                rotateX = 270;\n                rotateZ = 0;\n                break;\n            case 3:\n                rotateX = 180;\n                rotateZ = 0;\n                break;\n            case 4:\n                rotateX = 0;\n                rotateZ = 90;\n                break;\n            case 5:\n                rotateX = 0;\n                rotateZ = 0;\n                break;\n            case 6:\n                rotateX = 0;\n                rotateZ = 180;\n                break;\n            default:\n                break;\n        }\n\n        return new Vec3(rotateX, 0, rotateZ)\n    }\n\n    /** 操作开始 */\n    onOperationStart(data: Game.IFixBanker) {\n        this.nodeGaiBan.active = true;\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n        \n    }\n\n    /** 重连 */\n    onReconnect() {\n        this.resetView();\n    }\n\n    //销毁\n    onDestroy() {\n    };\n\n    log(...args: any[]) {\n        console.log(this.name, args);\n    }\n\n}\n\n"]}