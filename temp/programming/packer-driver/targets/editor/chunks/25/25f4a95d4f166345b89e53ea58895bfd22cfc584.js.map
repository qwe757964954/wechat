{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/proj/servers/MessageServers.ts"],"names":["MessageServers","GCache","AppEvent","GConstants","UIID","Utils","Encrypt","EventManager","BaseControll","GlobalCMD","getInstance","_instance","constructor","name","init","clear","onInitModuleEvent","addModelListener","NET_CMD_REQ_WATCH","reqMessageData","NET_CMD_RESP_WATCH","respMessageData","NET_REQ_EMAIL_REWARD","reqEmailAward","NET_RESP_EMAIL_REWARD","respEmailAward","event","maxId","MailInfo","getMaxId","number_valueOf","sendMsg","cmd","PHP_EMAIL_DATA","body","id","console","log","dispatch","NET_SEND_MSG","isSuccess","respData","reqData","isNull","data","WatchMessage","dealData","msgid","print","PHP_EMAIL_REWARD","SYS_TOAST_TIP","content","oldData","getMsgByID","table_verify","awards","JsonDecode","awardData","i","length","MsgAwardStatus","GOT","NOT_GOT","goodType","Number","goodNum","PropertyType","SILVER_COIN","GOLD_BAR","DIAMOND","money","User","getUserMoneyByID","updateUserMoneyByID","info","PropsConf","getPropsInfoById","icon","num","push","MsgStatus","MSG_STATUS_HANDLED","updateMailDataInCache","VIEW_UI_OPEN","GongXiHuoDePrefab","NOTIFY_EMAIL_CHANGE"],"mappings":"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","sourcesContent":["/**\n * Name = MessageServers\n * URL = db://assets/proj/servers/MessageServers.ts\n * Time = Wed 2022 09.28 19:03:18 GMT+0800 (中国标准时间)\n * Author = xueya\n * 信箱相关服务\n */\n\nimport { GCache } from \"../../cache/GCache\";\nimport { AppEvent } from \"../../config/AppEvent\";\nimport { GConstants } from \"../../config/GameConstant\";\nimport { UIID } from \"../../config/UIConfig\";\nimport { inf_GetPropItem } from \"../../framework/InterfaceDefines\";\nimport { Utils } from \"../../framework/Utils\";\nimport { Encrypt } from \"../../framework/crypto/Encrypto\";\nimport { EventManager } from \"../../framework/manager/EventManager\";\nimport { BaseControll } from \"../../framework/vc/BaseController\";\nimport { GlobalCMD } from \"../gnet/GlobalCMD\";\n\nexport class MessageServers extends BaseControll {\n    private static _instance = null;\n    public static getInstance(): MessageServers {\n        if (!this._instance || this._instance == null) {\n            this._instance = new MessageServers(\"MessageServers\");\n        }\n        return this._instance;\n    }\n\n    //实例化\n    constructor(name: string) {\n        super(name)\n    };\n    public static init(): MessageServers {\n        if (this._instance) {\n            this._instance.clear()\n        }\n        this._instance = null\n        MessageServers.getInstance();\n        return\n    }\n\n    /**初始化添加事件绑定 */\n    protected onInitModuleEvent(): void {\n        //请求拉取信箱数据\n        this.addModelListener(AppEvent.NET_CMD_REQ_WATCH, this.reqMessageData)\n        //请求拉取信箱数据返回\n        this.addModelListener(AppEvent.NET_CMD_RESP_WATCH, this.respMessageData)\n        //请求邮箱领奖\n        this.addModelListener(AppEvent.NET_REQ_EMAIL_REWARD, this.reqEmailAward)\n        //请求邮箱领奖返回\n        this.addModelListener(AppEvent.NET_RESP_EMAIL_REWARD, this.respEmailAward)\n    }\n\n\n    //请求邮箱数据\n    reqMessageData(event) {\n        //客户端存的最大的的邮箱ID\n        let maxId = GCache.MailInfo.getMaxId()\n        maxId = Utils.number_valueOf(maxId, 0)\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_EMAIL_DATA,\n            body: {\n                id: maxId\n            },\n        }\n        console.log(\"请求邮箱数据,maxId:\", maxId, sendMsg)\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n    /**\n     * 请求邮箱数据返回\n     * @param event \n     * @param isSuccess 是否成功\n     * @param respData 响应数据\n     * @param reqData 请求数据\n     */\n    respMessageData(event, isSuccess, respData, reqData) {\n        console.log(\"请求邮箱配置数据返回\", respData, isSuccess, reqData)\n        if (isSuccess) {   \n            if (Utils.isNull(respData.data)) {\n                return\n            }\n            let data = respData.data;\n            GCache.WatchMessage.dealData(data)\n        }\n    }\n\n    /**\n     * 请求邮箱奖励数据\n     * @param event 事件\n     * @param msgid 邮件ID\n     */\n    reqEmailAward(event, msgid) {\n        if (Utils.isNull(msgid)) {\n            this.print(\"msgid error\",)\n            return\n        }\n        let sendMsg = {\n            cmd: GlobalCMD.PHP_EMAIL_REWARD,\n            body: {\n                msgid: msgid\n            },\n        }\n        this.print(\"请求邮件领奖\", sendMsg)\n        EventManager.dispatch(AppEvent.NET_SEND_MSG, sendMsg)\n    }\n\n\n    //请求邮箱奖励返回\n    respEmailAward(event, isSuccess, respData, reqData) {\n        this.print(\"请求邮箱奖励返回\", respData, isSuccess, reqData)\n\n        if (isSuccess != true) {\n            //领取失败\n            EventManager.dispatch(AppEvent.SYS_TOAST_TIP, { content: respData[\"errorTips\"] });\n            this.print(\"请求领取邮件道具奖励失败:\", respData, reqData)\n            return;\n        }\n        let oldData = {};\n        if (respData[\"id\"] != null) {\n            oldData = GCache.MailInfo.getMsgByID(respData[\"id\"]);\n\n        }\n        oldData = Utils.table_verify(oldData);\n        let awards = Encrypt.JsonDecode(oldData[\"awards\"]);\n        if (respData[\"awards\"]) {\n            let awardData = [];\n            for (let i = 0; i < respData[\"awards\"].length; i++) {\n                if (awards[i]) {\n                    if (respData[\"awards\"][i][\"havegot\"] == GConstants.MsgAwardStatus.GOT && awards[i][\"havegot\"] == GConstants.MsgAwardStatus.NOT_GOT) {\n                        let goodType = Number(respData[\"awards\"][i][\"type\"]);\n                        let goodNum = Number(respData[\"awards\"][i][\"num\"]);\n                        //领取成功，加银币加钱\n                        if (goodType == GConstants.PropertyType.SILVER_COIN || goodType == GConstants.PropertyType.GOLD_BAR || goodType == GConstants.PropertyType.DIAMOND) {\n                            let money = GCache.User.getUserMoneyByID(goodType);\n                            GCache.User.updateUserMoneyByID(goodType, money + goodNum);\n                        }\n                        let info = GCache.PropsConf.getPropsInfoById(goodType);  \n                        let data:inf_GetPropItem= {\n                            icon: info['url'],\n                            name:info['item_name'],\n                            num:goodNum,\n                        }          \n                        console.log(\"awardnum:\",data)\n                        awardData.push(data);\n                    }\n                }\n            }\n            oldData['status'] = GConstants.MsgStatus.MSG_STATUS_HANDLED\n            GCache.MailInfo.updateMailDataInCache(oldData)\n            if (awardData.length > 0) {\n                //通知:恭喜获得\n                EventManager.dispatch(AppEvent.VIEW_UI_OPEN, UIID.GongXiHuoDePrefab, awardData);\n                //通知:领完奖励更新邮件\n                EventManager.dispatch(AppEvent.NOTIFY_EMAIL_CHANGE);\n            }\n        }\n    }\n\n}"]}