{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/package/game/scripts/NodeHandCardCtr.ts"],"names":["Node","Tween","Vec3","_decorator","instantiate","tween","Utils","EventManager","BaseComponent","RoomMgr","OPCode","FXJEvent","FXJSound","GameViewConfig","NodeCardCtr","ccclass","property","NodeHandCardCtr","tooltip","type","_hostDir","_numList","_seatList","_cardStart","_spaceLast","_cardStatus","HandCardStatus","Idle","onInitModuleEvent","onLoad","initData","initView","start","Array","num","width","CardConfig","Width","spaceLast","dir","nodeSeat","setRotationFromEuler","node","addChild","i","leftToRight","card","nodeCard","setPosition","GroundToHandCard","CenterToHandCard","push","resetView","getInstance","mySeatId","length","cards","active","stopAllByTarget","pos","getPosition","x","onGameStart","OnChangedSeat","hostDir","onDealCard","data","dealCard","cardsCount","playAnimOfSort","countList","isNull","console","log","adjustPosition","turnToMe","y","z","cardNum","t1","t2","playAnimOfSortByDir","Sort","delay","call","dispatch","SYS_PLAY_EFFECT","GameAdjust","rotaionEuler","eulerAngles","point","Thickness","GroundToCard","tweenTargetVec3","tw","by","onUpdate","target","ratio","rotate3DAroundByPositionRotaion","onTakeCard","seatId","takeCard","onOutCard","outCardAny","count","luckyNum","Math","floor","random","normalOutCardAny","simpleOutCardAny","a","b","min","removeNodeList","splice","forEach","value","index","array","to","position","onPengGang","opCode","OPE_PENG","OPE_QIANG_PENG","OPE_AN_GANG","OPE_GANG","OPE_BU_GANG","onHu","cardSeatId","onGameOver","handCards","nodes","j","getComponent","setCardByte","playAnimOfShow","duration","Show","Over","onReconnect","playerList","onDestroy"],"mappings":"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","sourcesContent":["\nimport { Node, Tween, Vec3, _decorator, instantiate, tween } from 'cc';\nimport { Utils } from '../../../framework/Utils';\nimport { EventManager } from '../../../framework/manager/EventManager';\nimport { BaseComponent } from '../../../framework/vc/BaseComponent';\nimport { RoomMgr } from '../cache/RoomMgr';\nimport { OPCode } from '../common/FXJConfig';\nimport { FXJEvent } from '../common/FXJEvent';\nimport { FXJSound } from '../common/FXJSound';\nimport { GameViewConfig } from '../common/GameViewConfig';\nimport { Game } from '../common/idl/Game';\nimport { NodeCardCtr } from './NodeCardCtr';\nconst { ccclass, property } = _decorator;\n\n/**\n * Name = NodeHandCardCtr\n * URL = db://assets/package/game/scripts/NodeHandCardCtr.ts\n * Time = Mon Aug 14 2023 12:07:20 GMT+0800 (中国标准时间)\n * Author = harvyson\n *\n * Life: onLoad-->onInitModuleEvent-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * \n */\n\n@ccclass('NodeHandCardCtr')\nexport class NodeHandCardCtr extends BaseComponent {\n    /** 牌节点 */\n    @property({ tooltip: \"牌节点\", type: Node })\n    private nodeCard: Node = null;\n\n    /** 本家方位 */\n    private _hostDir: number = 0;\n    /** 麻将数量列表 */\n    private _numList: number[] = null;\n    /** 麻将位置列表 */\n    private _seatList: Node[][] = null;\n    /** 手牌开始位置 */\n    private _cardStart: number = 0;\n    /** 最后一张手牌间隔 */\n    private _spaceLast: number = 0;\n\n    /** 手牌状态 */\n    private _cardStatus: GameViewConfig.HandCardStatus = GameViewConfig.HandCardStatus.Idle;\n\n    /** override 初始化模块事件 */\n    protected onInitModuleEvent() {\n    };\n\n    onLoad() {\n        this.initData()\n        this.initView()\n    };\n\n\n    start() {\n\n    }\n\n    initData() {\n        this._numList = [0, 0, 0, 0];\n        this._seatList = new Array(4);\n    }\n\n    initView() {\n        let num = 14;\n        let width = GameViewConfig.CardConfig.Width;\n        let spaceLast = width * 0.5; // 行牌玩家新拿的一张牌，放在最右侧，并与其他牌保持一定距离\n        let start = (width * num) / 2 + spaceLast - width / 2;\n\n        this._cardStart = start;\n        this._spaceLast = spaceLast;\n\n        for (let dir = 0; dir < 4; dir++) {\n            // 每个方向的手牌设定一个父节点，方便管理\n            let nodeSeat = new Node();\n            nodeSeat.setRotationFromEuler(0, 90 * dir, 0);\n            this.node.addChild(nodeSeat);\n\n            // 四个方向的手牌都以东方向为基础方向，旋转父节点分别对应到四个方向\n            // 以东为基础方向后，二维坐标系，向右为x轴正方向，向上为y轴正方向\n            this._seatList[dir] = [];\n            for (let i = 0; i < num; i++) {\n                let leftToRight = -start + i * width;\n                if (i == num) {\n                    leftToRight += spaceLast;\n                }\n                let card = instantiate(this.nodeCard);\n                card.setPosition(leftToRight, GameViewConfig.CardConfig.GroundToHandCard, GameViewConfig.CardConfig.CenterToHandCard);\n                card.setRotationFromEuler(90, 0, 0);\n                nodeSeat.addChild(card);\n                this._seatList[dir].push(card);\n            }\n        }\n    }\n\n    resetView() {\n        this._hostDir = RoomMgr.getInstance().mySeatId - 1;\n\n        // 清空所有手牌\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let cards = this._seatList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                cards[i].active = false;\n                Tween.stopAllByTarget(cards[i]);\n\n                let pos = cards[i].getPosition();\n                cards[i].setPosition(pos.x, GameViewConfig.CardConfig.GroundToHandCard, GameViewConfig.CardConfig.CenterToHandCard)\n            }\n        }\n\n        this._numList = [0, 0, 0, 0];\n\n        this._cardStatus = GameViewConfig.HandCardStatus.Idle;\n    }\n\n    /** 游戏开始 */\n    onGameStart() {\n        this.resetView();\n    }\n\n    /** 换位 */\n    OnChangedSeat(hostDir: number) {\n        this._hostDir = hostDir; // 换位需要重置手牌（本家不显示手牌）\n    }\n\n    /** 发牌 */\n    onDealCard(data: Game.IDealCard) {\n        this.dealCard(data.cardsCount);\n        this.playAnimOfSort();\n    }\n\n    /** 发牌处理 */\n    private dealCard(countList: number[]) {\n        if (Utils.isNull(this._hostDir) || this._hostDir < 0 || this._hostDir >= 4) {\n            console.log(\"NodeHandCardCtr.dealCard\", \"本家座位号无效\");\n            return;\n        }\n\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let num = countList[dir];\n            let cards = this._seatList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                if (dir == this._hostDir) {\n                    cards[i].active = false;\n                } else {\n                    cards[i].active = (i + 1) <= num;\n                }\n            }\n            this._numList[dir] = dir == this._hostDir ? 0 : num;\n            this.adjustPosition(dir)\n        }\n    }\n\n    /** 调整手牌的位置 */\n    private adjustPosition(dir: number) {\n        let num = this._numList[dir];\n        let cards = this._seatList[dir];\n        for (let i = 0; i < num; i++) {\n            let leftToRight = -this._cardStart + i * GameViewConfig.CardConfig.Width;\n            if (i == (num - 1) && this.turnToMe(num)) {\n                leftToRight += this._spaceLast;\n            }\n            let card = cards[i];\n            let pos = card.getPosition();\n            card.setPosition(leftToRight, pos.y, pos.z);\n        }\n    }\n\n    /** 是否轮到我出牌 */\n    private turnToMe(cardNum: number) {\n        return cardNum % 3 == 2\n    }\n\n    /** 触发手牌排序动画 */\n    private playAnimOfSort() {\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n        let t1 = 0.25;\n        let t2 = 0.25;\n\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            this.playAnimOfSortByDir(dir, t1, t2)\n        }\n        this._cardStatus = GameViewConfig.HandCardStatus.Sort;\n        tween(this.node)\n            .delay(t1 + t2 + 0.01)\n            .call(() => {\n                this._cardStatus = GameViewConfig.HandCardStatus.Idle;\n                for (let dir = 0; dir < this._seatList.length; dir++) {\n                    let cards = this._seatList[dir];\n                    for (let i = 0; i < cards.length; i++) {\n                        cards[i].setRotationFromEuler(90, 0, 0);\n                    }\n                }\n            })\n            .start();\n        EventManager.dispatch(FXJEvent.SYS_PLAY_EFFECT, FXJSound.GameAdjust);\n    }\n\n    /** 播放整理牌的动画 */\n    private playAnimOfSortByDir(dir: number, t1: number, t2: number) {\n        let num = this._numList[dir];\n        let cards = this._seatList[dir];\n        for (let i = 0; i < cards.length; i++) {\n            if ((i + 1) > num) {\n                break;\n            }\n            // 沿麻将牌面下边缘旋转，转到牌面向下后再转回原位置\n            let rotaionEuler = new Vec3(cards[i].eulerAngles);\n            let pos = new Vec3(cards[i].getPosition());\n            let point = new Vec3(pos.x, 0,\n                pos.z + GameViewConfig.CardConfig.Thickness - GameViewConfig.CardConfig.GroundToCard);\n\n            let tweenTargetVec3 = new Vec3(0, 0, 0);\n            let tw = new Tween(tweenTargetVec3)\n                .by(t1, new Vec3(90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(cards[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .by(t2, new Vec3(-90, 0, 0), {\n                    onUpdate: (target: Vec3, ratio: number) => {\n                        Utils.rotate3DAroundByPositionRotaion(cards[i], pos, rotaionEuler, point, target, true)\n                    }\n                })\n                .start();\n        }\n    }\n\n    /** 抓牌 */\n    onTakeCard(data: any) {\n        if (Utils.isNull(data.seatId) || data.seatId < 1 || data.seatId > 4) {\n            console.log(\"NodeHandCardCtr.onTakeCard\", \"座位号错误\");\n            return;\n        }\n\n\n        let dir = data.seatId - 1;\n        this.takeCard(dir);\n    }\n\n    /** 抓牌 */\n    private takeCard(dir: number) {\n\n        if (this._hostDir == dir) {\n            return;\n        }\n\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n\n        if (this.turnToMe(this._numList[dir])) {\n            console.log(\"NodeHandCardCtr.takeCard\", \"手牌数量异常，可能未正常移除\", \"dir\", dir);\n        }\n\n        let cards = this._seatList[dir];\n        let num = this._numList[dir] + 1;\n        console.log(\"NodeHandCardCtr.takeCard\", \"dir\", dir, \"num\", num);\n        if (num > cards.length) {\n            console.log(\"NodeHandCardCtr.takeCard\", \"手牌数量太多\", \"dir\", dir);\n            return;\n        }\n        cards[num - 1].active = true;\n        this._numList[dir] = num;\n        this.adjustPosition(dir);\n    }\n\n    /** 出牌 */\n    onOutCard(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n\n        if (!this.turnToMe(this._numList[dir])) {\n            console.log(\"NodeHandCardCtr.takeCard\", \"手牌数量异常，可能未正常拿牌\", \"dir\", dir);\n            this.adjustPosition(dir);\n            return;\n        }\n\n        this.outCardAny(dir, 1)\n    }\n\n    /** 出牌或碰杠(一般用于正常出牌、碰或杠) */\n    private outCardAny(dir: number, count: number) {\n        console.log(\"NodeHandCardCtr.outCardAny\", \"dir\", dir, \"count\", count);\n        console.log(\"NodeHandCardCtr.outCardAny\", \"numList\", this._numList);\n        if (this._hostDir == dir) {\n            return;\n        }\n\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n\n        this.adjustPosition(dir);\n\n        let luckyNum = Math.floor(Math.random() * 100);\n        if (luckyNum % 2 == 1) {\n            // this.simpleOutCardAny(dir, count);\n            this.normalOutCardAny(dir, count);\n        } else {\n            this.normalOutCardAny(dir, count);\n        }\n\n    }\n\n    /** 简单出牌，直接丢出最右侧的牌 */\n    private simpleOutCardAny(dir: number, count: number) {\n        console.log(\"NodeHandCardCtr.simpleOutCardAny\");\n        let num = this._numList[dir];\n        if (num < count) {\n            return;\n        }\n\n        let cards = this._seatList[dir];\n        for (let i = 0; i < count; i++) {\n            cards[num - 1].active = false;\n            num--;\n        }\n        this._numList[dir] = num;\n    }\n\n    /** \n     * 模拟真实出牌，从中间打出一张，然后将最右侧的牌插入到空槽 \n     * 1. [已实现] 直接打出新拿的牌，无需整理\n     * 2. [已实现] 从手牌中抽出一张打出，然后空槽右侧牌全部向左推，整理完成\n     * 3. [未实现] 从手牌中抽出一张打出，最右侧新拿的牌直接插入空槽，整理完成\n     * 4. [未实现] 从手牌中抽出一张打出，中间一部分牌向左或向右移动，产生另一个空槽，再将最右侧新拿的牌插入空槽，整理完成\n     * */\n    private normalOutCardAny(dir: number, count: number) {\n        console.log(\"NodeHandCardCtr.normalOutCardAny begin\", this._numList[dir]);\n        let num = this._numList[dir];\n        if (num < count) {\n            return;\n        }\n\n        let a = count;\n        let b = num - 1;\n        let luckyNum = Math.min(Math.floor(Math.random() * (b + 1 - a) + a), b);\n\n        let cards = this._seatList[dir];\n\n        let removeNodeList = cards.splice(luckyNum - count, count);\n        removeNodeList.forEach((value, index, array) => {\n            value.active = false;\n        });\n\n        for (let i = 0; i < removeNodeList.length; i++) {\n            cards.push(removeNodeList[i]);\n        }\n\n        num -= count;\n        this._numList[dir] = num;\n\n        console.log(\"NodeHandCardCtr.normalOutCardAny end\", this._numList[dir]);\n        //\n        for (let i = 0; i < num; i++) {\n            let pos = cards[i].getPosition();\n            // 使用动画移动到目标位置\n            let x = - this._cardStart + i * GameViewConfig.CardConfig.Width;\n            if (i == (num - 1) && (num % 3 == 2)) {\n                x += this._spaceLast;\n            }\n            tween(cards[i])\n                .to(0.06 * count, { position: new Vec3(x, pos.y, pos.z) })\n                .start();\n        }\n    }\n\n    /** 碰杠 */\n    onPengGang(data: Game.IOperationResult) {\n        let dir = data.seatId - 1;\n        switch (data.opCode) {\n            case OPCode.OPE_PENG: // 碰\n            case OPCode.OPE_QIANG_PENG: // 抢碰\n                this.outCardAny(dir, 2);\n                break;\n            case OPCode.OPE_AN_GANG: // 暗杠\n                this.outCardAny(dir, 1);\n                break;\n            case OPCode.OPE_GANG: // 杠\n                this.outCardAny(dir, 3);\n                break;\n            case OPCode.OPE_BU_GANG: // 补杠\n                this.outCardAny(dir, 4);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /** 胡牌 */\n    onHu(data: Game.IOperationResult) {\n        let dir = data.cardSeatId - 1;\n\n        if (!this.turnToMe(this._numList[dir])) {\n            // 手里是否有一张未打出的牌，有则移除\n            return;\n        }\n        this.outCardAny(dir, 1);\n    }\n\n    /** 游戏结束 */\n    onGameOver(data: Game.IHandCards) {\n        for (let i = 0; i < data.handCards.length; i++) {\n            let dir = i;\n            let cards = data.handCards[i].handCards;\n            if (cards.length > 14) {\n                console.log(\"NodeHandCardCtr.onGameOver\", \"手牌数据异常\", cards);\n                return;\n            }\n\n            let nodes = this._seatList[dir];\n            for (let j = 0; j < cards.length; j++) {\n                nodes[j].getComponent(NodeCardCtr).setCardByte(cards[j]);\n            }\n        }\n\n        this.playAnimOfShow()\n    }\n\n    /** 触发亮牌动画 */\n    private playAnimOfShow() {\n        if (this._cardStatus != GameViewConfig.HandCardStatus.Idle) {\n            return;\n        }\n\n        let duration = 0.3;\n        for (let dir = 0; dir < this._seatList.length; dir++) {\n            let cards = this._seatList[dir];\n            let num = this._numList[dir];\n            for (let i = 0; i < cards.length; i++) {\n                if (i + 1 > num) {\n                    break;\n                }\n\n                let rotaionEuler = new Vec3(cards[i].eulerAngles);\n                let pos = new Vec3(cards[i].getPosition());\n                let point = new Vec3(pos.x, 0,\n                    pos.z - GameViewConfig.CardConfig.GroundToCard);\n\n                let tweenTargetVec3 = new Vec3(0, 0, 0);\n                let tw = new Tween(tweenTargetVec3)\n                    .by(duration, new Vec3(-90, 0, 0), {\n                        onUpdate: (target: Vec3, ratio: number) => {\n                            Utils.rotate3DAroundByPositionRotaion(cards[i], pos, rotaionEuler, point, target, true)\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        this._cardStatus = GameViewConfig.HandCardStatus.Show;\n        tween(this.node)\n            .delay(duration + 0.01)\n            .call(() => {\n                this._cardStatus = GameViewConfig.HandCardStatus.Over;\n            })\n            .start();\n    }\n\n    /** 重连 */\n    onReconnect(data: GameViewConfig.ReconnectConfig) {\n        this.resetView();\n\n        let cardsCount = [0, 0, 0, 0];\n        data.playerList.forEach((value, index, array) => {\n            cardsCount[value.seatId - 1] = value.handCards.length;\n        })\n\n        this.dealCard(cardsCount);\n\n        for (let dir = 0; dir < this._seatList.length; dir++) { \n            this.adjustPosition(dir)\n        }\n    }\n\n    //销毁\n    onDestroy() {\n        this.resetView()\n    };\n}\n\n\n"]}