{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/cache/ShopInfo.ts"],"names":["ShopInfo","AppEvent","GConstants","Utils","EventManager","BaseCache","PayAgent","constructor","superClass","__User","_shopList","_shopTab","_shopSubTab","_shopData","shopTab","getGoodsTypeNameByScene","type","sceneName","sceneData","find","item","scene","name","update","body","table_isEmpty","newBody","clone","Object","keys","ShopBigTabType","forEach","key","table_verify","length","push","cid","order","gList","ginfo","String","isExitFreeGoods","dispatch","ACTIVITY_SHOPLIST_UPDATE","console","log","needDispatch","res","_onGoodsBuySucc","gid","data","goods","getShopDataByGoodsID","goodsIsHave","isHave","Number","NOTIFY_GOODS_CHANGE","getPriceByResId","subType","resId","List","_getDataBySubType","temp","_temp","prototype","hasOwnProperty","call","value","payID","price","goodsID","icon","limit_buy_num","isEmpty","getGoodInfoByResId","roleList","m","val","getPriceByGoodsSceneId","_scene","_goodsList","_gid","limit_buy_way","limitNum","share_id","isExitByGoodsid","isNaN","v","findGoods","info","key2","detailPrice","i","isRMB","getSubTbs","_type","getDataList","goodsDataItemArr","goodsList","getLimitGift","onUpdateGoods","respData","getShopList","TabConfig","SILVER_COIN","ShopSmallTabType","PROPS"],"mappings":";;;8FAcaA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAdJC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Q,iBAAAA,Q;;;;;;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;0BACaN,Q,GAAN,MAAMA,QAAN;AAAA;AAAA,kCAAiC;AACpC;;AAGA;AAEA;AAEA;AAEA;;AAGA;AACA;AAKA;AACAO,QAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,gBAAM,UAAN;AADoB,eAlBhBC,MAkBgB,GAlBD,IAkBC;AAAA,eAfhBC,SAegB,GAfJ,EAeI;AAAA,eAbhBC,QAagB,GAbL,EAaK;AAAA,eAXhBC,WAWgB,GAXF,EAWE;AAAA,eAThBC,SASgB,GATJ,EASI;AAEpB,eAAKJ,MAAL,GAAcD,UAAd;AACH;;AACD;AACW,YAAPM,OAAO,GAAG;AACV,iBAAO,KAAKH,QAAZ;AACH;AACD;;;AACAI,QAAAA,uBAAuB,CAACC,IAAD,EAAO;AAC1B,cAAIC,SAAS,GAAG,IAAhB;;AACA,cAAID,IAAJ,EAAU;AACN,gBAAIE,SAAS,GAAG;AAAA;AAAA,0CAAWH,uBAAX,CAAmCI,IAAnC,CAAwCC,IAAI,IAAI;AAAE,qBAAOA,IAAI,CAACC,KAAL,IAAcL,IAArB;AAA2B,aAA7E,CAAhB;AACAE,YAAAA,SAAS,GAAGD,SAAS,GAAGC,SAAS,CAACI,IAAzB,GAAgC,MAAzC;AACH;;AACD,iBAAOL,SAAP;AACH;AAED;;;AACAM,QAAAA,MAAM,CAACC,IAAD,EAAO;AACT,cAAI;AAAA;AAAA,8BAAMC,aAAN,CAAoBD,IAApB,KAA6BA,IAAI,CAAC,OAAD,CAAJ,IAAiB,IAAlD,EAAwD;AACpD;AACH;;AACD,cAAIE,OAAO,GAAG;AAAA;AAAA,8BAAMC,KAAN,CAAYH,IAAZ,CAAd,CAJS,CAMT;;AACAI,UAAAA,MAAM,CAACC,IAAP,CAAY;AAAA;AAAA,wCAAWC,cAAvB,EAAuCC,OAAvC,CAA+CC,GAAG,IAAI;AAClD,gBAAI;AAAA;AAAA,0CAAWF,cAAX,CAA0BE,GAA1B,KAAkCN,OAAO,CAAC,OAAD,CAA7C,EAAwD;AACpD,mBAAKf,QAAL,CAAce,OAAO,CAAC,OAAD,CAArB,IAAkCA,OAAlC;AACH;AACJ,WAJD,EAPS,CAYT;;AACAA,UAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB;AAAA;AAAA,8BAAMO,YAAN,CAAmBP,OAAO,CAAC,QAAD,CAA1B,EAAsC,IAAtC,CAApB;;AACA,cAAIA,OAAO,CAAC,QAAD,CAAP,CAAkBQ,MAAlB,GAA2B,CAA/B,EAAkC,CAC9B;AACH,WAFD,MAEO;AACHR,YAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,EAApB,CADG,CAEH;;AACAA,YAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBS,IAAlB,CACI;AACIC,cAAAA,GAAG,EAAEV,OAAO,CAAC,OAAD,CADhB;AAEIW,cAAAA,KAAK,EAAE,CAFX;AAGIf,cAAAA,IAAI,EAAE,KAAKP,uBAAL,CAA6BW,OAAO,CAAC,OAAD,CAApC,CAHV;AAIIY,cAAAA,KAAK,EAAEZ,OAAO,CAACa;AAJnB,aADJ,EAHG,CAWH;;AACA,iBAAK3B,WAAL,CAAiBc,OAAO,CAAC,OAAD,CAAxB,IAAqCA,OAAO,CAAC,QAAD,CAA5C,CAZG,CAaH;;AACAE,YAAAA,MAAM,CAACC,IAAP,CAAY;AAAA;AAAA,0CAAWC,cAAvB,EAAuCC,OAAvC,CAA+CC,GAAG,IAAI;AAClD,kBAAI;AAAA;AAAA,4CAAWF,cAAX,CAA0BE,GAA1B,KAAkCN,OAAO,CAAC,OAAD,CAA7C,EAAwD;AACpD,qBAAKb,SAAL,CAAe2B,MAAM,CAACd,OAAO,CAAC,OAAD,CAAR,CAArB,IAA2CA,OAAO,CAAC,QAAD,CAAP,CAAkB,CAAlB,CAA3C;AACH;AACJ,aAJD;AAKH;;AACD,eAAKhB,SAAL,CAAegB,OAAO,CAAC,OAAD,CAAtB,IAAmCA,OAAnC,CApCS,CAqCT;;AACA,eAAKe,eAAL,CAAqB,IAArB,EAtCS,CAuCT;;AACA;AAAA;AAAA,4CAAaC,QAAb,CAAsB;AAAA;AAAA,oCAASC,wBAA/B,EAAyDjB,OAAO,CAAC,OAAD,CAAhE;AACAkB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKhC,SAAxC;AACA+B,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKnC,SAAjD;AACH;AACD;AACJ;AACA;AACA;;;AACI+B,QAAAA,eAAe,CAACK,YAAqB,GAAG,KAAzB,EAAyC;AACpD,cAAIC,GAAG,GAAG,KAAV;AACA,iBAAOA,GAAP;AACH;AACD;;;AACQC,QAAAA,eAAe,CAACC,GAAD,EAAMC,IAAN,EAAY;AAC/BD,UAAAA,GAAG,GAAGA,GAAG,IAAI,CAAb;AACAC,UAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,cAAIC,KAAK,GAAG,KAAKC,oBAAL,CAA0BH,GAA1B,CAAZ;;AACA,cAAIE,KAAJ,EAAW;AACPA,YAAAA,KAAK,CAAC,QAAD,CAAL,GAAkB;AAAA;AAAA,0CAAWE,WAAX,CAAuBC,MAAzC,CADO,CAC0C;;AACjD,gBAAIC,MAAM,CAACJ,KAAK,CAAC,YAAD,CAAN,CAAN,IAA+B,CAA/B,IAAoCD,IAAI,CAAC,YAAD,CAA5C,EAA4D;AACxDC,cAAAA,KAAK,CAAC,YAAD,CAAL,GAAsBD,IAAI,CAAC,YAAD,CAA1B,CADwD,CACd;AAC7C;;AACDN,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,KAAK,CAAC,YAAD,CAA9B,EALO,CAMP;;AACA;AAAA;AAAA,8CAAaT,QAAb,CAAsB;AAAA;AAAA,sCAASc,mBAA/B,EAAoDL,KAApD;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIM,QAAAA,eAAe,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAC5BD,UAAAA,OAAO,GAAGH,MAAM,CAACG,OAAD,CAAhB;AACAC,UAAAA,KAAK,GAAGJ,MAAM,CAACI,KAAD,CAAd;;AACA,cAAIC,IAAI,GAAG,KAAKC,iBAAL,CAAuBH,OAAvB,CAAX;;AACA,cAAII,IAAI,GAAG,IAAX;;AACA,cAAIC,KAAK,GAAGH,IAAI,CAAC,OAAD,CAAJ,IAAiB,EAA7B;;AACA,eAAK,IAAI5B,GAAT,IAAgB+B,KAAhB,EAAuB;AACnB,gBAAInC,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCH,KAArC,EAA4C/B,GAA5C,KAAoD8B,IAAI,IAAI,IAAhE,EAAsE;AAClE,kBAAIK,KAAK,GAAGJ,KAAK,CAAC/B,GAAD,CAAjB;;AACA,kBAAImC,KAAK,CAAC,KAAD,CAAL,IAAgBR,KAApB,EAA2B;AACvB,oBAAIQ,KAAK,CAAC,UAAD,CAAL,IAAqBA,KAAK,CAAC,OAAD,CAA9B,EAAyC;AACrCL,kBAAAA,IAAI,GAAG,EAAP;AACAA,kBAAAA,IAAI,CAACM,KAAL,GAAaD,KAAK,CAAC,UAAD,CAAlB,CAFqC,CAEL;;AAChCL,kBAAAA,IAAI,CAACO,KAAL,GAAaF,KAAK,CAAC,OAAD,CAAlB,CAHqC,CAGR;;AAC7BL,kBAAAA,IAAI,CAACQ,OAAL,GAAeH,KAAK,CAAClB,GAArB;AACAa,kBAAAA,IAAI,CAACxC,IAAL,GAAY6C,KAAK,CAAC7C,IAAlB;AACAwC,kBAAAA,IAAI,CAACS,IAAL,GAAYJ,KAAK,CAACI,IAAlB;AACAT,kBAAAA,IAAI,CAACU,aAAL,GAAqBL,KAAK,CAACK,aAA3B;AACH;AACJ;AAGJ;AACJ;;AACD,cAAI,CAACV,IAAL,EAAW;AACPA,YAAAA,IAAI,GAAG;AAAEM,cAAAA,KAAK,EAAE,CAAT;AAAYC,cAAAA,KAAK,EAAE,CAAnB;AAAsBI,cAAAA,OAAO,EAAE;AAA/B,aAAP;AACH;;AACD,iBAAOX,IAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACIY,QAAAA,kBAAkB,CAAChB,OAAD,EAAUC,KAAV,EAAyB;AACvCD,UAAAA,OAAO,GAAGH,MAAM,CAACG,OAAD,CAAhB;AACAC,UAAAA,KAAK,GAAGJ,MAAM,CAACI,KAAD,CAAd;;AACA,cAAIgB,QAAQ,GAAG,KAAKd,iBAAL,CAAuBH,OAAvB,CAAf;;AACA,cAAII,IAAI,GAAGa,QAAQ,CAAC,OAAD,CAAR,IAAqB,EAAhC;AACA,cAAI5B,GAAG,GAAG,IAAV;;AACA,eAAK,IAAIf,GAAT,IAAgB8B,IAAhB,EAAsB;AAClB,gBAAIlC,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,IAArC,EAA2C9B,GAA3C,KAAmDe,GAAG,IAAI,IAA9D,EAAoE;AAChE,mBAAK,IAAI6B,CAAT,IAAcd,IAAI,CAAC9B,GAAD,CAAJ,CAAU,KAAV,CAAd,EAAgC;AAC5B,oBAAIJ,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,IAAI,CAAC9B,GAAD,CAAJ,CAAU,KAAV,CAArC,EAAuD4C,CAAvD,KAA6D7B,GAAG,IAAI,IAAxE,EAA8E;AAC1E,sBAAI8B,GAAG,GAAGf,IAAI,CAAC9B,GAAD,CAAJ,CAAU,KAAV,EAAiB4C,CAAjB,CAAV;;AACA,sBAAIC,GAAG,CAAC,OAAD,CAAH,IAAgBlB,KAApB,EAA2B;AACvBZ,oBAAAA,GAAG,GAAGe,IAAI,CAAC9B,GAAD,CAAV;AACH;AACJ;AACJ;AAEJ;AACJ;;AACD,iBAAOe,GAAG,IAAI,EAAd;AACH;AACD;AACJ;AACA;AACA;AACA;AACI;;;AACA+B,QAAAA,sBAAsB,CAACzD,KAAD,EAAQ4B,GAAR,EAAa;AAC/B5B,UAAAA,KAAK,GAAGkC,MAAM,CAAClC,KAAD,CAAd;AACA4B,UAAAA,GAAG,GAAGM,MAAM,CAACN,GAAD,CAAZ,CAF+B,CAG/B;;AACA,cAAIa,IAAI,GAAG,EAAX;AACAlC,UAAAA,MAAM,CAACC,IAAP,CAAY,KAAKnB,SAAjB,EAA4BqB,OAA5B,CAAoCgD,MAAM,IAAI;AAC1C,gBAAI1D,KAAK,IAAI0D,MAAb,EAAqB;AACjB,kBAAIC,UAAU,GAAG,KAAKtE,SAAL,CAAeW,KAAf,EAAsB,OAAtB,CAAjB;AACAO,cAAAA,MAAM,CAACC,IAAP,CAAYmD,UAAZ,EAAwBjD,OAAxB,CAAgCkD,IAAI,IAAI;AACpC,oBAAIhC,GAAG,IAAIgC,IAAX,EAAiB;AACbnB,kBAAAA,IAAI,GAAG;AACHM,oBAAAA,KAAK,EAAEY,UAAU,CAAC/B,GAAD,CAAV,CAAgB,UAAhB,CADJ;AAEHoB,oBAAAA,KAAK,EAAEW,UAAU,CAAC/B,GAAD,CAAV,CAAgB,OAAhB,CAFJ;AAGHwB,oBAAAA,OAAO,EAAE,KAHN;AAIHnD,oBAAAA,IAAI,EAAE0D,UAAU,CAAC/B,GAAD,CAAV,CAAgB,MAAhB,CAJH;AAKHsB,oBAAAA,IAAI,EAAES,UAAU,CAAC/B,GAAD,CAAV,CAAgB,MAAhB,CALH;AAMHiC,oBAAAA,aAAa,EAAEF,UAAU,CAAC/B,GAAD,CAAV,CAAgB,eAAhB,CANZ;AAM6C;AAChDkC,oBAAAA,QAAQ,EAAEH,UAAU,CAAC/B,GAAD,CAAV,CAAgB,eAAhB,CAPP;AAOwC;AAC3CmC,oBAAAA,QAAQ,EAAEJ,UAAU,CAAC/B,GAAD,CAAV,CAAgB,UAAhB;AARP,mBAAP;AAWH;AACJ,eAdD;AAeH;AACJ,WAnBD;AAqBA,iBAAOa,IAAI,IAAI;AAAEM,YAAAA,KAAK,EAAE,CAAT;AAAYC,YAAAA,KAAK,EAAE,CAAnB;AAAsBI,YAAAA,OAAO,EAAE;AAA/B,WAAf;AACH;AAED;AACJ;AACA;AACA;;;AACIY,QAAAA,eAAe,CAACpC,GAAD,EAAe;AAC1BA,UAAAA,GAAG,GAAGM,MAAM,CAACN,GAAD,CAAZ;;AACA,cAAIqC,KAAK,CAACrC,GAAD,CAAT,EAAgB;AACZ,mBAAO,KAAP;AACH;;AACD,cAAIF,GAAG,GAAG,KAAV;;AACA,eAAK,IAAIX,GAAT,IAAgB,KAAK1B,SAArB,EAAgC;AAC5B,gBAAIkB,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKxD,SAA1C,EAAqD0B,GAArD,KAA6DW,GAAG,IAAI,KAAxE,EAA+E;AAC3E,kBAAIwC,CAAC,GAAG,KAAK7E,SAAL,CAAe0B,GAAf,CAAR;;AACA,kBAAI2B,KAAK,GAAGwB,CAAC,CAAC,OAAD,CAAD,IAAc,EAA1B;;AACA,mBAAK,IAAIvD,GAAT,IAAgB+B,KAAhB,EAAuB;AACnB,oBAAInC,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCH,KAArC,EAA4C/B,GAA5C,KAAoDe,GAAG,IAAI,KAA/D,EAAsE;AAClE,sBAAI8B,GAAG,GAAGd,KAAK,CAAC/B,GAAD,CAAf;;AACA,sBAAI6C,GAAG,CAAC,KAAD,CAAH,IAAc5B,GAAlB,EAAuB;AACnBF,oBAAAA,GAAG,GAAG,IAAN;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,iBAAOA,GAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIK,QAAAA,oBAAoB,CAACH,GAAD,EAAM;AACtBA,UAAAA,GAAG,GAAGM,MAAM,CAACN,GAAD,CAAZ;;AACA,cAAIA,GAAG,IAAI,CAAX,EAAc;AACV,mBAAO,IAAP;AACH;;AACD,cAAIuC,SAAS,GAAG,KAAhB;AACA,cAAIC,IAAI,GAAG,EAAX;AACA7D,UAAAA,MAAM,CAACC,IAAP,CAAY,KAAKhB,SAAjB,EAA4BkB,OAA5B,CAAoCC,GAAG,IAAI;AACvC,gBAAIJ,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKrD,SAA1C,EAAqDmB,GAArD,KAA6DwD,SAAS,IAAI,KAA9E,EAAqF;AACjF,kBAAID,CAAC,GAAG,KAAK1E,SAAL,CAAemB,GAAf,CAAR;;AACA,kBAAI+B,KAAK,GAAGwB,CAAC,CAAC,OAAD,CAAD,IAAc,EAA1B;;AACA3D,cAAAA,MAAM,CAACC,IAAP,CAAYkC,KAAZ,EAAmBhC,OAAnB,CAA2B2D,IAAI,IAAI;AAC/B,oBAAI9D,MAAM,CAACoC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCH,KAArC,EAA4C2B,IAA5C,KAAqDF,SAAS,IAAI,KAAtE,EAA6E;AACzE,sBAAIE,IAAI,IAAIzC,GAAZ,EAAiB;AACbuC,oBAAAA,SAAS,GAAG,IAAZ;AACAC,oBAAAA,IAAI,GAAG1B,KAAK,CAAC2B,IAAD,CAAZ;AACH;AACJ;AACJ,eAPD;AAQH;AACJ,WAbD;AAcA,iBAAOD,IAAP;AACH;AACD;AACJ;AACA;;;AACIE,QAAAA,WAAW,CAACzC,IAAD,EAAO;AACd,eAAK,IAAI0C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1C,IAAI,CAAChB,MAAzB,EAAiC0D,CAAC,EAAlC,EAAsC;AAClC,gBAAIzB,KAAK,GAAGjB,IAAI,CAAC0C,CAAD,CAAhB;;AACA,iBAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAAC,KAAD,CAAL,CAAajC,MAAjC,EAAyC0C,CAAC,EAA1C,EAA8C;AAC1C,kBAAIW,CAAC,GAAGpB,KAAK,CAAC,KAAD,CAAL,CAAaS,CAAb,CAAR,CAD0C,CAE1C;;AACA,kBAAI;AAAA;AAAA,wCAASiB,KAAT,CAAeN,CAAC,CAAC,OAAD,CAAhB,KAA8B,IAAlC,EAAwC;AACpCA,gBAAAA,CAAC,CAAC,UAAD,CAAD,GAAgBA,CAAC,CAAC,UAAD,CAAD,GAAgB,GAAhC;AACAA,gBAAAA,CAAC,CAAC,OAAD,CAAD,GAAaA,CAAC,CAAC,OAAD,CAAD,GAAa,GAA1B;AACH;;AAAA;AACJ;AACJ;AACJ;AACD;AACJ;AACA;AACA;;;AACIO,QAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,cAAIA,KAAK,IAAI,KAAKnF,WAAL,CAAiBmF,KAAjB,CAAb,EAAsC;AAClC,gBAAIjC,IAAgB,GAAG,KAAKlD,WAAL,CAAiBmF,KAAjB,CAAvB;AACA,mBAAOjC,IAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;AACYD,QAAAA,iBAAiB,CAACH,OAAD,EAAU;AAC/BA,UAAAA,OAAO,GAAGlB,MAAM,CAACkB,OAAD,CAAhB;;AACA,cAAIA,OAAO,IAAI,KAAKhD,SAAhB,IAA6B,KAAKA,SAAL,CAAegD,OAAf,CAAjC,EAA0D;AACtD,gBAAII,IAAI,GAAG,KAAKpD,SAAL,CAAegD,OAAf,CAAX;AACA,mBAAO;AAAA;AAAA,gCAAM/B,KAAN,CAAYmC,IAAZ,CAAP;AACH;;AACD,iBAAO,EAAP;AACH;AAED;AACJ;AACA;AACA;;;AACIkC,QAAAA,WAAW,CAACtC,OAAD,EAAkB;AACzB,cAAIuC,gBAAgB,GAAG,EAAvB;;AACA,cAAIC,SAAS,GAAG,KAAKrC,iBAAL,CAAuBH,OAAvB,CAAhB;;AACA,cAAI,CAAC;AAAA;AAAA,8BAAMjC,aAAN,CAAoByE,SAAS,CAAC,OAAD,CAA7B,CAAL,EAA8C;AAC1CtE,YAAAA,MAAM,CAACC,IAAP,CAAYqE,SAAS,CAAC,OAAD,CAArB,EAAgCnE,OAAhC,CAAwCC,GAAG,IAAI;AAC3CiE,cAAAA,gBAAgB,CAAC9D,IAAjB,CAAsB+D,SAAS,CAAC,OAAD,CAAT,CAAmBlE,GAAnB,CAAtB;AACH,aAFD;AAGH;;AACD,iBAAOiE,gBAAP;AACH;AACD;;;AACAE,QAAAA,YAAY,GAAG;AACX,cAAIrC,IAAI,GAAG,IAAX;AACA,iBAAO,EAAP,CAFW,CAEF;AACZ;AACD;;;AACAsC,QAAAA,aAAa,CAACnD,GAAD,EAAMoD,QAAN,EAAgB;AACzB,cAAIpD,GAAG,IAAI,IAAP,IAAe,CAACoD,QAApB,EAA8B;AAC1B;AACH;;AACD,eAAKrD,eAAL,CAAqBC,GAArB,EAA0BoD,QAA1B;AACH;AAED;;;AACAC,QAAAA,WAAW,GAAG;AACV,iBAAO,KAAK5F,SAAZ;AACH;;AA1UmC,O;;AAA3BV,MAAAA,Q,CAeFuG,S,GAAY;AACf,SAAC;AAAA;AAAA,sCAAWzE,cAAX,CAA0B0E,WAA3B,GAAyC,CAAC;AAAA;AAAA,sCAAWC,gBAAX,CAA4BD,WAA7B,CAD1B;AAEf,SAAC;AAAA;AAAA,sCAAW1E,cAAX,CAA0B4E,KAA3B,GAAmC,CAAC;AAAA;AAAA,sCAAWD,gBAAX,CAA4BC,KAA7B;AAFpB,O","sourcesContent":["import { AppEvent } from \"../config/AppEvent\";\nimport { GConstants } from \"../config/GameConstant\";\nimport { Utils } from \"../framework/Utils\";\nimport { EventManager } from \"../framework/manager/EventManager\";\nimport { BaseCache } from \"../framework/vc/BaseCache\";\nimport { PayAgent } from \"../proj/PayAgent\";\nimport { User } from \"./User\";\n/**\n * Name = ShopInfo\n * URL = db://assets/cache/ShopInfo.ts\n * Time = Mon May 09 2022 14:43:04 GMT+0800 (中国标准时间)\n * Author = xueya\n * 商城缓存\n */\nexport class ShopInfo extends BaseCache {\n    /** 用户类 */\n    private __User: User = null;\n\n    /** 所有物品列表，详情请见 GoodsListID */\n    private _shopList = {};\n    //商城大标签数据\n    private _shopTab = {};\n    //二级标签页数据\n    private _shopSubTab = {};\n    //商城数据\n    private _shopData = {};\n\n    /** 菜单归属配置 */\n    //没有子分类时默认展示主类\n    static TabConfig = {\n        [GConstants.ShopBigTabType.SILVER_COIN]: [GConstants.ShopSmallTabType.SILVER_COIN],\n        [GConstants.ShopBigTabType.PROPS]: [GConstants.ShopSmallTabType.PROPS],\n    }\n    //实例化\n    constructor(superClass) {\n        super(\"ShopInfo\")\n        this.__User = superClass;\n    };\n    // 获取商城大类\n    get shopTab() {\n        return this._shopTab;\n    }\n    /** 无大类小类返回，更具场景生成所需数据 */\n    getGoodsTypeNameByScene(type) {\n        let sceneName = '银币'\n        if (type) {\n            let sceneData = GConstants.getGoodsTypeNameByScene.find(item => { return item.scene == type })\n            sceneData ? sceneName = sceneData.name : \"类型有误\"\n        }\n        return sceneName\n    }\n\n    /** 更新商城数据 */\n    update(body) {\n        if (Utils.table_isEmpty(body) || body[\"scene\"] == null) {\n            return;\n        }\n        let newBody = Utils.clone(body);\n\n        //处理大标签数据 本地有映射再添加\n        Object.keys(GConstants.ShopBigTabType).forEach(key => {\n            if (GConstants.ShopBigTabType[key] == newBody[\"scene\"]) {\n                this._shopTab[newBody[\"scene\"]] = newBody;\n            }\n        })\n        //处理子标签\n        newBody[\"subTab\"] = Utils.table_verify(newBody[\"subTab\"], true);\n        if (newBody[\"subTab\"].length > 1) {\n            //存在子类 此处暂时为空 暂不处理\n        } else {\n            newBody[\"subTab\"] = []\n            //不存在子类增加一个默认\n            newBody[\"subTab\"].push(\n                {\n                    cid: newBody[\"scene\"],\n                    order: 1,\n                    name: this.getGoodsTypeNameByScene(newBody[\"scene\"]),\n                    gList: newBody.ginfo\n                }\n            )\n            //二级标签\n            this._shopSubTab[newBody[\"scene\"]] = newBody[\"subTab\"]\n            //按照二级分类储存数据\n            Object.keys(GConstants.ShopBigTabType).forEach(key => {\n                if (GConstants.ShopBigTabType[key] == newBody[\"scene\"]) {\n                    this._shopData[String(newBody[\"scene\"])] = newBody[\"subTab\"][0];\n                }\n            })\n        }\n        this._shopList[newBody[\"scene\"]] = newBody;\n        //检查免费商品\n        this.isExitFreeGoods(true);\n        //通知：商城列表数据有更新\n        EventManager.dispatch(AppEvent.ACTIVITY_SHOPLIST_UPDATE, newBody[\"scene\"]);\n        console.log('商城数据：this._shopData', this._shopData)\n        console.log('所有商城意义下的数据：this._shopList==>', this._shopList)\n    }\n    /**\n     * Shop:是否有免费商品\n     * @params needDispatch大厅商城入口需要显示红点 默认 false 不显示\n     */\n    isExitFreeGoods(needDispatch: boolean = false): boolean {\n        let res = false;\n        return res;\n    }\n    /** 购买分享看视频成功，刷新商品的信息 */\n    private _onGoodsBuySucc(gid, data) {\n        gid = gid || 0;\n        data = data || {};\n        let goods = this.getShopDataByGoodsID(gid);\n        if (goods) {\n            goods[\"isHave\"] = GConstants.goodsIsHave.isHave; //标记为已\n            if (Number(goods[\"bought_num\"]) >= 0 && data['finish_num']) {\n                goods[\"bought_num\"] = data['finish_num']; //购买/分享获得的最新次数\n            }\n            console.log('当前商品已分享次数', goods[\"bought_num\"])\n            //通知:商品有更新\n            EventManager.dispatch(AppEvent.NOTIFY_GOODS_CHANGE, goods);\n        }\n    }\n\n    /**\n     * 获取商城大/小类型和物品id对应的商品价格信息\n     *--1-银币 3-道具 \n     * @param subType Number 商城子类型 详见GConstants.ShopSmallTabType\n     * @param resId Number 物品id\n     */\n    getPriceByResId(subType, resId) {\n        subType = Number(subType);\n        resId = Number(resId);\n        let List = this._getDataBySubType(subType);\n        let temp = null;\n        let _temp = List[\"ginfo\"] || {};\n        for (let key in _temp) {\n            if (Object.prototype.hasOwnProperty.call(_temp, key) && temp == null) {\n                let value = _temp[key];\n                if (value['gid'] == resId) {\n                    if (value['currency'] && value['price']) {\n                        temp = {};\n                        temp.payID = value['currency']; //支付方式\n                        temp.price = value['price']; //支付价格\n                        temp.goodsID = value.gid;\n                        temp.name = value.name;\n                        temp.icon = value.icon;\n                        temp.limit_buy_num = value.limit_buy_num;\n                    }\n                }\n\n\n            }\n        }\n        if (!temp) {\n            temp = { payID: 0, price: 0, isEmpty: true };\n        }\n        return temp;\n    }\n\n    /**\n     * 获取商城子类型和商id对应的商品信息\n     * --小标签 --1- 3\n     * @param subType \n     * @param resId \n     */\n    getGoodInfoByResId(subType, resId): object {\n        subType = Number(subType);\n        resId = Number(resId);\n        let roleList = this._getDataBySubType(subType);\n        let temp = roleList[\"gList\"] || {};\n        let res = null;\n        for (let key in temp) {\n            if (Object.prototype.hasOwnProperty.call(temp, key) && res == null) {\n                for (let m in temp[key][\"res\"]) {\n                    if (Object.prototype.hasOwnProperty.call(temp[key][\"res\"], m) && res == null) {\n                        let val = temp[key][\"res\"][m];\n                        if (val[\"resID\"] == resId) {\n                            res = temp[key];\n                        }\n                    }\n                }\n\n            }\n        }\n        return res || {};\n    }\n    /**\n     * 根据商品id返回商品价格信息\n     * @param scene Number 某个场景/类别下的商品\n     * @param gid Number\n     */\n    //返回支付付的人民币的话会不会配置多个支付？\n    getPriceByGoodsSceneId(scene, gid) {\n        scene = Number(scene)\n        gid = Number(gid);\n        //考虑配置多个商品\n        let temp = {};\n        Object.keys(this._shopList).forEach(_scene => {\n            if (scene == _scene) {\n                let _goodsList = this._shopList[scene]['ginfo']\n                Object.keys(_goodsList).forEach(_gid => {\n                    if (gid == _gid) {\n                        temp = {\n                            payID: _goodsList[gid]['currency'],\n                            price: _goodsList[gid]['price'],\n                            isEmpty: false,\n                            name: _goodsList[gid]['name'],\n                            icon: _goodsList[gid]['icon'],\n                            limit_buy_way: _goodsList[gid]['limit_buy_way'],//限购类型\n                            limitNum: _goodsList[gid]['limit_buy_num'],//限购数量\n                            share_id: _goodsList[gid]['share_id'],\n                        }\n\n                    }\n                })\n            }\n        })\n\n        return temp || { payID: 0, price: 0, isEmpty: true };\n    }\n\n    /**\n     * 根据商品id返回是否有该商品\n     * @param gid Number\n     */\n    isExitByGoodsid(gid): boolean {\n        gid = Number(gid);\n        if (isNaN(gid)) {\n            return false;\n        }\n        let res = false;\n        for (let cid in this._shopList) {\n            if (Object.prototype.hasOwnProperty.call(this._shopList, cid) && res == false) {\n                let v = this._shopList[cid];\n                let _temp = v[\"ginfo\"] || {};\n                for (let key in _temp) {\n                    if (Object.prototype.hasOwnProperty.call(_temp, key) && res == false) {\n                        let val = _temp[key];\n                        if (val[\"gid\"] == gid) {\n                            res = true;\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * 获取商品id对应的商品信息\n     * @param gid Number\n     * @returns \n     */\n    getShopDataByGoodsID(gid) {\n        gid = Number(gid);\n        if (gid <= 0) {\n            return null\n        }\n        let findGoods = false;\n        let info = {};\n        Object.keys(this._shopData).forEach(key => {\n            if (Object.prototype.hasOwnProperty.call(this._shopData, key) && findGoods == false) {\n                let v = this._shopData[key];\n                let _temp = v[\"gList\"] || {};\n                Object.keys(_temp).forEach(key2 => {\n                    if (Object.prototype.hasOwnProperty.call(_temp, key2) && findGoods == false) {\n                        if (key2 == gid) {\n                            findGoods = true;\n                            info = _temp[key2]\n                        }\n                    }\n                })\n            }\n        })\n        return info;\n    }\n    /**\n     * Shop:解析RBM支付的价格\n     */\n    detailPrice(data) {\n        for (let i = 0; i < data.length; i++) {\n            let value = data[i];\n            for (let m = 0; m < value[\"pay\"].length; m++) {\n                let v = value[\"pay\"][m];\n                //只有人民币的才需要除一百\n                if (PayAgent.isRMB(v[\"payID\"]) == true) {\n                    v[\"oldPrice\"] = v[\"oldPrice\"] / 100;\n                    v[\"price\"] = v[\"price\"] / 100;\n                };\n            }\n        }\n    }\n    /**\n     * Shop:获取大标签下二级菜单信息\n     * @param _type 等于pageID\n     */\n    getSubTbs(_type) {\n        if (_type && this._shopSubTab[_type]) {\n            let temp: Array<any> = this._shopSubTab[_type];\n            return temp;\n        }\n    }\n    /**\n     * Shop:通过大/小标签类型获取对应的列表数据全局的shopList\n     * @param subType \n     * \n     */\n    private _getDataBySubType(subType) {\n        subType = String(subType);\n        if (subType && this._shopList && this._shopList[subType]) {\n            let temp = this._shopList[subType];\n            return Utils.clone(temp);\n        }\n        return {};\n    }\n\n    /**\n     * 获取大/子类型菜单下的数据列表\n     * @param subType 当前不存在子类默认使用大类查找数据\n     */\n    getDataList(subType: number) {\n        let goodsDataItemArr = []\n        let goodsList = this._getDataBySubType(subType);\n        if (!Utils.table_isEmpty(goodsList['ginfo'])) {\n            Object.keys(goodsList['ginfo']).forEach(key => {\n                goodsDataItemArr.push(goodsList['ginfo'][key])\n            })\n        }\n        return goodsDataItemArr;\n    }\n    /** 获取限时礼包数据 */\n    getLimitGift() {\n        let temp = null;\n        return {}//temp || {};\n    }\n    /** 兑换、RMB购买、分享、看视频，其它任务等获得奖励时 */\n    onUpdateGoods(gid, respData) {\n        if (gid == null || !respData) {\n            return;\n        }\n        this._onGoodsBuySucc(gid, respData);\n    }\n\n    /** 获取商品配置 */\n    getShopList() {\n        return this._shopList;\n    }\n\n\n\n\n\n}"]}