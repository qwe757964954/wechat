{"version":3,"sources":["file:///Users/mac/work/WXGame_FlySmallChick/assets/framework/manager/ResLoaderManager.ts"],"names":["instantiate","Prefab","_decorator","AppEvent","resLoader","BaseControll","ccclass","ResLoaderManager","__preLoadMap","Map","getInstance","_instance","setMaxConcurrency","init","clear","onInitModuleEvent","addModelListener","SYS_RELOADD_LOCAL","receivePreLoaderRes","SYS_RELOADD_REMOTE","receivePreLoaderRemoteRes","SYS_RELOADD_RECORD_REMOVE","receiveremovePreLoaderRecord","event","param","getPreLoaderRes","bundle","path","resType","callFunc","isReload","getPreLoaderRemoteRes","removePreLoaderRecord","getKey","key","callback","self","delete","preRes","get","undefined","load","err","res","set","loadRemote","ext"],"mappings":"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","sourcesContent":["import { instantiate, Prefab, _decorator } from 'cc';\nimport { AppEvent } from '../../config/AppEvent';\nimport { inf_ResLoader } from '../InterfaceDefines';\nimport { resLoader } from '../loader/ResLoader';\nimport { BaseControll } from '../vc/BaseController';\nconst { ccclass } = _decorator;\n\n/**\n * Name = ResLoaderManager\n * URL = db://assets/framework/manager/ResLoaderManager.ts\n * Time = Tue Sep 20 2022 14:20:23 GMT+0800 (中国标准时间)\n * Author = Tomoe\n *\n * Life: onLoad-->onEnable->start->update->lateUpdate->onDisable->onDestroy\n * 资源加载统一管理\n */\n\n@ccclass('ResLoaderManager')\nexport class ResLoaderManager extends BaseControll {\n\n    private static _instance: ResLoaderManager;\n    public static getInstance(): ResLoaderManager {\n        if (!this._instance || this._instance == null) {\n            this._instance = new ResLoaderManager(\"ResLoaderManager\");\n        }\n        resLoader.setMaxConcurrency(6);\n        return this._instance;\n    }\n    public static init(): ResLoaderManager {\n        if (this._instance) {\n            this._instance.clear();\n        }\n        this._instance = null\n        ResLoaderManager.getInstance();\n        return\n    }\n\n    /** 所有预加载的资源 */\n    private __preLoadMap = new Map();\n\n    /** 初始化模块事件 */\n    protected onInitModuleEvent() {\n        //加载本地资源\n        this.addModelListener(AppEvent.SYS_RELOADD_LOCAL, this.receivePreLoaderRes);\n        //加资远端资源\n        this.addModelListener(AppEvent.SYS_RELOADD_REMOTE, this.receivePreLoaderRemoteRes);\n        //清理记录根据key\n        this.addModelListener(AppEvent.SYS_RELOADD_RECORD_REMOVE, this.receiveremovePreLoaderRecord);\n    }\n\n    /**\n     * 本地资源加载\n     * @param event \n     * @param param 详见inf_ResLoader\n     */\n    private receivePreLoaderRes(event, param: inf_ResLoader) {\n        this.getPreLoaderRes(param.bundle, param.path, param.resType, param.callFunc, param.isReload);\n    }\n    /**\n     * 远端资源的加载\n     * @param event \n     * @param param  详见inf_ResLoader\n     */\n    private receivePreLoaderRemoteRes(event, param: inf_ResLoader) {\n        this.getPreLoaderRemoteRes(param.path, param.resType, param.callFunc, param.isReload);\n    }\n    /**\n     * 移除已加载的记录\n     * @param event \n     * @param param \n     */\n    private receiveremovePreLoaderRecord(event, param: inf_ResLoader) {\n        this.removePreLoaderRecord(param.bundle, param.path, param.resType);\n    }\n\n\n    /** 获取资源key */\n    public getKey(bundle, path, resType = null) {\n        bundle = (bundle != null ? bundle : \"resources\");\n        let key = bundle + \"|\" + path;\n        if (resType) {\n            key = key + \"|\" + resType;\n        }\n        return key;\n    }\n    /**\n     * 获取预加载的资源\n     * @param bundle 包名\n     * @param path 资源路径\n     * @param resType 资源类型\n     * @param callback 成功回调\n     * @param isReload 是否重新加载 默认为false\n     */\n    public getPreLoaderRes(bundle, path, resType = null, callback = null, isReload = false) {\n        if (!path) {\n            return;\n        }\n        let self = this;\n\n        let key = this.getKey(bundle, path, resType);\n\n        if (isReload) {\n            self.__preLoadMap.delete(key);\n        }\n        let preRes = self.__preLoadMap.get(key);\n\n        if (preRes != null && preRes != undefined) {\n            if (callback) {\n                if (resType == Prefab) {\n                    callback(instantiate(preRes), key);\n                    self.__preLoadMap.delete(key);\n                } else {\n                    callback(preRes, key);\n                }\n            }\n        } else {\n            if (resType) {\n                resLoader.load(bundle, path, resType, (err, res) => {\n                    if (err) {\n                        return;\n                    }\n                    self.__preLoadMap.set(key, res);\n                    if (callback) {\n                        if (resType == Prefab) {\n                            callback(instantiate(res), key);\n                            self.__preLoadMap.delete(key);\n                        } else {\n                            callback(res, key);\n                        }\n                    }\n                })\n            } else {\n                resLoader.load(bundle, path, (err, res) => {\n                    if (err) {\n                        return;\n                    }\n                    self.__preLoadMap.set(key, res);\n                    if (callback) {\n                        if (resType == Prefab) {\n                            callback(instantiate(res), key);\n                            self.__preLoadMap.delete(key);\n                        } else {\n                            callback(res, key);\n                        }\n                    }\n                })\n            }\n        }\n    }\n    /**\n     * 获取预加载的远端资源\n     * @param bundle 包名\n     * @param path 资源路径\n     * @param resType 资源类型 string 例'.jpg'\n     * @param callback 成功回调\n     * @param isReload 是否重新加载 默认为false\n     */\n    public getPreLoaderRemoteRes(path: string, resType = null, callback = null, isReload = false) {\n        if (!path) {\n            return;\n        }\n        let self = this;\n        let bundle = \"http\";\n\n        let key = this.getKey(bundle, path, resType);\n\n        if (isReload) {\n            self.__preLoadMap.delete(key);\n        }\n        let preRes = self.__preLoadMap.get(key);\n\n        if (preRes != null && preRes != undefined) {\n            if (callback) {\n                if (resType == Prefab) {\n                    callback(instantiate(preRes), key);\n                    self.__preLoadMap.delete(key);\n                } else {\n                    callback(preRes, key);\n                }\n            }\n        } else {\n            if (resType) {\n                resLoader.loadRemote(path, { ext: resType }, (err, res) => {\n                    if (err) {\n                        return;\n                    }\n                    self.__preLoadMap.set(key, res);\n                    if (callback) {\n                        if (resType == Prefab) {\n                            callback(instantiate(res), key);\n                            self.__preLoadMap.delete(key);\n                        } else {\n                            callback(res, key);\n                        }\n                    }\n                })\n            } else {\n                resLoader.loadRemote(path, (err, res) => {\n                    if (err) {\n                        return;\n                    }\n                    self.__preLoadMap.set(key, res);\n                    if (callback) {\n                        if (resType == Prefab) {\n                            callback(instantiate(res), key);\n                            self.__preLoadMap.delete(key);\n                        } else {\n                            callback(res, key);\n                        }\n                    }\n                })\n            }\n        }\n    }\n    /**\n     * 清理一条加载记录\n     * @param bundle 包名或key\n     * @param path 路径名 可为null时 bundle为key\n     * @param resType \n     */\n    public removePreLoaderRecord(bundle, path = null, resType = null) {\n        let key = null;\n        if (bundle && path) {\n            key = this.getKey(bundle, path, resType);\n        } else if (bundle && path == null) {\n            key = bundle;\n        }\n        if (key) {\n            this.__preLoadMap.delete(key);\n        }\n    }\n\n}"]}