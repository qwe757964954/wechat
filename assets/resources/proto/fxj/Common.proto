syntax = "proto2";
package Common;

//胡牌信息
message HuInfo
{
	optional int32 card = 1;//能胡的牌
	optional int32 huType = 2;//胡的类型
	optional int32 remain = 3;//剩余张数
	optional int32 totalFan = 4;//番数
	optional int32 totalBei = 5;//倍数
	repeated FanInfo fanInfo = 6;//番信息
}
//听牌信息
message TingInfo
{
	optional int32 card = 1;//能听的牌(打出此牌后可以胡)
	repeated HuInfo info = 2;//听牌后的胡牌信息(听一张牌可以胡多张)
}

//番信息
message FanInfo
{
	optional string type = 1;//番类型(code)
	optional int32 fan = 2;//番数
	optional int32 bei = 3;//倍数
}

//结算信息
message SettleInfo
{
	optional int32 fan = 1;//总番数
	optional int32 bei = 2;//总倍数
	optional int32 bWin = 3;//是否是胡牌的人(0，1)
	repeated FanInfo fanInfo = 4;//番信息
	optional int64 turnExp = 5;//本局获得经验
	optional int64 winMoney = 6;//本局获得钱(未扣台费)
	optional int64 turnMoney = 7;//本局获得钱(已扣台费)
	repeated SettleMoney moneyItemList = 8;//各种类型结算的钱
	optional int32 isBroked = 9;//是否破产(0，1)
	optional int32 isLessWin = 10;//是否触发以小博大(0，1)
	optional int32 isTing = 11;//是否听牌(0，1)
	optional int32 totalFan = 12;//总番
	optional int32 fengDingFan = 13;//封顶番
}

//结算钱数
message SettleMoney
{
	optional string name = 1;//类型，名字
	optional int64 totalMoney = 2;//钱数
	repeated int64 p2pMoney = 3;//跟各个玩家之间的结算
	optional int32 isShow = 4;//是否显示该结算(0，1)
}

//牌(重连时，要知道每张牌是否该显示在自己的牌堆里)
message Card
{
	optional int32 card = 1;//牌
	optional int32 status = 2;//牌是否被碰杠吃走了，如果为1则是被碰杠吃走了，不应该显示在自己的牌堆里。
}

//牌列表
message Cards
{
	repeated int32 cards = 1;//牌
}

//手牌操作信息
message HandOpGroup
{
	optional int64 opCode = 1;//是吃、碰、杠
	repeated int32 opCards = 2;//牌列表
}

//操作组
message OpGroup
{
	optional int64 opCode = 1;//操作码
	repeated Cards cardsList = 2;//牌列表
}

//玩家
message PlayerInfo
{
	optional int32 seatId = 1;//座位号
	optional int64 userId = 2;//userId
	optional int32 isReady = 3;//是否准备(0，1)
	optional int32 isAi = 4;//是否托管(0，1)
	optional string strUserInfo = 5;//信息
	optional int64 money = 6;//钱

	optional int32 tingOpcode = 7;//听牌操作码(0表示未听牌)
	optional int32 tryTingOpcode = 8;//点击了哪种听的按钮(0表示未点击)
	optional int32 cardCount = 9;//手牌数量
	repeated int32 handCards = 10;//手牌
	repeated HandOpGroup opGroups = 11;// 操作的信息(有序)
	repeated Card  outCards = 12;//所出的牌
	optional int32 status = 13;//玩家状态(0:未胡牌，1:已胡牌，2:已认输)
	optional int32 huCard = 14;//胡牌玩家胡的牌
	optional string opExtend = 15;//操作扩展字段
	optional string huInfoList = 16;//血流胡牌信息列表
	optional int32 isHu = 17;//玩家是否胡牌(0，1)
}

//定时器信息
message TimerInfo
{
	optional int32 timerId = 1; //定时器id
	optional int32 timeout = 2; //定时器时长
}

message RoomCfg {
	optional int32 baseChip = 1; //底注
	optional int32 level = 2; //场次
	optional int32 fee = 3; //台费
	optional int32 baseChipDi = 4; //底钱
}

message GameInfo {
	optional int32 bankSeatId = 1; //庄家座位号
	repeated int32 dices = 2;//色子数组
	optional  int32 remainCardCount = 3; //剩余麻将数
	repeated Common.TimerInfo timerInfoList = 4;//客户端需要的定时器信息
	optional int32 mySeatId = 5;//我的座位号
	optional int32 totalCardCount = 6;//总的麻将子数
	repeated int32 fanGangPai = 7;//翻杠牌数据
	optional string extendInfo = 8; //扩展信息（通过json转换）
}

//房间信息
message RoomInfo {
	optional RoomCfg roomCfg = 1; //房间配置信息
	optional GameInfo gameInfo = 2;//游戏数据
}


//实时结算结算钱数
message OnceSettleMoney
{
	optional int32 seatId = 1;//座位号
	optional int64 userId = 2;//userId
	optional int64 money = 3;//本次结算后该玩家当前的钱数
	optional int64 winMoney = 4;//本次结算该玩家获得的钱数(+赢钱-输钱)
	repeated int64 p2pMoney = 5;//本次结算该玩家跟各个玩家之间的结算明细
	optional int32 isBroked = 6;//是否破产(0，1)
	optional int32 isLessWin = 7;//是否触发以小博大(0，1)
	optional int32 fan = 8;//总番数(查叫，查花猪，胡牌的时候会赋值)
	optional int32 bei = 9;//总倍数(查叫，查花猪，胡牌的时候会赋值)
	repeated FanInfo fanInfo = 10;//番信息(查叫，胡牌的时候会赋值)
	optional string name = 11;//结算类型，名字
	optional int32 isTing = 12;//是否听牌(0，1)
}

//游戏状态 开始还是结束 对应gamestart 和 gameover 只能在游戏开始和游戏结束 使用切记
message GameState
{
	optional int32 state = 1;//游戏状态
	repeated int32 yongPaiData = 2;//游戏用牌数据
}

//胡牌数据 提示前端一炮多响信息 用于展示实牌虚牌
message HuSeatInfo
{
	optional int32 paoSeatId = 1;//点炮玩家座位号
	repeated int32 huSeatList = 2;//胡牌玩家座位号
}